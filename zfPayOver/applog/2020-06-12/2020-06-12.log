2020-06-12 09:29:58 -Starting LongEcologicalApplication on PC-201905161910 with PID 22484 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-06-12 09:29:58 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-06-12 09:29:58 -No active profile set, falling back to default profiles: default
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'userMapper' and 'com.example.longecological.mapper.user.UserMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'userRoleMapper' and 'com.example.longecological.mapper.user.UserRoleMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:29:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-12 09:29:59 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-12 09:29:59 -Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2020-06-12 09:29:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-12 09:29:59 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-12 09:29:59 -Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020-06-12 09:29:59 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$7991bf1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-12 09:30:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$21d0091] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-12 09:30:00 -Tomcat initialized with port(s): 8080 (http)
2020-06-12 09:30:00 -Initializing ProtocolHandler ["http-nio-8080"]
2020-06-12 09:30:00 -Starting service [Tomcat]
2020-06-12 09:30:00 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-06-12 09:30:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;D:\360Downloads\apache-maven-3.6.1\apache-maven-3.6.1\bin;"C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;";;C:\Program Files\python;C:\Program Files\python\Scripts;;D:\BtSoft\panel\script;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-06-12 09:30:00 -Initializing Spring embedded WebApplicationContext
2020-06-12 09:30:00 -Root WebApplicationContext: initialization completed in 2469 ms
2020-06-12 09:30:00 -Filter xssFilter was not registered (disabled)
2020-06-12 09:30:01 -HikariPool-1 - Starting...
2020-06-12 09:30:01 -HikariPool-1 - Start completed.
2020-06-12 09:30:01 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-06-12 09:30:01 -HHH000412: Hibernate Core {5.3.7.Final}
2020-06-12 09:30:01 -HHH000206: hibernate.properties not found
2020-06-12 09:30:01 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-06-12 09:30:01 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-06-12 09:30:02 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-06-12 09:30:02 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'paramEncryptRequestBodyAdvice': Unsatisfied dependency expressed through field 'userInfoCacheService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userInfoCacheServiceImpl': Unsatisfied dependency expressed through field 'userInfoMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userInfoMapper' defined in file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\com\example\longecological\mapper\user\UserInfoMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
2020-06-12 09:30:02 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-06-12 09:30:02 -HikariPool-1 - Shutdown initiated...
2020-06-12 09:30:02 -HikariPool-1 - Shutdown completed.
2020-06-12 09:30:02 -Stopping service [Tomcat]
2020-06-12 09:30:02 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-12 09:30:02 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'paramEncryptRequestBodyAdvice': Unsatisfied dependency expressed through field 'userInfoCacheService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userInfoCacheServiceImpl': Unsatisfied dependency expressed through field 'userInfoMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userInfoMapper' defined in file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\com\example\longecological\mapper\user\UserInfoMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.example.longecological.LongEcologicalApplication.main(LongEcologicalApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userInfoCacheServiceImpl': Unsatisfied dependency expressed through field 'userInfoMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userInfoMapper' defined in file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\com\example\longecological\mapper\user\UserInfoMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userInfoMapper' defined in file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\com\example\longecological\mapper\user\UserInfoMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1362)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1467)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	... 56 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:547)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:153)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$34f151c1.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$34f151c1$$FastClassBySpringCGLIB$$f064daa4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$34f151c1.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 57 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\merchant\MerchantManageMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 70 common frames omitted
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.example.longecological.mapper.merchant.MerchantManageMapper.getTradeVolumeRankByDay
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:872)
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:844)
	at org.apache.ibatis.session.Configuration.addMappedStatement(Configuration.java:668)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:302)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 72 common frames omitted
2020-06-12 09:32:46 -Starting LongEcologicalApplication on PC-201905161910 with PID 7784 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-06-12 09:32:46 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-06-12 09:32:46 -No active profile set, falling back to default profiles: default
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'userMapper' and 'com.example.longecological.mapper.user.UserMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'userRoleMapper' and 'com.example.longecological.mapper.user.UserRoleMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-12 09:32:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-12 09:32:47 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-12 09:32:47 -Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2020-06-12 09:32:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-12 09:32:47 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-12 09:32:47 -Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
2020-06-12 09:32:47 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$9efe7c9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-12 09:32:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9982613e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-12 09:32:48 -Tomcat initialized with port(s): 8080 (http)
2020-06-12 09:32:48 -Initializing ProtocolHandler ["http-nio-8080"]
2020-06-12 09:32:48 -Starting service [Tomcat]
2020-06-12 09:32:48 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-06-12 09:32:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;D:\360Downloads\apache-maven-3.6.1\apache-maven-3.6.1\bin;"C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;";;C:\Program Files\python;C:\Program Files\python\Scripts;;D:\BtSoft\panel\script;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-06-12 09:32:48 -Initializing Spring embedded WebApplicationContext
2020-06-12 09:32:48 -Root WebApplicationContext: initialization completed in 1803 ms
2020-06-12 09:32:48 -Filter xssFilter was not registered (disabled)
2020-06-12 09:32:48 -HikariPool-1 - Starting...
2020-06-12 09:32:48 -HikariPool-1 - Start completed.
2020-06-12 09:32:48 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-06-12 09:32:48 -HHH000412: Hibernate Core {5.3.7.Final}
2020-06-12 09:32:48 -HHH000206: hibernate.properties not found
2020-06-12 09:32:49 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-06-12 09:32:49 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-06-12 09:32:49 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-06-12 09:32:49 -Using default implementation for ThreadExecutor
2020-06-12 09:32:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-06-12 09:32:49 -Quartz Scheduler v.2.3.0 created.
2020-06-12 09:32:49 -RAMJobStore initialized.
2020-06-12 09:32:49 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-06-12 09:32:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-06-12 09:32:49 -Quartz scheduler version: 2.3.0
2020-06-12 09:32:49 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1491cd6c
2020-06-12 09:32:50 -STAET TaskExecutorConfig
2020-06-12 09:32:50 -Initializing ExecutorService
2020-06-12 09:32:50 -Initializing ExecutorService 'getAsyncExecutor'
2020-06-12 09:32:50 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-06-12 09:32:50 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-06-12 09:32:51 -Initializing ExecutorService 'taskScheduler'
2020-06-12 09:32:51 -Starting Quartz Scheduler now
2020-06-12 09:32:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-06-12 09:32:51 -Starting ProtocolHandler ["http-nio-8080"]
2020-06-12 09:32:51 -Using a shared selector for servlet write/read
2020-06-12 09:32:51 -Tomcat started on port(s): 8080 (http) with context path ''
2020-06-12 09:32:51 -Started LongEcologicalApplication in 5.256 seconds (JVM running for 6.213)
2020-06-12 20:32:46 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-12 20:32:46 -Initializing Servlet 'dispatcherServlet'
2020-06-12 20:32:46 -Completed initialization in 65 ms
2020-06-12 20:32:46 -此处进行解密+验签+身份验证
2020-06-12 20:32:46 -此处进行解密+验签+身份验证
2020-06-12 20:32:46 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-06-12 20:32:46 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-06-12 20:32:46 -Starting without optional epoll library
2020-06-12 20:32:46 -Starting without optional kqueue library
2020-06-12 20:32:47 -解密：
2020-06-12 20:32:47 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-06-12 20:32:47 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-06-12 20:32:47 -==> Parameters: 04(String), 04(String)
2020-06-12 20:32:47 -<==      Total: 1
2020-06-12 20:32:47 -耗时 : 81
2020-06-12 20:32:47 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-06-12 20:32:47 -耗时 : 883
2020-06-12 20:32:47 -此处进行解密+验签+身份验证
2020-06-12 20:32:47 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"7EF78844159CDED37ADDD9D77098A410","device_no":"1.1.7","device_type":"android","sys_user_account":"","token":"181|UFSOKKJQ0MVL79LAUCTC8O1660RNTCAG"}
2020-06-12 20:32:47 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-06-12 20:32:47 -token值=======181|UFSOKKJQ0MVL79LAUCTC8O1660RNTCAG
2020-06-12 20:32:47 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-06-12 20:32:47 -==> Parameters: 181(String)
2020-06-12 20:32:47 -<==      Total: 1
2020-06-12 20:32:47 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-06-12 20:32:47 -==> Parameters: 26(String)
2020-06-12 20:32:47 -<==      Total: 1
2020-06-12 20:32:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-06-12 20:32:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-06-12 20:32:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-06-12 20:32:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-06-12 20:32:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-06-12 20:32:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-06-12 20:32:47 -耗时 : 39
2020-06-12 20:32:51 -此处进行解密+验签+身份验证
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-06-12 20:32:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-06-12 20:32:51 -==> Parameters: 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -耗时 : 9
2020-06-12 20:32:51 -此处进行解密+验签+身份验证
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:51 -此处进行解密+验签+身份验证
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:51 -此处进行解密+验签+身份验证
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:51 -解密：
2020-06-12 20:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-06-12 20:32:51 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-06-12 20:32:51 -==> Parameters: 01(String), 01(String)
2020-06-12 20:32:51 -<==      Total: 4
2020-06-12 20:32:51 -耗时 : 3
2020-06-12 20:32:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-06-12 20:32:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-06-12 20:32:51 -==> Parameters: 181(String)
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -耗时 : 2
2020-06-12 20:32:51 -此处进行解密+验签+身份验证
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:51 -此处进行解密+验签+身份验证
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-06-12 20:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-06-12 20:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-06-12 20:32:51 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-06-12 20:32:51 -==> Parameters: 181(String)
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-06-12 20:32:51 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-06-12 20:32:51 -==> Parameters: 
2020-06-12 20:32:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:32:51 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 3
2020-06-12 20:32:51 -耗时 : 16
2020-06-12 20:32:51 -<==      Total: 2
2020-06-12 20:32:51 -耗时 : 19
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: applyRateFlag(String), 181(String)
2020-06-12 20:32:51 -此处进行解密+验签+身份验证
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:51 -<==      Total: 2
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-06-12 20:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-06-12 20:32:51 -<==    Updates: 2
2020-06-12 20:32:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-06-12 20:32:51 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-06-12 20:32:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:32:51 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: applyRateFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: recallFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 2
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-06-12 20:32:51 -<==    Updates: 2
2020-06-12 20:32:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-06-12 20:32:51 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-06-12 20:32:51 -==> Parameters: 
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: collegeFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: recallFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:32:51 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: cardFlag(String), 181(String)
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-06-12 20:32:51 -==> Parameters: 
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: collegeFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: appImgFlag(String), 181(String)
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:32:51 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 9
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: cashFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: cardFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 0
2020-06-12 20:32:51 -<==      Total: 1
2020-06-12 20:32:51 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-12 20:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:51 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-06-12 20:32:51 -==> Parameters: 181(String), appImgFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -耗时 : 154
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: appImgFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 10
2020-06-12 20:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:51 -==> Parameters: cashFlag(String), 181(String)
2020-06-12 20:32:51 -<==      Total: 0
2020-06-12 20:32:51 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-12 20:32:51 -==> Parameters: 181(String), appImgFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-12 20:32:51 -<==    Updates: 1
2020-06-12 20:32:51 -耗时 : 109
2020-06-12 20:32:56 -此处进行解密+验签+身份验证
2020-06-12 20:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-06-12 20:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-06-12 20:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-06-12 20:32:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:32:56 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:56 -==> Parameters: applyRateFlag(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 2
2020-06-12 20:32:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:56 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-06-12 20:32:56 -<==    Updates: 2
2020-06-12 20:32:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-06-12 20:32:56 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:56 -==> Parameters: recallFlag(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:56 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-06-12 20:32:56 -<==    Updates: 1
2020-06-12 20:32:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-06-12 20:32:56 -==> Parameters: 
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:56 -==> Parameters: collegeFlag(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:56 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-06-12 20:32:56 -此处进行解密+验签+身份验证
2020-06-12 20:32:56 -<==    Updates: 1
2020-06-12 20:32:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:32:56 -==> Parameters: 181(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:56 -==> Parameters: cardFlag(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:32:56 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-06-12 20:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:56 -<==    Updates: 1
2020-06-12 20:32:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:56 -==> Parameters: appImgFlag(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 11
2020-06-12 20:32:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:32:56 -==> Parameters: cashFlag(String), 181(String)
2020-06-12 20:32:56 -<==      Total: 0
2020-06-12 20:32:56 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-12 20:32:56 -==> Parameters: 181(String), appImgFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-12 20:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:56 -<==    Updates: 1
2020-06-12 20:32:56 -耗时 : 123
2020-06-12 20:32:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-06-12 20:32:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-06-12 20:32:56 -==> Parameters: 181(String)
2020-06-12 20:32:56 -<==      Total: 1
2020-06-12 20:32:56 -耗时 : 3
2020-06-12 20:32:59 -此处进行解密+验签+身份验证
2020-06-12 20:32:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-06-12 20:32:59 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark,label from t_user_info where id = ? 
2020-06-12 20:32:59 -==> Parameters: 181(String)
2020-06-12 20:32:59 -此处进行解密+验签+身份验证
2020-06-12 20:32:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:32:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:32:59 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-06-12 20:32:59 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-06-12 20:32:59 -==> Parameters: 202006(String), 181(String)
2020-06-12 20:32:59 -UserInfoServiceImpl -- getUserAuthStatus方法处理异常：
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'label' in 'field list'
### The error may exist in file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\user\UserInfoMapper.xml]
### The error may involve com.example.longecological.mapper.user.UserInfoMapper.getUserAuthStatus-Inline
### The error occurred while setting parameters
### SQL: select     auth_status,id_card, card_photo, real_name, auth_remark,label    from t_user_info    where id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'label' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'label' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy103.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.getUserAuthStatus(Unknown Source)
	at com.example.longecological.service.user.impl.UserInfoServiceImpl.getUserAuthStatus(UserInfoServiceImpl.java:309)
	at com.example.longecological.service.user.impl.UserInfoServiceImpl$$FastClassBySpringCGLIB$$2353ffaf.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.example.longecological.service.user.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$a47072f6.getUserAuthStatus(<generated>)
	at com.example.longecological.controller.user.UserInfoController.getUserAuthStatus(UserInfoController.java:98)
	at com.example.longecological.controller.user.UserInfoController$$FastClassBySpringCGLIB$$961f520f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.user.UserInfoController$$EnhancerBySpringCGLIB$$a853b4b2.getUserAuthStatus(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-06-12 20:32:59 -耗时 : 98
2020-06-12 20:32:59 -<==      Total: 1
2020-06-12 20:32:59 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-06-12 20:32:59 -==> Parameters: 181(String)
2020-06-12 20:32:59 -<==      Total: 0
2020-06-12 20:32:59 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-06-12 20:32:59 -==> Parameters: 202006(String), 181(String)
2020-06-12 20:32:59 -<==      Total: 1
2020-06-12 20:32:59 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-06-12 20:32:59 -==> Parameters: 181(String)
2020-06-12 20:32:59 -<==      Total: 0
2020-06-12 20:32:59 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-06-12 20:32:59 -==> Parameters: 202006(String), 181(String)
2020-06-12 20:32:59 -<==      Total: 1
2020-06-12 20:32:59 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-06-12 20:32:59 -==> Parameters: 181(String)
2020-06-12 20:32:59 -<==      Total: 0
2020-06-12 20:32:59 -耗时 : 40
2020-06-12 20:33:06 -此处进行解密+验签+身份验证
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:06 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-06-12 20:33:06 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-06-12 20:33:06 -==> Parameters: 181(String)
2020-06-12 20:33:06 -<==      Total: 1
2020-06-12 20:33:06 -耗时 : 6
2020-06-12 20:33:06 -此处进行解密+验签+身份验证
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:06 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-06-12 20:33:06 -此处进行解密+验签+身份验证
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:06 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-06-12 20:33:06 -此处进行解密+验签+身份验证
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:06 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-06-12 20:33:06 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-06-12 20:33:06 -==> Parameters: 181(String), 202006(String)
2020-06-12 20:33:06 -<==      Total: 1
2020-06-12 20:33:06 -耗时 : 2
2020-06-12 20:33:06 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-06-12 20:33:06 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-06-12 20:33:06 -==> Parameters: 181(String), 202006(String)
2020-06-12 20:33:06 -==> Parameters: 181(String), 202006(String)
2020-06-12 20:33:06 -<==      Total: 1
2020-06-12 20:33:06 -耗时 : 9
2020-06-12 20:33:06 -<==      Total: 1
2020-06-12 20:33:06 -耗时 : 30
2020-06-12 20:33:08 -此处进行解密+验签+身份验证
2020-06-12 20:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:08 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-06-12 20:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-06-12 20:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-06-12 20:33:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:33:08 -==> Parameters: 181(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 1
2020-06-12 20:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:33:08 -==> Parameters: applyRateFlag(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 2
2020-06-12 20:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:33:08 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-06-12 20:33:08 -<==    Updates: 2
2020-06-12 20:33:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-06-12 20:33:08 -==> Parameters: 181(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 1
2020-06-12 20:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:33:08 -==> Parameters: recallFlag(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 1
2020-06-12 20:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:33:08 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-06-12 20:33:08 -<==    Updates: 1
2020-06-12 20:33:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-06-12 20:33:08 -==> Parameters: 
2020-06-12 20:33:08 -<==      Total: 1
2020-06-12 20:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:33:08 -==> Parameters: collegeFlag(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 1
2020-06-12 20:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:33:08 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-06-12 20:33:08 -<==    Updates: 1
2020-06-12 20:33:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-12 20:33:08 -==> Parameters: 181(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 1
2020-06-12 20:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:33:08 -==> Parameters: cardFlag(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 1
2020-06-12 20:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-12 20:33:08 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-06-12 20:33:08 -<==    Updates: 1
2020-06-12 20:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:33:08 -==> Parameters: appImgFlag(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 12
2020-06-12 20:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-12 20:33:08 -==> Parameters: cashFlag(String), 181(String)
2020-06-12 20:33:08 -<==      Total: 0
2020-06-12 20:33:08 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-12 20:33:08 -==> Parameters: 181(String), appImgFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-12 20:33:08 -<==    Updates: 1
2020-06-12 20:33:08 -耗时 : 108
2020-06-12 20:33:16 -此处进行解密+验签+身份验证
2020-06-12 20:33:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:16 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-06-12 20:33:16 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-06-12 20:33:16 -==> Parameters: 181(String)
2020-06-12 20:33:16 -<==      Total: 1161
2020-06-12 20:33:16 -耗时 : 202
2020-06-12 20:33:17 -此处进行解密+验签+身份验证
2020-06-12 20:33:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:17 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-06-12 20:33:17 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-06-12 20:33:17 -==> Parameters: 181(String), 181(String)
2020-06-12 20:33:17 -<==      Total: 1599
2020-06-12 20:33:17 -耗时 : 548
2020-06-12 20:33:23 -此处进行解密+验签+身份验证
2020-06-12 20:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 20:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 20:33:23 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectUnbindMpos
2020-06-12 20:33:23 -==>  Preparing: SELECT sn FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND t.del = '0' AND NOT EXISTS(SELECT 1 FROM t_user_mpos_unbind_record_info tt WHERE tt.SN=t.sn AND tt.status='00') 
2020-06-12 20:33:23 -==> Parameters: 181(String)
2020-06-12 20:33:23 -<==      Total: 1160
2020-06-12 20:33:23 -耗时 : 468
2020-06-12 21:28:17 -此处进行解密+验签+身份验证
2020-06-12 21:28:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 21:28:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 21:28:17 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/recallMpos
2020-06-12 21:28:17 -==>  Preparing: INSERT INTO t_user_mpos_recall_record_info ( send_user_id, acce_user_id, sn, cre_date, cre_time ) SELECT ?, user_id, sn, ?, ? FROM t_user_mpos_info WHERE state_status = '1' AND FIND_IN_SET(sn, ?) AND user_id in (select id from t_user_info where referer_id = ?) 
2020-06-12 21:28:17 -==> Parameters: 181(String), 20200612(String), 212817(String), M351846171803(String), 181(String)
2020-06-12 21:28:17 -<==    Updates: 1
2020-06-12 21:28:17 -==>  Preparing: select * from t_user_mpos_info where sn in ( ? ) and state_status='1' 
2020-06-12 21:28:17 -==> Parameters: M351846171803(String)
2020-06-12 21:28:17 -<==      Total: 1
2020-06-12 21:28:17 -==>  Preparing: update t_news_read_state set read_flag=? where user_id in ( ? ) and news_type=? 
2020-06-12 21:28:17 -==> Parameters: 0(String), 234(Integer), recallFlag(String)
2020-06-12 21:28:17 -<==    Updates: 2
2020-06-12 21:28:17 -耗时 : 248
2020-06-12 21:28:17 -此处进行解密+验签+身份验证
2020-06-12 21:28:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 21:28:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 21:28:17 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-06-12 21:28:17 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-06-12 21:28:17 -==> Parameters: 181(String), 181(String)
2020-06-12 21:28:18 -<==      Total: 1598
2020-06-12 21:28:18 -耗时 : 544
2020-06-12 23:07:22 -此处进行解密+验签+身份验证
2020-06-12 23:07:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 23:07:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 23:07:22 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-06-12 23:07:22 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-06-12 23:07:22 -==> Parameters: 181(String), 181(String)
2020-06-12 23:07:23 -<==      Total: 1598
2020-06-12 23:07:23 -耗时 : 459
2020-06-12 23:08:42 -此处进行解密+验签+身份验证
2020-06-12 23:08:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 23:08:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 23:08:42 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosRecallList
2020-06-12 23:08:42 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_traditional_pos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM t_user_trapos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-06-12 23:08:42 -==> Parameters: 181(String), 181(String)
2020-06-12 23:08:43 -<==      Total: 539
2020-06-12 23:08:43 -耗时 : 653
2020-06-12 23:08:51 -此处进行解密+验签+身份验证
2020-06-12 23:08:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 23:08:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 23:08:51 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosRecallList
2020-06-12 23:08:51 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_traditional_pos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM t_user_trapos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-06-12 23:08:51 -==> Parameters: 181(String), 181(String)
2020-06-12 23:08:52 -<==      Total: 539
2020-06-12 23:08:52 -耗时 : 780
2020-06-12 23:09:21 -此处进行解密+验签+身份验证
2020-06-12 23:09:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-06-12 23:09:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-06-12 23:09:21 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosRecallList
2020-06-12 23:09:21 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_traditional_pos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) and t.pos_type='epos' AND NOT EXISTS ( SELECT 1 FROM t_user_trapos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-06-12 23:09:21 -==> Parameters: 181(String), 181(String)
2020-06-12 23:09:21 -<==      Total: 2
2020-06-12 23:09:21 -耗时 : 27
