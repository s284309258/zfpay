2020-04-16 10:48:05 -Starting LongEcologicalApplication on PC-201905161910 with PID 9640 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-16 10:48:05 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-16 10:48:05 -No active profile set, falling back to default profiles: default
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 10:48:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 10:48:06 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 10:48:06 -Finished Spring Data repository scanning in 99ms. Found 0 repository interfaces.
2020-04-16 10:48:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 10:48:06 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 10:48:06 -Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2020-04-16 10:48:07 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$bae0e229] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 10:48:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b564c6c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 10:48:08 -Tomcat initialized with port(s): 8080 (http)
2020-04-16 10:48:08 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-16 10:48:08 -Starting service [Tomcat]
2020-04-16 10:48:08 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-16 10:48:08 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-16 10:48:08 -Initializing Spring embedded WebApplicationContext
2020-04-16 10:48:08 -Root WebApplicationContext: initialization completed in 2682 ms
2020-04-16 10:48:08 -Filter xssFilter was not registered (disabled)
2020-04-16 10:48:08 -HikariPool-1 - Starting...
2020-04-16 10:48:08 -HikariPool-1 - Start completed.
2020-04-16 10:48:09 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-16 10:48:09 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-16 10:48:09 -HHH000206: hibernate.properties not found
2020-04-16 10:48:09 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-16 10:48:09 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-16 10:48:09 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-16 10:48:10 -Using default implementation for ThreadExecutor
2020-04-16 10:48:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-16 10:48:10 -Quartz Scheduler v.2.3.0 created.
2020-04-16 10:48:10 -RAMJobStore initialized.
2020-04-16 10:48:10 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-16 10:48:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-16 10:48:10 -Quartz scheduler version: 2.3.0
2020-04-16 10:48:10 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6c8f4bc7
2020-04-16 10:48:10 -STAET TaskExecutorConfig
2020-04-16 10:48:10 -Initializing ExecutorService
2020-04-16 10:48:10 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-16 10:48:11 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-16 10:48:11 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-16 10:48:11 -Initializing ExecutorService 'taskScheduler'
2020-04-16 10:48:11 -Starting Quartz Scheduler now
2020-04-16 10:48:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-16 10:48:11 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-16 10:48:11 -Using a shared selector for servlet write/read
2020-04-16 10:48:11 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-16 10:48:11 -Started LongEcologicalApplication in 7.53 seconds (JVM running for 9.031)
2020-04-16 10:50:36 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-16 10:50:36 -Initializing Servlet 'dispatcherServlet'
2020-04-16 10:50:36 -Completed initialization in 11 ms
2020-04-16 10:50:36 -此处进行解密+验签+身份验证
2020-04-16 10:50:36 -此处进行解密+验签+身份验证
2020-04-16 10:50:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:37 -Starting without optional epoll library
2020-04-16 10:50:37 -Starting without optional kqueue library
2020-04-16 10:50:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:38 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 10:50:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 10:50:38 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 10:50:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 10:50:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:50:38 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:38 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 10:50:38 -==> Parameters: 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -耗时 : 84
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:38 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:38 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 10:50:38 -<==    Updates: 1
2020-04-16 10:50:38 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 10:50:38 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:38 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:38 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 10:50:38 -<==    Updates: 1
2020-04-16 10:50:38 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 10:50:38 -==> Parameters: 
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:38 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:38 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 10:50:38 -<==    Updates: 1
2020-04-16 10:50:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:50:38 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:38 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:38 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 10:50:38 -<==    Updates: 1
2020-04-16 10:50:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:38 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 10:50:38 -<==      Total: 1
2020-04-16 10:50:38 -耗时 : 234
2020-04-16 10:50:42 -此处进行解密+验签+身份验证
2020-04-16 10:50:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:42 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-04-16 10:50:42 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-04-16 10:50:42 -==> Parameters: 426(String)
2020-04-16 10:50:42 -<==      Total: 1
2020-04-16 10:50:42 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-04-16 10:50:42 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:42 -此处进行解密+验签+身份验证
2020-04-16 10:50:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:42 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-04-16 10:50:42 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-16 10:50:42 -==> Parameters: 202004(String), 426(String)
2020-04-16 10:50:42 -<==      Total: 1
2020-04-16 10:50:42 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-04-16 10:50:42 -==> Parameters: 426(String)
2020-04-16 10:50:42 -<==      Total: 0
2020-04-16 10:50:42 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-16 10:50:42 -==> Parameters: 202004(String), 426(String)
2020-04-16 10:50:42 -<==      Total: 1
2020-04-16 10:50:42 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-04-16 10:50:42 -==> Parameters: 426(String)
2020-04-16 10:50:42 -<==      Total: 0
2020-04-16 10:50:42 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-16 10:50:42 -==> Parameters: 202004(String), 426(String)
2020-04-16 10:50:42 -<==      Total: 1
2020-04-16 10:50:42 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-04-16 10:50:42 -==> Parameters: 426(String)
2020-04-16 10:50:42 -<==      Total: 0
2020-04-16 10:50:42 -耗时 : 111
2020-04-16 10:50:43 -此处进行解密+验签+身份验证
2020-04-16 10:50:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 10:50:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 10:50:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 10:50:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:50:43 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:44 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:44 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 10:50:44 -<==    Updates: 1
2020-04-16 10:50:44 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 10:50:44 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:44 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:44 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 10:50:44 -<==    Updates: 1
2020-04-16 10:50:44 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 10:50:44 -==> Parameters: 
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:44 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:44 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 10:50:44 -<==    Updates: 1
2020-04-16 10:50:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:50:44 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:44 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:50:44 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 10:50:44 -<==    Updates: 1
2020-04-16 10:50:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:50:44 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 10:50:44 -<==      Total: 1
2020-04-16 10:50:44 -耗时 : 254
2020-04-16 10:50:46 -<==      Total: 1
2020-04-16 10:50:46 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-04-16 10:50:46 -==> Parameters: 426(String), 426(String)
2020-04-16 10:50:47 -<==      Total: 1
2020-04-16 10:50:47 -耗时 : 4661
2020-04-16 10:50:58 -此处进行解密+验签+身份验证
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 10:50:58 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 10:50:58 -==> Parameters: 426(String)
2020-04-16 10:50:58 -<==      Total: 1
2020-04-16 10:50:58 -耗时 : 10
2020-04-16 10:50:58 -此处进行解密+验签+身份验证
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 10:50:58 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 10:50:58 -==> Parameters: 426(String), 202004(String)
2020-04-16 10:50:58 -<==      Total: 0
2020-04-16 10:50:58 -耗时 : 52
2020-04-16 10:50:58 -此处进行解密+验签+身份验证
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 10:50:58 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 10:50:58 -==> Parameters: 426(String), 202004(String)
2020-04-16 10:50:58 -<==      Total: 0
2020-04-16 10:50:58 -耗时 : 2
2020-04-16 10:50:58 -此处进行解密+验签+身份验证
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:50:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:50:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 10:50:58 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 10:50:58 -==> Parameters: 426(String), 202004(String)
2020-04-16 10:50:58 -<==      Total: 0
2020-04-16 10:50:58 -耗时 : 7
2020-04-16 10:51:01 -此处进行解密+验签+身份验证
2020-04-16 10:51:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:51:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:51:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 10:51:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 10:51:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 10:51:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:51:01 -==> Parameters: 426(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:01 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 10:51:01 -<==    Updates: 1
2020-04-16 10:51:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 10:51:01 -==> Parameters: 426(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:01 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 10:51:01 -<==    Updates: 1
2020-04-16 10:51:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 10:51:01 -==> Parameters: 
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:01 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:01 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 10:51:01 -<==    Updates: 1
2020-04-16 10:51:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:51:01 -==> Parameters: 426(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:01 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 10:51:01 -<==    Updates: 1
2020-04-16 10:51:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:01 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 10:51:01 -<==      Total: 1
2020-04-16 10:51:01 -耗时 : 170
2020-04-16 10:51:05 -此处进行解密+验签+身份验证
2020-04-16 10:51:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:51:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:51:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 10:51:05 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 10:51:05 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 10:51:05 -<==    Updates: 1
2020-04-16 10:51:05 -耗时 : 11
2020-04-16 10:51:05 -此处进行解密+验签+身份验证
2020-04-16 10:51:06 -此处进行解密+验签+身份验证
2020-04-16 10:51:06 -解密：
2020-04-16 10:51:06 -解密：
2020-04-16 10:51:07 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:51:07 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:51:07 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:51:07 -==> Parameters: 02(String), 02(String)
2020-04-16 10:51:07 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:51:07 -==> Parameters: 03(String), 03(String)
2020-04-16 10:51:07 -<==      Total: 7
2020-04-16 10:51:07 -耗时 : 6
2020-04-16 10:51:07 -<==      Total: 3
2020-04-16 10:51:07 -耗时 : 6
2020-04-16 10:51:31 -此处进行解密+验签+身份验证
2020-04-16 10:51:31 -此处进行解密+验签+身份验证
2020-04-16 10:51:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:51:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:51:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:51:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:51:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 10:51:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 10:51:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 10:51:31 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 10:51:31 -==> Parameters: 426(String)
2020-04-16 10:51:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 10:51:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:51:31 -==> Parameters: 426(String), 426(String)
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -耗时 : 5
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:31 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 10:51:31 -<==    Updates: 1
2020-04-16 10:51:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 10:51:31 -==> Parameters: 426(String), 426(String)
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:31 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 10:51:31 -<==    Updates: 1
2020-04-16 10:51:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 10:51:31 -==> Parameters: 
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:31 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:31 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 10:51:31 -<==    Updates: 1
2020-04-16 10:51:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:51:31 -==> Parameters: 426(String), 426(String)
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:31 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 10:51:31 -<==      Total: 1
2020-04-16 10:51:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:51:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 10:51:31 -<==    Updates: 1
2020-04-16 10:51:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:51:31 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 10:51:32 -<==      Total: 1
2020-04-16 10:51:32 -耗时 : 72
2020-04-16 10:52:47 -此处进行解密+验签+身份验证
2020-04-16 10:52:47 -解密：
2020-04-16 10:52:47 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:52:47 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:52:47 -==> Parameters: 04(String), 04(String)
2020-04-16 10:52:47 -此处进行解密+验签+身份验证
2020-04-16 10:52:47 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 10:52:47 -<==      Total: 1
2020-04-16 10:52:47 -耗时 : 8
2020-04-16 10:52:47 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 10:52:47 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 10:52:47 -耗时 : 33
2020-04-16 10:52:47 -此处进行解密+验签+身份验证
2020-04-16 10:52:47 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BA9F13BFF766417681E506546606D32C","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP"}
2020-04-16 10:52:47 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 10:52:47 -token值=======426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP
2020-04-16 10:52:47 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 10:52:47 -==> Parameters: 426(String)
2020-04-16 10:52:47 -<==      Total: 1
2020-04-16 10:52:47 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 10:52:47 -==> Parameters: 25(String)
2020-04-16 10:52:47 -<==      Total: 1
2020-04-16 10:52:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 10:52:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 10:52:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 10:52:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 10:52:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 10:52:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 10:52:47 -耗时 : 97
2020-04-16 10:52:52 -此处进行解密+验签+身份验证
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:52:52 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 10:52:52 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 10:52:52 -==> Parameters: 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -耗时 : 4
2020-04-16 10:52:52 -此处进行解密+验签+身份验证
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 10:52:52 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 10:52:52 -==> Parameters: 426(String)
2020-04-16 10:52:52 -<==      Total: 2
2020-04-16 10:52:52 -耗时 : 22
2020-04-16 10:52:52 -此处进行解密+验签+身份验证
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 10:52:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:52:52 -==> Parameters: 426(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 10:52:52 -==> Parameters: 426(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 10:52:52 -此处进行解密+验签+身份验证
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 10:52:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:52:52 -==> Parameters: 426(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 10:52:52 -此处进行解密+验签+身份验证
2020-04-16 10:52:52 -解密：
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 10:52:52 -==> Parameters: 426(String), 426(String)
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 10:52:52 -==> Parameters: 
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 10:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:52:52 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:52:52 -==> Parameters: 01(String), 01(String)
2020-04-16 10:52:52 -<==      Total: 4
2020-04-16 10:52:52 -耗时 : 6
2020-04-16 10:52:52 -此处进行解密+验签+身份验证
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:52:52 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 10:52:52 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 10:52:52 -==> Parameters: 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -耗时 : 2
2020-04-16 10:52:52 -此处进行解密+验签+身份验证
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 10:52:52 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 10:52:52 -==> Parameters: 
2020-04-16 10:52:52 -<==      Total: 3
2020-04-16 10:52:52 -耗时 : 6
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 10:52:52 -==> Parameters: 
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:52:52 -==> Parameters: 426(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:52:52 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 10:52:52 -==> Parameters: 426(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:52:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -耗时 : 412
2020-04-16 10:52:52 -<==    Updates: 1
2020-04-16 10:52:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:52:52 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 10:52:52 -<==      Total: 1
2020-04-16 10:52:52 -耗时 : 336
2020-04-16 10:54:01 -此处进行解密+验签+身份验证
2020-04-16 10:54:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:54:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:54:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 10:54:01 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 10:54:01 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 10:54:01 -<==    Updates: 1
2020-04-16 10:54:01 -耗时 : 65
2020-04-16 10:54:01 -此处进行解密+验签+身份验证
2020-04-16 10:54:01 -解密：
2020-04-16 10:54:01 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:54:01 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:54:01 -==> Parameters: 03(String), 03(String)
2020-04-16 10:54:01 -<==      Total: 3
2020-04-16 10:54:01 -耗时 : 6
2020-04-16 10:54:01 -此处进行解密+验签+身份验证
2020-04-16 10:54:01 -解密：
2020-04-16 10:54:01 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:54:01 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:54:02 -==> Parameters: 02(String), 02(String)
2020-04-16 10:54:02 -<==      Total: 7
2020-04-16 10:54:02 -耗时 : 3
2020-04-16 10:54:28 -此处进行解密+验签+身份验证
2020-04-16 10:54:28 -解密：
2020-04-16 10:54:28 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:54:28 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:54:28 -==> Parameters: 04(String), 04(String)
2020-04-16 10:54:28 -<==      Total: 1
2020-04-16 10:54:28 -耗时 : 2
2020-04-16 10:54:54 -此处进行解密+验签+身份验证
2020-04-16 10:54:54 -解密：
2020-04-16 10:54:54 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:54:54 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:54:54 -==> Parameters: 02(String), 02(String)
2020-04-16 10:54:54 -<==      Total: 7
2020-04-16 10:54:54 -耗时 : 2
2020-04-16 10:58:02 -此处进行解密+验签+身份验证
2020-04-16 10:58:02 -解密：
2020-04-16 10:58:02 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:58:02 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:58:02 -==> Parameters: 02(String), 02(String)
2020-04-16 10:58:02 -<==      Total: 7
2020-04-16 10:58:02 -耗时 : 2
2020-04-16 10:58:05 -此处进行解密+验签+身份验证
2020-04-16 10:58:05 -解密：
2020-04-16 10:58:05 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:58:05 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:58:05 -==> Parameters: 02(String), 02(String)
2020-04-16 10:58:05 -<==      Total: 7
2020-04-16 10:58:05 -耗时 : 2
2020-04-16 10:58:31 -此处进行解密+验签+身份验证
2020-04-16 10:58:31 -解密：
2020-04-16 10:58:31 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:58:31 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:58:31 -==> Parameters: 02(String), 02(String)
2020-04-16 10:58:31 -<==      Total: 7
2020-04-16 10:58:31 -耗时 : 1
2020-04-16 10:59:21 -此处进行解密+验签+身份验证
2020-04-16 10:59:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:59:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:59:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 10:59:21 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 10:59:21 -==> Parameters: 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -耗时 : 2
2020-04-16 10:59:21 -此处进行解密+验签+身份验证
2020-04-16 10:59:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:59:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:59:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 10:59:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 10:59:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 10:59:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:59:21 -==> Parameters: 426(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:59:21 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:59:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 10:59:21 -<==    Updates: 1
2020-04-16 10:59:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 10:59:21 -==> Parameters: 426(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:59:21 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:59:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 10:59:21 -<==    Updates: 1
2020-04-16 10:59:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 10:59:21 -==> Parameters: 
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:59:21 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:59:21 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 10:59:21 -<==    Updates: 1
2020-04-16 10:59:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 10:59:21 -==> Parameters: 426(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:59:21 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 10:59:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 10:59:21 -<==    Updates: 1
2020-04-16 10:59:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 10:59:21 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 10:59:21 -<==      Total: 1
2020-04-16 10:59:21 -耗时 : 96
2020-04-16 10:59:22 -此处进行解密+验签+身份验证
2020-04-16 10:59:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 10:59:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 10:59:22 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 10:59:22 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 10:59:22 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 10:59:22 -<==    Updates: 1
2020-04-16 10:59:22 -耗时 : 32
2020-04-16 10:59:23 -此处进行解密+验签+身份验证
2020-04-16 10:59:23 -解密：
2020-04-16 10:59:23 -此处进行解密+验签+身份验证
2020-04-16 10:59:23 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:59:23 -解密：
2020-04-16 10:59:23 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:59:23 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:59:23 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:59:23 -==> Parameters: 03(String), 03(String)
2020-04-16 10:59:23 -==> Parameters: 02(String), 02(String)
2020-04-16 10:59:23 -<==      Total: 3
2020-04-16 10:59:23 -<==      Total: 7
2020-04-16 10:59:23 -耗时 : 2
2020-04-16 10:59:23 -耗时 : 2
2020-04-16 10:59:28 -此处进行解密+验签+身份验证
2020-04-16 10:59:28 -解密：
2020-04-16 10:59:28 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:59:28 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:59:28 -==> Parameters: 02(String), 02(String)
2020-04-16 10:59:28 -<==      Total: 7
2020-04-16 10:59:28 -耗时 : 2
2020-04-16 10:59:45 -此处进行解密+验签+身份验证
2020-04-16 10:59:45 -解密：
2020-04-16 10:59:45 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 10:59:45 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 10:59:45 -==> Parameters: 02(String), 02(String)
2020-04-16 10:59:45 -<==      Total: 7
2020-04-16 10:59:45 -耗时 : 2
2020-04-16 11:00:49 -此处进行解密+验签+身份验证
2020-04-16 11:00:49 -解密：
2020-04-16 11:00:49 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:00:49 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:00:49 -==> Parameters: 02(String), 02(String)
2020-04-16 11:00:49 -<==      Total: 7
2020-04-16 11:00:49 -耗时 : 3
2020-04-16 11:00:50 -此处进行解密+验签+身份验证
2020-04-16 11:00:50 -解密：
2020-04-16 11:00:50 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:00:50 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:00:50 -==> Parameters: 02(String), 02(String)
2020-04-16 11:00:50 -<==      Total: 7
2020-04-16 11:00:50 -耗时 : 2
2020-04-16 11:01:04 -此处进行解密+验签+身份验证
2020-04-16 11:01:04 -解密：
2020-04-16 11:01:04 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:01:04 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:01:04 -==> Parameters: 02(String), 02(String)
2020-04-16 11:01:04 -<==      Total: 7
2020-04-16 11:01:04 -耗时 : 2
2020-04-16 11:02:20 -此处进行解密+验签+身份验证
2020-04-16 11:02:20 -解密：
2020-04-16 11:02:20 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:02:20 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:02:20 -==> Parameters: 04(String), 04(String)
2020-04-16 11:02:20 -<==      Total: 1
2020-04-16 11:02:20 -耗时 : 1
2020-04-16 11:02:23 -此处进行解密+验签+身份验证
2020-04-16 11:02:23 -解密：
2020-04-16 11:02:23 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:02:23 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:02:23 -==> Parameters: 03(String), 03(String)
2020-04-16 11:02:23 -<==      Total: 3
2020-04-16 11:02:23 -耗时 : 1
2020-04-16 11:20:51 -此处进行解密+验签+身份验证
2020-04-16 11:20:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:20:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:20:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:20:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 11:20:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 11:20:51 -此处进行解密+验签+身份验证
2020-04-16 11:20:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:20:51 -==> Parameters: 426(String), 426(String)
2020-04-16 11:20:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:20:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:20:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:20:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:20:51 -==> Parameters: 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -耗时 : 10
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:20:51 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:20:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 11:20:51 -<==    Updates: 1
2020-04-16 11:20:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:20:51 -==> Parameters: 426(String), 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:20:51 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:20:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 11:20:51 -<==    Updates: 1
2020-04-16 11:20:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:20:51 -==> Parameters: 
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:20:51 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:20:51 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 11:20:51 -<==    Updates: 1
2020-04-16 11:20:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:20:51 -==> Parameters: 426(String), 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:20:51 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:20:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 11:20:51 -<==    Updates: 1
2020-04-16 11:20:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:20:51 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 11:20:51 -<==      Total: 1
2020-04-16 11:20:51 -耗时 : 116
2020-04-16 11:20:52 -此处进行解密+验签+身份验证
2020-04-16 11:20:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:20:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:20:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 11:20:52 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 11:20:52 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 11:20:52 -此处进行解密+验签+身份验证
2020-04-16 11:20:52 -解密：
2020-04-16 11:20:52 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:20:52 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:20:52 -==> Parameters: 02(String), 02(String)
2020-04-16 11:20:52 -<==      Total: 15
2020-04-16 11:20:52 -耗时 : 2
2020-04-16 11:20:52 -<==    Updates: 1
2020-04-16 11:20:52 -耗时 : 124
2020-04-16 11:20:53 -此处进行解密+验签+身份验证
2020-04-16 11:20:53 -解密：
2020-04-16 11:20:53 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:20:53 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:20:53 -==> Parameters: 03(String), 03(String)
2020-04-16 11:20:53 -<==      Total: 10
2020-04-16 11:20:53 -耗时 : 2
2020-04-16 11:21:03 -此处进行解密+验签+身份验证
2020-04-16 11:21:03 -解密：
2020-04-16 11:21:03 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:21:03 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:21:03 -==> Parameters: 02(String), 02(String)
2020-04-16 11:21:03 -<==      Total: 15
2020-04-16 11:21:03 -耗时 : 2
2020-04-16 11:22:05 -此处进行解密+验签+身份验证
2020-04-16 11:22:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:22:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:22:05 -此处进行解密+验签+身份验证
2020-04-16 11:22:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:22:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:22:05 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:22:05 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:22:05 -==> Parameters: 426(String)
2020-04-16 11:22:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:22:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -耗时 : 1
2020-04-16 11:22:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 11:22:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:22:05 -==> Parameters: 426(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:05 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:05 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 11:22:05 -<==    Updates: 1
2020-04-16 11:22:05 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:22:05 -==> Parameters: 426(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:05 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:05 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 11:22:05 -<==    Updates: 1
2020-04-16 11:22:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:22:05 -==> Parameters: 
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:05 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:05 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 11:22:05 -<==    Updates: 1
2020-04-16 11:22:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:22:05 -==> Parameters: 426(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:05 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:05 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 11:22:05 -<==    Updates: 1
2020-04-16 11:22:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:05 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 11:22:05 -<==      Total: 1
2020-04-16 11:22:05 -耗时 : 67
2020-04-16 11:22:10 -此处进行解密+验签+身份验证
2020-04-16 11:22:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:22:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:22:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 11:22:10 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 11:22:10 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 11:22:10 -<==    Updates: 1
2020-04-16 11:22:10 -耗时 : 44
2020-04-16 11:22:10 -此处进行解密+验签+身份验证
2020-04-16 11:22:10 -解密：
2020-04-16 11:22:10 -此处进行解密+验签+身份验证
2020-04-16 11:22:10 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:22:10 -解密：
2020-04-16 11:22:10 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:22:10 -==> Parameters: 02(String), 02(String)
2020-04-16 11:22:10 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:22:10 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:22:10 -<==      Total: 15
2020-04-16 11:22:10 -耗时 : 2
2020-04-16 11:22:10 -==> Parameters: 03(String), 03(String)
2020-04-16 11:22:10 -<==      Total: 10
2020-04-16 11:22:10 -耗时 : 4
2020-04-16 11:22:19 -此处进行解密+验签+身份验证
2020-04-16 11:22:19 -此处进行解密+验签+身份验证
2020-04-16 11:22:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:22:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:22:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:22:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:22:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:22:19 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:22:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 11:22:19 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:22:19 -==> Parameters: 426(String)
2020-04-16 11:22:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -耗时 : 3
2020-04-16 11:22:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:22:19 -==> Parameters: 426(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:19 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:19 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 11:22:19 -<==    Updates: 1
2020-04-16 11:22:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:22:19 -==> Parameters: 426(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:19 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:19 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 11:22:19 -<==    Updates: 1
2020-04-16 11:22:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:22:19 -==> Parameters: 
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:19 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:19 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 11:22:19 -<==    Updates: 1
2020-04-16 11:22:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:22:19 -==> Parameters: 426(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:19 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:22:19 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 11:22:19 -<==    Updates: 1
2020-04-16 11:22:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:22:19 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 11:22:19 -<==      Total: 1
2020-04-16 11:22:19 -耗时 : 107
2020-04-16 11:22:24 -此处进行解密+验签+身份验证
2020-04-16 11:22:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:22:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:22:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 11:22:24 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 11:22:24 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 11:22:24 -<==    Updates: 1
2020-04-16 11:22:24 -耗时 : 25
2020-04-16 11:22:24 -此处进行解密+验签+身份验证
2020-04-16 11:22:24 -解密：
2020-04-16 11:22:24 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:22:24 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:22:24 -==> Parameters: 02(String), 02(String)
2020-04-16 11:22:24 -此处进行解密+验签+身份验证
2020-04-16 11:22:24 -解密：
2020-04-16 11:22:24 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:22:24 -<==      Total: 15
2020-04-16 11:22:24 -耗时 : 1
2020-04-16 11:22:24 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:22:24 -==> Parameters: 03(String), 03(String)
2020-04-16 11:22:24 -<==      Total: 10
2020-04-16 11:22:24 -耗时 : 1
2020-04-16 11:24:04 -此处进行解密+验签+身份验证
2020-04-16 11:24:04 -解密：
2020-04-16 11:24:04 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:24:04 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:24:04 -==> Parameters: 02(String), 02(String)
2020-04-16 11:24:04 -<==      Total: 15
2020-04-16 11:24:04 -耗时 : 1
2020-04-16 11:24:06 -此处进行解密+验签+身份验证
2020-04-16 11:24:06 -解密：
2020-04-16 11:24:06 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:24:06 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:24:06 -==> Parameters: 02(String), 02(String)
2020-04-16 11:24:06 -<==      Total: 15
2020-04-16 11:24:06 -耗时 : 2
2020-04-16 11:25:22 -此处进行解密+验签+身份验证
2020-04-16 11:25:22 -解密：
2020-04-16 11:25:22 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:25:22 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:25:22 -==> Parameters: 04(String), 04(String)
2020-04-16 11:25:22 -<==      Total: 1
2020-04-16 11:25:22 -耗时 : 2
2020-04-16 11:29:48 -此处进行解密+验签+身份验证
2020-04-16 11:29:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:29:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:29:48 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:29:48 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:29:48 -==> Parameters: 426(String)
2020-04-16 11:29:48 -此处进行解密+验签+身份验证
2020-04-16 11:29:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:29:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:29:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:29:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 11:29:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 11:29:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:29:48 -==> Parameters: 426(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -耗时 : 52
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:29:48 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:29:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 11:29:48 -<==    Updates: 1
2020-04-16 11:29:48 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:29:48 -==> Parameters: 426(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:29:48 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:29:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 11:29:48 -<==    Updates: 1
2020-04-16 11:29:48 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:29:48 -==> Parameters: 
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:29:48 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:29:48 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 11:29:48 -<==    Updates: 1
2020-04-16 11:29:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:29:48 -==> Parameters: 426(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:29:48 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:29:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 11:29:48 -<==    Updates: 1
2020-04-16 11:29:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:29:48 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 11:29:48 -<==      Total: 1
2020-04-16 11:29:48 -耗时 : 170
2020-04-16 11:29:49 -此处进行解密+验签+身份验证
2020-04-16 11:29:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:29:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:29:49 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 11:29:49 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 11:29:49 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 11:29:49 -<==    Updates: 1
2020-04-16 11:29:49 -耗时 : 51
2020-04-16 11:29:49 -此处进行解密+验签+身份验证
2020-04-16 11:29:49 -解密：
2020-04-16 11:29:49 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:29:49 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:29:49 -==> Parameters: 02(String), 02(String)
2020-04-16 11:29:49 -<==      Total: 15
2020-04-16 11:29:49 -耗时 : 5
2020-04-16 11:29:50 -此处进行解密+验签+身份验证
2020-04-16 11:29:50 -解密：
2020-04-16 11:29:50 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:29:50 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:29:50 -==> Parameters: 03(String), 03(String)
2020-04-16 11:29:50 -<==      Total: 10
2020-04-16 11:29:50 -耗时 : 5
2020-04-16 11:29:55 -此处进行解密+验签+身份验证
2020-04-16 11:29:55 -解密：
2020-04-16 11:29:55 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:29:55 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:29:55 -==> Parameters: 02(String), 02(String)
2020-04-16 11:29:55 -<==      Total: 15
2020-04-16 11:29:55 -耗时 : 5
2020-04-16 11:29:58 -此处进行解密+验签+身份验证
2020-04-16 11:29:58 -解密：
2020-04-16 11:29:58 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:29:58 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:29:58 -==> Parameters: 02(String), 02(String)
2020-04-16 11:29:58 -<==      Total: 15
2020-04-16 11:29:58 -耗时 : 2
2020-04-16 11:30:00 -此处进行解密+验签+身份验证
2020-04-16 11:30:00 -解密：
2020-04-16 11:30:00 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:30:00 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:30:00 -==> Parameters: 02(String), 02(String)
2020-04-16 11:30:00 -<==      Total: 15
2020-04-16 11:30:00 -耗时 : 1
2020-04-16 11:30:01 -此处进行解密+验签+身份验证
2020-04-16 11:30:01 -解密：
2020-04-16 11:30:01 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:30:01 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:30:01 -==> Parameters: 04(String), 04(String)
2020-04-16 11:30:01 -<==      Total: 1
2020-04-16 11:30:01 -耗时 : 2
2020-04-16 11:30:03 -此处进行解密+验签+身份验证
2020-04-16 11:30:03 -解密：
2020-04-16 11:30:03 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:30:03 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:30:03 -==> Parameters: 03(String), 03(String)
2020-04-16 11:30:03 -<==      Total: 10
2020-04-16 11:30:03 -耗时 : 3
2020-04-16 11:32:24 -此处进行解密+验签+身份验证
2020-04-16 11:32:24 -解密：
2020-04-16 11:32:24 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:32:24 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:32:24 -==> Parameters: 03(String), 03(String)
2020-04-16 11:32:24 -<==      Total: 10
2020-04-16 11:32:24 -耗时 : 2
2020-04-16 11:32:26 -此处进行解密+验签+身份验证
2020-04-16 11:32:26 -解密：
2020-04-16 11:32:26 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:32:26 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:32:26 -==> Parameters: 03(String), 03(String)
2020-04-16 11:32:26 -<==      Total: 10
2020-04-16 11:32:26 -耗时 : 3
2020-04-16 11:32:27 -此处进行解密+验签+身份验证
2020-04-16 11:32:27 -解密：
2020-04-16 11:32:27 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:32:27 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:32:27 -==> Parameters: 03(String), 03(String)
2020-04-16 11:32:27 -<==      Total: 10
2020-04-16 11:32:27 -耗时 : 2
2020-04-16 11:32:33 -此处进行解密+验签+身份验证
2020-04-16 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:32:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:32:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:32:33 -==> Parameters: 426(String)
2020-04-16 11:32:33 -<==      Total: 1
2020-04-16 11:32:33 -耗时 : 1
2020-04-16 11:32:33 -此处进行解密+验签+身份验证
2020-04-16 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:32:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 11:32:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:32:33 -==> Parameters: 426(String), 426(String)
2020-04-16 11:32:33 -<==      Total: 1
2020-04-16 11:32:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:32:33 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:32:34 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 11:32:34 -<==    Updates: 1
2020-04-16 11:32:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:32:34 -==> Parameters: 426(String), 426(String)
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:32:34 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:32:34 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 11:32:34 -<==    Updates: 1
2020-04-16 11:32:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:32:34 -==> Parameters: 
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:32:34 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:32:34 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 11:32:34 -<==    Updates: 1
2020-04-16 11:32:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:32:34 -==> Parameters: 426(String), 426(String)
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:32:34 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:32:34 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 11:32:34 -<==    Updates: 1
2020-04-16 11:32:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:32:34 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 11:32:34 -<==      Total: 1
2020-04-16 11:32:34 -耗时 : 66
2020-04-16 11:39:54 -此处进行解密+验签+身份验证
2020-04-16 11:39:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:39:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:39:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 11:39:54 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 11:39:54 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-04-16 11:39:54 -<==    Updates: 1
2020-04-16 11:39:54 -耗时 : 57
2020-04-16 11:39:54 -此处进行解密+验签+身份验证
2020-04-16 11:39:54 -解密：
2020-04-16 11:39:54 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:39:54 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:39:54 -==> Parameters: 02(String), 02(String)
2020-04-16 11:39:54 -<==      Total: 15
2020-04-16 11:39:54 -耗时 : 27
2020-04-16 11:39:54 -此处进行解密+验签+身份验证
2020-04-16 11:39:54 -解密：
2020-04-16 11:39:54 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:39:54 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:39:54 -==> Parameters: 03(String), 03(String)
2020-04-16 11:39:54 -<==      Total: 10
2020-04-16 11:39:54 -耗时 : 1
2020-04-16 11:39:59 -此处进行解密+验签+身份验证
2020-04-16 11:39:59 -解密：
2020-04-16 11:39:59 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:39:59 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:39:59 -==> Parameters: 02(String), 02(String)
2020-04-16 11:39:59 -<==      Total: 15
2020-04-16 11:39:59 -耗时 : 2
2020-04-16 11:40:18 -此处进行解密+验签+身份验证
2020-04-16 11:40:18 -解密：
2020-04-16 11:40:18 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:40:18 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:40:18 -==> Parameters: 02(String), 02(String)
2020-04-16 11:40:18 -<==      Total: 15
2020-04-16 11:40:18 -耗时 : 2
2020-04-16 11:40:19 -此处进行解密+验签+身份验证
2020-04-16 11:40:19 -解密：
2020-04-16 11:40:19 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:40:19 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:40:19 -==> Parameters: 04(String), 04(String)
2020-04-16 11:40:19 -<==      Total: 1
2020-04-16 11:40:19 -耗时 : 2
2020-04-16 11:40:22 -此处进行解密+验签+身份验证
2020-04-16 11:40:22 -解密：
2020-04-16 11:40:22 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:40:22 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:40:22 -==> Parameters: 03(String), 03(String)
2020-04-16 11:40:22 -<==      Total: 10
2020-04-16 11:40:22 -耗时 : 3
2020-04-16 11:40:24 -此处进行解密+验签+身份验证
2020-04-16 11:40:24 -解密：
2020-04-16 11:40:24 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:40:24 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:40:24 -==> Parameters: 03(String), 03(String)
2020-04-16 11:40:24 -<==      Total: 10
2020-04-16 11:40:24 -耗时 : 2
2020-04-16 11:40:26 -此处进行解密+验签+身份验证
2020-04-16 11:40:26 -解密：
2020-04-16 11:40:26 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:40:26 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:40:27 -==> Parameters: 03(String), 03(String)
2020-04-16 11:40:27 -<==      Total: 10
2020-04-16 11:40:27 -耗时 : 2
2020-04-16 11:40:44 -此处进行解密+验签+身份验证
2020-04-16 11:40:44 -此处进行解密+验签+身份验证
2020-04-16 11:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:40:44 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:40:44 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:40:44 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 11:40:44 -==> Parameters: 426(String)
2020-04-16 11:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 11:40:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:40:44 -==> Parameters: 426(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -耗时 : 13
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:40:44 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:40:44 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 11:40:44 -<==    Updates: 1
2020-04-16 11:40:44 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:40:44 -==> Parameters: 426(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:40:44 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:40:44 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 11:40:44 -<==    Updates: 1
2020-04-16 11:40:44 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:40:44 -==> Parameters: 
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:40:44 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:40:44 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 11:40:44 -<==    Updates: 1
2020-04-16 11:40:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:40:44 -==> Parameters: 426(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:40:44 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:40:44 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 11:40:44 -<==    Updates: 1
2020-04-16 11:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:40:44 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 11:40:44 -<==      Total: 1
2020-04-16 11:40:44 -耗时 : 70
2020-04-16 11:43:56 -此处进行解密+验签+身份验证
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:43:56 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 11:43:56 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 11:43:56 -==> Parameters: 426(String)
2020-04-16 11:43:56 -<==      Total: 1
2020-04-16 11:43:56 -耗时 : 2
2020-04-16 11:43:56 -此处进行解密+验签+身份验证
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:43:56 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:43:56 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 11:43:56 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:43:56 -<==      Total: 0
2020-04-16 11:43:56 -耗时 : 8
2020-04-16 11:43:56 -此处进行解密+验签+身份验证
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:43:56 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:43:56 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 11:43:56 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:43:56 -<==      Total: 0
2020-04-16 11:43:56 -耗时 : 1
2020-04-16 11:43:56 -此处进行解密+验签+身份验证
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:43:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:43:56 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 11:43:56 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 11:43:56 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:43:56 -<==      Total: 0
2020-04-16 11:43:56 -耗时 : 4
2020-04-16 11:44:02 -此处进行解密+验签+身份验证
2020-04-16 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:02 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 11:44:02 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 11:44:02 -==> Parameters: 426(String), 20200401(String), 20200430(String)
2020-04-16 11:44:03 -<==      Total: 0
2020-04-16 11:44:03 -耗时 : 1228
2020-04-16 11:44:05 -此处进行解密+验签+身份验证
2020-04-16 11:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-16 11:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-16 11:44:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:44:05 -==> Parameters: 426(String), 426(String)
2020-04-16 11:44:05 -此处进行解密+验签+身份验证
2020-04-16 11:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:05 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:44:05 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:44:05 -==> Parameters: 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -耗时 : 5
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:44:05 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:44:05 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-16 11:44:05 -<==    Updates: 1
2020-04-16 11:44:05 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:44:05 -==> Parameters: 426(String), 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:44:05 -==> Parameters: recallFlag(String), 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:44:05 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-16 11:44:05 -<==    Updates: 1
2020-04-16 11:44:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:44:05 -==> Parameters: 
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:44:05 -==> Parameters: collegeFlag(String), 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:44:05 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-16 11:44:05 -<==    Updates: 1
2020-04-16 11:44:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:44:05 -==> Parameters: 426(String), 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:44:05 -==> Parameters: cardFlag(String), 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:44:05 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-16 11:44:05 -<==    Updates: 1
2020-04-16 11:44:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:44:05 -==> Parameters: appImgFlag(String), 426(String)
2020-04-16 11:44:05 -<==      Total: 1
2020-04-16 11:44:05 -耗时 : 128
2020-04-16 11:44:11 -此处进行解密+验签+身份验证
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:11 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 11:44:11 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 11:44:11 -==> Parameters: 426(String)
2020-04-16 11:44:11 -此处进行解密+验签+身份验证
2020-04-16 11:44:11 -<==      Total: 1
2020-04-16 11:44:11 -耗时 : 2
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:11 -此处进行解密+验签+身份验证
2020-04-16 11:44:11 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 11:44:11 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:11 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:11 -此处进行解密+验签+身份验证
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:11 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:44:11 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 11:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:11 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:44:11 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:44:11 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 11:44:11 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:44:11 -<==      Total: 0
2020-04-16 11:44:11 -<==      Total: 0
2020-04-16 11:44:11 -耗时 : 6
2020-04-16 11:44:11 -耗时 : 4
2020-04-16 11:44:11 -<==      Total: 0
2020-04-16 11:44:11 -耗时 : 11
2020-04-16 11:44:14 -此处进行解密+验签+身份验证
2020-04-16 11:44:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 11:44:14 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 11:44:14 -==> Parameters: 426(String)
2020-04-16 11:44:14 -<==      Total: 1
2020-04-16 11:44:14 -耗时 : 2
2020-04-16 11:44:14 -此处进行解密+验签+身份验证
2020-04-16 11:44:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:15 -此处进行解密+验签+身份验证
2020-04-16 11:44:15 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:44:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:15 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 11:44:15 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:44:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:15 -<==      Total: 0
2020-04-16 11:44:15 -耗时 : 1
2020-04-16 11:44:15 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 11:44:15 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 11:44:15 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:44:15 -此处进行解密+验签+身份验证
2020-04-16 11:44:15 -<==      Total: 0
2020-04-16 11:44:15 -耗时 : 2
2020-04-16 11:44:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-16 11:44:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-16 11:44:15 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:44:15 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 11:44:15 -==> Parameters: 426(String), 202004(String)
2020-04-16 11:44:15 -<==      Total: 0
2020-04-16 11:44:15 -耗时 : 2
2020-04-16 11:44:24 -此处进行解密+验签+身份验证
2020-04-16 11:44:24 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-04-16 11:44:24 -token值=======426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP
2020-04-16 11:44:24 -==>  Preparing: update t_user_info set device_token=? where id=? 
2020-04-16 11:44:24 -==> Parameters: null, 426(String)
2020-04-16 11:44:24 -<==    Updates: 1
2020-04-16 11:44:24 -耗时 : 30
2020-04-16 11:44:48 -此处进行解密+验签+身份验证
2020-04-16 11:44:48 -解密：{"version_no":"","login_password":"8A6F2805B4515AC12058E79E66539BE9","login_type":"account","sign":"3E72A9D20D793E544591F970E6176C23","device_no":"1.1.4","device_type":"android","sys_user_account":"13322990711"}
2020-04-16 11:44:48 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 11:44:48 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-16 11:44:48 -==> Parameters: 13322990711(String)
2020-04-16 11:44:48 -<==      Total: 1
2020-04-16 11:44:48 -耗时 : 48
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -解密：{"version_no":"","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","login_type":"account","sign":"41AB57816D026EC0FB664984B27C4C7C","device_no":"1.1.4","device_type":"android","sys_user_account":"13322990711"}
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 11:45:16 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-16 11:45:16 -==> Parameters: 13322990711(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-04-16 11:45:16 -==> Parameters: android(String), 1.1.4(String), (String), null, 192.168.191.1(String), 20200416(String), 114516(String), 181(Integer)
2020-04-16 11:45:16 -<==    Updates: 1
2020-04-16 11:45:16 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 11:45:16 -==> Parameters: 26(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 11:45:16 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 11:45:16 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 11:45:16 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 11:45:16 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 11:45:16 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 11:45:16 -耗时 : 42
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:45:16 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:45:16 -==> Parameters: 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -耗时 : 1
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 11:45:16 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 11:45:16 -==> Parameters: 
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -<==      Total: 3
2020-04-16 11:45:16 -解密：
2020-04-16 11:45:16 -耗时 : 4
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 11:45:16 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 11:45:16 -==> Parameters: 01(String), 01(String)
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -<==      Total: 4
2020-04-16 11:45:16 -耗时 : 4
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 11:45:16 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 11:45:16 -==> Parameters: 181(String)
2020-04-16 11:45:16 -<==      Total: 2
2020-04-16 11:45:16 -耗时 : 4
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:45:16 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:45:16 -==> Parameters: 181(String)
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -耗时 : 3
2020-04-16 11:45:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:45:16 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 2
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 11:45:16 -<==    Updates: 2
2020-04-16 11:45:16 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:45:16 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 11:45:16 -此处进行解密+验签+身份验证
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:16 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 11:45:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 11:45:16 -<==    Updates: 1
2020-04-16 11:45:16 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:45:16 -==> Parameters: 
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 11:45:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:45:16 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 2
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 11:45:16 -<==    Updates: 1
2020-04-16 11:45:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:45:16 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -<==    Updates: 2
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:45:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 11:45:16 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 11:45:16 -<==    Updates: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -耗时 : 66
2020-04-16 11:45:16 -<==    Updates: 1
2020-04-16 11:45:16 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:45:16 -==> Parameters: 
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 11:45:16 -<==    Updates: 1
2020-04-16 11:45:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:45:16 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:16 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 11:45:16 -<==      Total: 1
2020-04-16 11:45:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 11:45:17 -<==    Updates: 1
2020-04-16 11:45:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:17 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 11:45:17 -<==      Total: 1
2020-04-16 11:45:17 -耗时 : 68
2020-04-16 11:45:23 -此处进行解密+验签+身份验证
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 11:45:23 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 11:45:23 -==> Parameters: 181(String)
2020-04-16 11:45:23 -<==      Total: 1
2020-04-16 11:45:23 -耗时 : 1
2020-04-16 11:45:23 -此处进行解密+验签+身份验证
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:45:23 -此处进行解密+验签+身份验证
2020-04-16 11:45:23 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 11:45:23 -==> Parameters: 181(String), 202004(String)
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:45:23 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 11:45:23 -==> Parameters: 181(String), 202004(String)
2020-04-16 11:45:23 -此处进行解密+验签+身份验证
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:23 -<==      Total: 1
2020-04-16 11:45:23 -<==      Total: 1
2020-04-16 11:45:23 -耗时 : 7
2020-04-16 11:45:23 -耗时 : 4
2020-04-16 11:45:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 11:45:23 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 11:45:23 -==> Parameters: 181(String), 202004(String)
2020-04-16 11:45:23 -<==      Total: 0
2020-04-16 11:45:23 -耗时 : 2
2020-04-16 11:45:25 -此处进行解密+验签+身份验证
2020-04-16 11:45:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:25 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 11:45:25 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 11:45:25 -==> Parameters: 181(String), 20200401(String), 20200430(String)
2020-04-16 11:45:26 -<==      Total: 0
2020-04-16 11:45:26 -耗时 : 1211
2020-04-16 11:45:27 -此处进行解密+验签+身份验证
2020-04-16 11:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:27 -此处进行解密+验签+身份验证
2020-04-16 11:45:27 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:27 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:45:27 -==> Parameters: 181(String)
2020-04-16 11:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 11:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -耗时 : 2
2020-04-16 11:45:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:45:27 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:27 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 2
2020-04-16 11:45:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:27 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 11:45:27 -<==    Updates: 2
2020-04-16 11:45:27 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:45:27 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:27 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:27 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 11:45:27 -<==    Updates: 1
2020-04-16 11:45:27 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:45:27 -==> Parameters: 
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:27 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:27 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 11:45:27 -<==    Updates: 1
2020-04-16 11:45:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:45:27 -==> Parameters: 181(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:27 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:45:27 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 11:45:27 -<==    Updates: 1
2020-04-16 11:45:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:45:27 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 11:45:27 -<==      Total: 1
2020-04-16 11:45:27 -耗时 : 112
2020-04-16 11:45:35 -此处进行解密+验签+身份验证
2020-04-16 11:45:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:35 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:45:35 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 11:45:35 -==> Parameters: 181(String), 202003(String)
2020-04-16 11:45:35 -<==      Total: 1
2020-04-16 11:45:35 -耗时 : 6
2020-04-16 11:45:35 -此处进行解密+验签+身份验证
2020-04-16 11:45:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:35 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 11:45:35 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 11:45:35 -==> Parameters: 181(String), 202003(String)
2020-04-16 11:45:35 -<==      Total: 1
2020-04-16 11:45:35 -耗时 : 3
2020-04-16 11:45:35 -此处进行解密+验签+身份验证
2020-04-16 11:45:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:35 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 11:45:35 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 11:45:35 -==> Parameters: 181(String), 202003(String)
2020-04-16 11:45:35 -<==      Total: 1
2020-04-16 11:45:35 -耗时 : 5
2020-04-16 11:45:38 -此处进行解密+验签+身份验证
2020-04-16 11:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:45:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 11:45:38 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 11:45:38 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 11:45:38 -<==      Total: 10
2020-04-16 11:45:38 -耗时 : 12
2020-04-16 11:46:08 -此处进行解密+验签+身份验证
2020-04-16 11:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:46:08 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 11:46:08 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 11:46:08 -==> Parameters: 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -耗时 : 2
2020-04-16 11:46:08 -此处进行解密+验签+身份验证
2020-04-16 11:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:46:08 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 11:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 11:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 11:46:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:46:08 -==> Parameters: 181(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:46:08 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 2
2020-04-16 11:46:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:46:08 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 11:46:08 -<==    Updates: 2
2020-04-16 11:46:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 11:46:08 -==> Parameters: 181(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:46:08 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:46:08 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 11:46:08 -<==    Updates: 1
2020-04-16 11:46:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 11:46:08 -==> Parameters: 
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:46:08 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:46:08 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 11:46:08 -<==    Updates: 1
2020-04-16 11:46:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 11:46:08 -==> Parameters: 181(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:46:08 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 11:46:08 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 11:46:08 -<==    Updates: 1
2020-04-16 11:46:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 11:46:08 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 11:46:08 -<==      Total: 1
2020-04-16 11:46:08 -耗时 : 63
2020-04-16 11:46:13 -此处进行解密+验签+身份验证
2020-04-16 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 11:46:13 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 11:46:13 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 11:46:13 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 11:46:13 -<==      Total: 10
2020-04-16 11:46:13 -耗时 : 3
2020-04-16 14:37:01 -此处进行解密+验签+身份验证
2020-04-16 14:37:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:37:01 -此处进行解密+验签+身份验证
2020-04-16 14:37:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:37:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:37:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:37:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:37:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:37:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:37:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:37:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:37:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:37:01 -==> Parameters: 181(String)
2020-04-16 14:37:01 -==> Parameters: 181(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -耗时 : 13
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:37:01 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 2
2020-04-16 14:37:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:37:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:37:01 -<==    Updates: 2
2020-04-16 14:37:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:37:01 -==> Parameters: 181(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:37:01 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:37:01 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:37:01 -<==    Updates: 1
2020-04-16 14:37:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:37:01 -==> Parameters: 
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:37:01 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:37:01 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:37:01 -<==    Updates: 1
2020-04-16 14:37:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:37:01 -==> Parameters: 181(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:37:01 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:37:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:37:01 -<==    Updates: 1
2020-04-16 14:37:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:37:01 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:37:01 -<==      Total: 1
2020-04-16 14:37:01 -耗时 : 112
2020-04-16 14:37:03 -此处进行解密+验签+身份验证
2020-04-16 14:37:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:37:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:37:03 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 14:37:03 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 14:37:03 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 14:37:03 -<==      Total: 10
2020-04-16 14:37:03 -耗时 : 12
2020-04-16 14:38:17 -此处进行解密+验签+身份验证
2020-04-16 14:38:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:38:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:38:17 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:38:17 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:38:17 -==> Parameters: 181(String)
2020-04-16 14:38:17 -此处进行解密+验签+身份验证
2020-04-16 14:38:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:38:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:38:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:38:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:38:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:38:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:38:17 -==> Parameters: 181(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -耗时 : 18
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:38:17 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 2
2020-04-16 14:38:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:38:17 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:38:17 -<==    Updates: 2
2020-04-16 14:38:17 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:38:17 -==> Parameters: 181(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:38:17 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:38:17 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:38:17 -<==    Updates: 1
2020-04-16 14:38:17 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:38:17 -==> Parameters: 
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:38:17 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:38:17 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:38:17 -<==    Updates: 1
2020-04-16 14:38:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:38:17 -==> Parameters: 181(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:38:17 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:38:17 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:38:17 -<==    Updates: 1
2020-04-16 14:38:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:38:17 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:38:17 -<==      Total: 1
2020-04-16 14:38:17 -耗时 : 106
2020-04-16 14:40:15 -此处进行解密+验签+身份验证
2020-04-16 14:40:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:40:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:40:15 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 14:40:15 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 14:40:15 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 14:40:15 -<==      Total: 10
2020-04-16 14:40:15 -耗时 : 44
2020-04-16 14:53:41 -此处进行解密+验签+身份验证
2020-04-16 14:53:41 -解密：
2020-04-16 14:53:41 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 14:53:41 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 14:53:41 -==> Parameters: 04(String), 04(String)
2020-04-16 14:53:41 -<==      Total: 1
2020-04-16 14:53:41 -耗时 : 13
2020-04-16 14:53:41 -此处进行解密+验签+身份验证
2020-04-16 14:53:41 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 14:53:41 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 14:53:41 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 14:53:41 -耗时 : 6
2020-04-16 14:53:41 -此处进行解密+验签+身份验证
2020-04-16 14:53:41 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 14:53:41 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 14:53:41 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 14:53:41 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 14:53:41 -==> Parameters: 181(String)
2020-04-16 14:53:41 -<==      Total: 1
2020-04-16 14:53:41 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 14:53:41 -==> Parameters: 26(String)
2020-04-16 14:53:41 -<==      Total: 1
2020-04-16 14:53:41 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 14:53:41 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 14:53:41 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 14:53:41 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 14:53:41 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 14:53:41 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 14:53:41 -耗时 : 22
2020-04-16 14:53:45 -此处进行解密+验签+身份验证
2020-04-16 14:53:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:45 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:53:45 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:53:45 -==> Parameters: 181(String)
2020-04-16 14:53:45 -<==      Total: 1
2020-04-16 14:53:45 -耗时 : 1
2020-04-16 14:53:46 -此处进行解密+验签+身份验证
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 14:53:46 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 14:53:46 -==> Parameters: 181(String)
2020-04-16 14:53:46 -此处进行解密+验签+身份验证
2020-04-16 14:53:46 -解密：
2020-04-16 14:53:46 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 14:53:46 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 14:53:46 -==> Parameters: 01(String), 01(String)
2020-04-16 14:53:46 -<==      Total: 4
2020-04-16 14:53:46 -耗时 : 3
2020-04-16 14:53:46 -<==      Total: 2
2020-04-16 14:53:46 -耗时 : 31
2020-04-16 14:53:46 -此处进行解密+验签+身份验证
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:53:46 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:53:46 -==> Parameters: 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -耗时 : 2
2020-04-16 14:53:46 -此处进行解密+验签+身份验证
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:46 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 14:53:46 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 14:53:46 -==> Parameters: 
2020-04-16 14:53:46 -此处进行解密+验签+身份验证
2020-04-16 14:53:46 -<==      Total: 3
2020-04-16 14:53:46 -耗时 : 6
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:53:46 -此处进行解密+验签+身份验证
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:53:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:53:46 -==> Parameters: 181(String), 181(String)
2020-04-16 14:53:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:53:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:53:46 -==> Parameters: 181(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 2
2020-04-16 14:53:46 -<==      Total: 2
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:53:46 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:53:46 -<==    Updates: 2
2020-04-16 14:53:46 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:53:46 -==> Parameters: 181(String), 181(String)
2020-04-16 14:53:46 -<==    Updates: 2
2020-04-16 14:53:46 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:53:46 -==> Parameters: 181(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:53:46 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:53:46 -<==    Updates: 1
2020-04-16 14:53:46 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:53:46 -==> Parameters: 
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:53:46 -<==    Updates: 1
2020-04-16 14:53:46 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:53:46 -==> Parameters: 
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:53:46 -<==    Updates: 1
2020-04-16 14:53:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:53:46 -==> Parameters: 181(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:53:46 -<==    Updates: 1
2020-04-16 14:53:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:53:46 -==> Parameters: 181(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:53:46 -<==    Updates: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:53:46 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -耗时 : 154
2020-04-16 14:53:46 -<==    Updates: 1
2020-04-16 14:53:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:53:46 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:53:46 -<==      Total: 1
2020-04-16 14:53:46 -耗时 : 158
2020-04-16 14:53:57 -此处进行解密+验签+身份验证
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:57 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 14:53:57 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 14:53:57 -==> Parameters: 181(String)
2020-04-16 14:53:57 -<==      Total: 1
2020-04-16 14:53:57 -耗时 : 1
2020-04-16 14:53:57 -此处进行解密+验签+身份验证
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:57 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:53:57 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 14:53:57 -==> Parameters: 181(String), 202004(String)
2020-04-16 14:53:57 -此处进行解密+验签+身份验证
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:57 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:53:57 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 14:53:57 -==> Parameters: 181(String), 202004(String)
2020-04-16 14:53:57 -此处进行解密+验签+身份验证
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:53:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:53:57 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 14:53:57 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 14:53:57 -<==      Total: 1
2020-04-16 14:53:57 -==> Parameters: 181(String), 202004(String)
2020-04-16 14:53:57 -耗时 : 29
2020-04-16 14:53:57 -<==      Total: 1
2020-04-16 14:53:57 -耗时 : 39
2020-04-16 14:53:57 -<==      Total: 0
2020-04-16 14:53:57 -耗时 : 7
2020-04-16 14:54:02 -此处进行解密+验签+身份验证
2020-04-16 14:54:02 -此处进行解密+验签+身份验证
2020-04-16 14:54:02 -此处进行解密+验签+身份验证
2020-04-16 14:54:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:02 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 14:54:02 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:54:02 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 14:54:02 -==> Parameters: 181(String), 202003(String)
2020-04-16 14:54:02 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:54:02 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 14:54:02 -==> Parameters: 181(String), 202003(String)
2020-04-16 14:54:02 -<==      Total: 1
2020-04-16 14:54:02 -耗时 : 35
2020-04-16 14:54:02 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 14:54:02 -==> Parameters: 181(String), 202003(String)
2020-04-16 14:54:02 -<==      Total: 1
2020-04-16 14:54:02 -耗时 : 39
2020-04-16 14:54:02 -<==      Total: 1
2020-04-16 14:54:02 -耗时 : 38
2020-04-16 14:54:03 -此处进行解密+验签+身份验证
2020-04-16 14:54:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:03 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 14:54:03 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 14:54:03 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 14:54:04 -<==      Total: 10
2020-04-16 14:54:04 -耗时 : 58
2020-04-16 14:54:12 -此处进行解密+验签+身份验证
2020-04-16 14:54:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:12 -此处进行解密+验签+身份验证
2020-04-16 14:54:12 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:54:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:54:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:54:12 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:54:12 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:54:12 -==> Parameters: 181(String)
2020-04-16 14:54:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:12 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -耗时 : 1
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:12 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 2
2020-04-16 14:54:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:12 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:54:12 -<==    Updates: 2
2020-04-16 14:54:12 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:54:12 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:12 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:12 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:54:12 -<==    Updates: 1
2020-04-16 14:54:12 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:54:12 -==> Parameters: 
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:12 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:12 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:54:12 -<==    Updates: 1
2020-04-16 14:54:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:12 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:12 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:12 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:54:12 -<==    Updates: 1
2020-04-16 14:54:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:12 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:54:12 -<==      Total: 1
2020-04-16 14:54:12 -耗时 : 150
2020-04-16 14:54:16 -此处进行解密+验签+身份验证
2020-04-16 14:54:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:16 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 14:54:16 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 14:54:16 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 14:54:16 -<==      Total: 10
2020-04-16 14:54:16 -耗时 : 7
2020-04-16 14:54:18 -此处进行解密+验签+身份验证
2020-04-16 14:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:18 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:54:18 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:18 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:18 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 2
2020-04-16 14:54:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:18 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:54:18 -此处进行解密+验签+身份验证
2020-04-16 14:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:18 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:54:18 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:54:18 -==> Parameters: 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -耗时 : 2
2020-04-16 14:54:18 -<==    Updates: 2
2020-04-16 14:54:18 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:54:18 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:18 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:18 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:54:18 -<==    Updates: 1
2020-04-16 14:54:18 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:54:18 -==> Parameters: 
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:18 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:18 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:54:18 -<==    Updates: 1
2020-04-16 14:54:18 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:18 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:18 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:18 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:54:18 -<==    Updates: 1
2020-04-16 14:54:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:18 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:54:18 -<==      Total: 1
2020-04-16 14:54:18 -耗时 : 101
2020-04-16 14:54:22 -此处进行解密+验签+身份验证
2020-04-16 14:54:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-04-16 14:54:22 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 14:54:22 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 14:54:24 -<==      Total: 0
2020-04-16 14:54:24 -耗时 : 1767
2020-04-16 14:54:24 -此处进行解密+验签+身份验证
2020-04-16 14:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:54:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:24 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:24 -此处进行解密+验签+身份验证
2020-04-16 14:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:54:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:54:24 -==> Parameters: 181(String)
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -耗时 : 31
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:24 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:54:24 -<==      Total: 2
2020-04-16 14:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:54:24 -<==    Updates: 2
2020-04-16 14:54:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:54:24 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:24 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:24 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:54:24 -<==    Updates: 1
2020-04-16 14:54:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:54:24 -==> Parameters: 
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:24 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:24 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:54:24 -<==    Updates: 1
2020-04-16 14:54:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:24 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:24 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:54:24 -<==    Updates: 1
2020-04-16 14:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:24 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:54:24 -<==      Total: 1
2020-04-16 14:54:24 -耗时 : 154
2020-04-16 14:54:29 -此处进行解密+验签+身份验证
2020-04-16 14:54:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:54:29 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 14:54:29 -==> Parameters: 181(String), 202002(String)
2020-04-16 14:54:29 -此处进行解密+验签+身份验证
2020-04-16 14:54:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 14:54:29 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 14:54:29 -==> Parameters: 181(String), 202002(String)
2020-04-16 14:54:29 -此处进行解密+验签+身份验证
2020-04-16 14:54:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:54:29 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 14:54:29 -==> Parameters: 181(String), 202002(String)
2020-04-16 14:54:29 -<==      Total: 0
2020-04-16 14:54:29 -耗时 : 36
2020-04-16 14:54:29 -<==      Total: 1
2020-04-16 14:54:29 -耗时 : 28
2020-04-16 14:54:29 -<==      Total: 1
2020-04-16 14:54:29 -耗时 : 32
2020-04-16 14:54:32 -此处进行解密+验签+身份验证
2020-04-16 14:54:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:32 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:54:32 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 14:54:32 -==> Parameters: 181(String), 202001(String)
2020-04-16 14:54:32 -此处进行解密+验签+身份验证
2020-04-16 14:54:32 -<==      Total: 0
2020-04-16 14:54:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:32 -耗时 : 2
2020-04-16 14:54:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:32 -此处进行解密+验签+身份验证
2020-04-16 14:54:32 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 14:54:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:32 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 14:54:32 -==> Parameters: 181(String), 202001(String)
2020-04-16 14:54:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:32 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 14:54:32 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 14:54:32 -==> Parameters: 181(String), 202001(String)
2020-04-16 14:54:32 -<==      Total: 1
2020-04-16 14:54:32 -<==      Total: 1
2020-04-16 14:54:32 -耗时 : 37
2020-04-16 14:54:32 -耗时 : 35
2020-04-16 14:54:33 -此处进行解密+验签+身份验证
2020-04-16 14:54:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:33 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-04-16 14:54:33 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 14:54:33 -==> Parameters: 181(String), 20200101(String), 20200131(String)
2020-04-16 14:54:35 -<==      Total: 0
2020-04-16 14:54:35 -耗时 : 1682
2020-04-16 14:54:36 -此处进行解密+验签+身份验证
2020-04-16 14:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:36 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:54:36 -此处进行解密+验签+身份验证
2020-04-16 14:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:36 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:36 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:36 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:54:36 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:54:36 -==> Parameters: 181(String)
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -耗时 : 40
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:36 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:54:36 -<==      Total: 2
2020-04-16 14:54:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:36 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:54:36 -<==    Updates: 2
2020-04-16 14:54:36 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:54:36 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:36 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:36 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:54:36 -<==    Updates: 1
2020-04-16 14:54:36 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:54:36 -==> Parameters: 
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:36 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:36 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:54:36 -<==    Updates: 1
2020-04-16 14:54:36 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:54:36 -==> Parameters: 181(String), 181(String)
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:36 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:54:36 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:54:36 -<==    Updates: 1
2020-04-16 14:54:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:54:36 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:54:36 -<==      Total: 1
2020-04-16 14:54:36 -耗时 : 157
2020-04-16 14:54:41 -此处进行解密+验签+身份验证
2020-04-16 14:54:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:54:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:54:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 14:54:41 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 14:54:41 -==> Parameters: 181(String), 20200101(String), 20200131(String)
2020-04-16 14:54:42 -<==      Total: 10
2020-04-16 14:54:42 -耗时 : 745
2020-04-16 14:56:20 -此处进行解密+验签+身份验证
2020-04-16 14:56:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:56:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:56:20 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:56:20 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:56:20 -==> Parameters: 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -耗时 : 12
2020-04-16 14:56:20 -此处进行解密+验签+身份验证
2020-04-16 14:56:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:56:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:56:20 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:56:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:56:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:56:20 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:56:20 -==> Parameters: 181(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:56:20 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 2
2020-04-16 14:56:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:56:20 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:56:20 -<==    Updates: 2
2020-04-16 14:56:20 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:56:20 -==> Parameters: 181(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:56:20 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:56:20 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:56:20 -<==    Updates: 1
2020-04-16 14:56:20 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:56:20 -==> Parameters: 
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:56:20 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:56:20 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:56:20 -<==    Updates: 1
2020-04-16 14:56:20 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:56:20 -==> Parameters: 181(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:56:20 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:56:20 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:56:20 -<==    Updates: 1
2020-04-16 14:56:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:56:20 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:56:20 -<==      Total: 1
2020-04-16 14:56:20 -耗时 : 123
2020-04-16 14:56:25 -此处进行解密+验签+身份验证
2020-04-16 14:56:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:56:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:56:25 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 14:56:25 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 14:56:25 -==> Parameters: 181(String), 20200101(String), 20200131(String)
2020-04-16 14:56:26 -<==      Total: 10
2020-04-16 14:56:26 -耗时 : 1155
2020-04-16 14:57:49 -此处进行解密+验签+身份验证
2020-04-16 14:57:49 -此处进行解密+验签+身份验证
2020-04-16 14:57:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:57:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:57:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:57:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:57:49 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 14:57:49 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 14:57:49 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 14:57:49 -==> Parameters: 181(String)
2020-04-16 14:57:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 14:57:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 14:57:49 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:57:49 -==> Parameters: 181(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -耗时 : 42
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:57:49 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 2
2020-04-16 14:57:49 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:57:49 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 14:57:49 -<==    Updates: 2
2020-04-16 14:57:49 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 14:57:49 -==> Parameters: 181(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:57:49 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:57:49 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 14:57:49 -<==    Updates: 1
2020-04-16 14:57:49 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 14:57:49 -==> Parameters: 
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:57:49 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:57:49 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 14:57:49 -<==    Updates: 1
2020-04-16 14:57:49 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 14:57:49 -==> Parameters: 181(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:57:49 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 14:57:49 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 14:57:49 -<==    Updates: 1
2020-04-16 14:57:49 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 14:57:49 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 14:57:49 -<==      Total: 1
2020-04-16 14:57:49 -耗时 : 151
2020-04-16 14:57:51 -此处进行解密+验签+身份验证
2020-04-16 14:57:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 14:57:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 14:57:51 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 14:57:51 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 14:57:51 -==> Parameters: 181(String), 20200101(String), 20200131(String)
2020-04-16 14:57:52 -<==      Total: 10
2020-04-16 14:57:52 -耗时 : 880
2020-04-16 15:43:57 -此处进行解密+验签+身份验证
2020-04-16 15:43:57 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 15:43:58 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 15:43:58 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 15:43:58 -耗时 : 7
2020-04-16 15:43:58 -此处进行解密+验签+身份验证
2020-04-16 15:43:58 -解密：
2020-04-16 15:43:58 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 15:43:58 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 15:43:58 -==> Parameters: 04(String), 04(String)
2020-04-16 15:43:58 -<==      Total: 1
2020-04-16 15:43:58 -耗时 : 41
2020-04-16 15:43:58 -此处进行解密+验签+身份验证
2020-04-16 15:43:58 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 15:43:58 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 15:43:58 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 15:43:58 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 15:43:58 -==> Parameters: 181(String)
2020-04-16 15:43:58 -<==      Total: 1
2020-04-16 15:43:58 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 15:43:58 -==> Parameters: 26(String)
2020-04-16 15:43:58 -<==      Total: 1
2020-04-16 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 15:43:58 -耗时 : 14
2020-04-16 15:44:02 -此处进行解密+验签+身份验证
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:02 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 15:44:02 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 15:44:02 -==> Parameters: 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -耗时 : 1
2020-04-16 15:44:02 -此处进行解密+验签+身份验证
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 15:44:02 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 15:44:02 -==> Parameters: 181(String)
2020-04-16 15:44:02 -<==      Total: 2
2020-04-16 15:44:02 -耗时 : 10
2020-04-16 15:44:02 -此处进行解密+验签+身份验证
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:02 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 15:44:02 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 15:44:02 -==> Parameters: 
2020-04-16 15:44:02 -<==      Total: 3
2020-04-16 15:44:02 -耗时 : 4
2020-04-16 15:44:02 -此处进行解密+验签+身份验证
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:02 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 15:44:02 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 15:44:02 -==> Parameters: 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -耗时 : 1
2020-04-16 15:44:02 -此处进行解密+验签+身份验证
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 15:44:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:44:02 -==> Parameters: 181(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:02 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 2
2020-04-16 15:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:02 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 15:44:02 -<==    Updates: 2
2020-04-16 15:44:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 15:44:02 -==> Parameters: 181(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:02 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:02 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 15:44:02 -此处进行解密+验签+身份验证
2020-04-16 15:44:02 -解密：
2020-04-16 15:44:02 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 15:44:02 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 15:44:02 -==> Parameters: 01(String), 01(String)
2020-04-16 15:44:02 -<==      Total: 4
2020-04-16 15:44:02 -<==    Updates: 1
2020-04-16 15:44:02 -耗时 : 5
2020-04-16 15:44:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 15:44:02 -==> Parameters: 
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:02 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:02 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 15:44:02 -<==    Updates: 1
2020-04-16 15:44:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:44:02 -==> Parameters: 181(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:02 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:02 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 15:44:02 -<==    Updates: 1
2020-04-16 15:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:02 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -耗时 : 135
2020-04-16 15:44:02 -此处进行解密+验签+身份验证
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 15:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 15:44:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:44:02 -==> Parameters: 181(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 1
2020-04-16 15:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:02 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 15:44:02 -<==      Total: 2
2020-04-16 15:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:02 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 15:44:02 -<==    Updates: 2
2020-04-16 15:44:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 15:44:02 -==> Parameters: 181(String), 181(String)
2020-04-16 15:44:03 -<==      Total: 1
2020-04-16 15:44:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:03 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 15:44:03 -<==      Total: 1
2020-04-16 15:44:03 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:03 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 15:44:03 -<==    Updates: 1
2020-04-16 15:44:03 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 15:44:03 -==> Parameters: 
2020-04-16 15:44:03 -<==      Total: 1
2020-04-16 15:44:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:03 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 15:44:03 -<==      Total: 1
2020-04-16 15:44:03 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:03 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 15:44:03 -<==    Updates: 1
2020-04-16 15:44:03 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:44:03 -==> Parameters: 181(String), 181(String)
2020-04-16 15:44:03 -<==      Total: 1
2020-04-16 15:44:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:03 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 15:44:03 -<==      Total: 1
2020-04-16 15:44:03 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:44:03 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 15:44:03 -<==    Updates: 1
2020-04-16 15:44:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:44:03 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 15:44:03 -<==      Total: 1
2020-04-16 15:44:03 -耗时 : 81
2020-04-16 15:44:41 -此处进行解密+验签+身份验证
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 15:44:41 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 15:44:41 -==> Parameters: 181(String)
2020-04-16 15:44:41 -<==      Total: 1
2020-04-16 15:44:41 -耗时 : 11
2020-04-16 15:44:41 -此处进行解密+验签+身份验证
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:44:41 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 15:44:41 -==> Parameters: 181(String), 202004(String)
2020-04-16 15:44:41 -<==      Total: 1
2020-04-16 15:44:41 -耗时 : 12
2020-04-16 15:44:41 -此处进行解密+验签+身份验证
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 15:44:41 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 15:44:41 -==> Parameters: 181(String), 202004(String)
2020-04-16 15:44:41 -<==      Total: 0
2020-04-16 15:44:41 -耗时 : 3
2020-04-16 15:44:41 -此处进行解密+验签+身份验证
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:44:41 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 15:44:41 -==> Parameters: 181(String), 202004(String)
2020-04-16 15:44:41 -<==      Total: 1
2020-04-16 15:44:41 -耗时 : 1
2020-04-16 15:44:50 -此处进行解密+验签+身份验证
2020-04-16 15:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:44:50 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 15:44:50 -==> Parameters: 181(String), 202003(String)
2020-04-16 15:44:50 -<==      Total: 1
2020-04-16 15:44:50 -耗时 : 10
2020-04-16 15:44:50 -此处进行解密+验签+身份验证
2020-04-16 15:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:44:50 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 15:44:50 -==> Parameters: 181(String), 202003(String)
2020-04-16 15:44:50 -<==      Total: 1
2020-04-16 15:44:50 -耗时 : 4
2020-04-16 15:44:50 -此处进行解密+验签+身份验证
2020-04-16 15:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 15:44:50 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 15:44:50 -==> Parameters: 181(String), 202003(String)
2020-04-16 15:44:50 -<==      Total: 1
2020-04-16 15:44:50 -耗时 : 3
2020-04-16 15:44:52 -此处进行解密+验签+身份验证
2020-04-16 15:44:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:44:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:44:52 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 15:44:52 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 15:44:52 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 15:44:52 -<==      Total: 10
2020-04-16 15:44:52 -耗时 : 9
2020-04-16 15:51:36 -Starting LongEcologicalApplication on PC-201905161910 with PID 19192 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-16 15:51:36 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-16 15:51:36 -No active profile set, falling back to default profiles: default
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:37 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 15:51:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 15:51:38 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 15:51:38 -Finished Spring Data repository scanning in 118ms. Found 0 repository interfaces.
2020-04-16 15:51:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 15:51:38 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 15:51:38 -Finished Spring Data repository scanning in 57ms. Found 0 repository interfaces.
2020-04-16 15:51:38 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$89a26c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 15:51:38 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$31e0b64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 15:51:39 -Tomcat initialized with port(s): 8080 (http)
2020-04-16 15:51:39 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-16 15:51:39 -Starting service [Tomcat]
2020-04-16 15:51:39 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-16 15:51:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-16 15:51:39 -Initializing Spring embedded WebApplicationContext
2020-04-16 15:51:39 -Root WebApplicationContext: initialization completed in 2745 ms
2020-04-16 15:51:39 -Filter xssFilter was not registered (disabled)
2020-04-16 15:51:40 -HikariPool-1 - Starting...
2020-04-16 15:51:40 -HikariPool-1 - Start completed.
2020-04-16 15:51:40 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-16 15:51:40 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-16 15:51:40 -HHH000206: hibernate.properties not found
2020-04-16 15:51:40 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-16 15:51:41 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-16 15:51:41 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-16 15:51:41 -Using default implementation for ThreadExecutor
2020-04-16 15:51:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-16 15:51:41 -Quartz Scheduler v.2.3.0 created.
2020-04-16 15:51:41 -RAMJobStore initialized.
2020-04-16 15:51:41 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-16 15:51:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-16 15:51:41 -Quartz scheduler version: 2.3.0
2020-04-16 15:51:41 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@22048bd6
2020-04-16 15:51:42 -STAET TaskExecutorConfig
2020-04-16 15:51:42 -Initializing ExecutorService
2020-04-16 15:51:42 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-16 15:51:42 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-16 15:51:42 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-16 15:51:43 -Initializing ExecutorService 'taskScheduler'
2020-04-16 15:51:43 -Starting Quartz Scheduler now
2020-04-16 15:51:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-16 15:51:43 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-16 15:51:43 -Using a shared selector for servlet write/read
2020-04-16 15:51:43 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-16 15:51:43 -Started LongEcologicalApplication in 7.181 seconds (JVM running for 8.961)
2020-04-16 15:53:06 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-16 15:53:06 -Initializing Servlet 'dispatcherServlet'
2020-04-16 15:53:06 -Completed initialization in 13 ms
2020-04-16 15:53:06 -此处进行解密+验签+身份验证
2020-04-16 15:53:06 -此处进行解密+验签+身份验证
2020-04-16 15:53:06 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 15:53:06 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 15:53:06 -Starting without optional epoll library
2020-04-16 15:53:06 -Starting without optional kqueue library
2020-04-16 15:53:06 -解密：
2020-04-16 15:53:07 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 15:53:07 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 15:53:07 -==> Parameters: 04(String), 04(String)
2020-04-16 15:53:07 -<==      Total: 1
2020-04-16 15:53:07 -耗时 : 56
2020-04-16 15:53:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 15:53:07 -耗时 : 936
2020-04-16 15:53:07 -此处进行解密+验签+身份验证
2020-04-16 15:53:07 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 15:53:07 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 15:53:07 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 15:53:07 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 15:53:07 -==> Parameters: 181(String)
2020-04-16 15:53:07 -<==      Total: 1
2020-04-16 15:53:07 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 15:53:07 -==> Parameters: 26(String)
2020-04-16 15:53:07 -<==      Total: 1
2020-04-16 15:53:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 15:53:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 15:53:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 15:53:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 15:53:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 15:53:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 15:53:07 -耗时 : 33
2020-04-16 15:53:10 -此处进行解密+验签+身份验证
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 15:53:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 15:53:10 -==> Parameters: 181(String)
2020-04-16 15:53:10 -<==      Total: 1
2020-04-16 15:53:10 -耗时 : 6
2020-04-16 15:53:10 -此处进行解密+验签+身份验证
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 15:53:10 -此处进行解密+验签+身份验证
2020-04-16 15:53:10 -解密：
2020-04-16 15:53:10 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 15:53:10 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 15:53:10 -==> Parameters: 01(String), 01(String)
2020-04-16 15:53:10 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 15:53:10 -<==      Total: 4
2020-04-16 15:53:10 -耗时 : 3
2020-04-16 15:53:10 -==> Parameters: 181(String)
2020-04-16 15:53:10 -<==      Total: 2
2020-04-16 15:53:10 -耗时 : 31
2020-04-16 15:53:10 -此处进行解密+验签+身份验证
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:10 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 15:53:10 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 15:53:10 -==> Parameters: 
2020-04-16 15:53:10 -<==      Total: 3
2020-04-16 15:53:10 -耗时 : 7
2020-04-16 15:53:10 -此处进行解密+验签+身份验证
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 15:53:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 15:53:10 -==> Parameters: 181(String)
2020-04-16 15:53:10 -<==      Total: 1
2020-04-16 15:53:10 -耗时 : 2
2020-04-16 15:53:10 -此处进行解密+验签+身份验证
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 15:53:10 -此处进行解密+验签+身份验证
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:53:10 -==> Parameters: 181(String), 181(String)
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 15:53:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 15:53:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:53:10 -==> Parameters: 181(String), 181(String)
2020-04-16 15:53:10 -<==      Total: 1
2020-04-16 15:53:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:10 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 15:53:10 -<==      Total: 1
2020-04-16 15:53:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:10 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 2
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 15:53:11 -<==      Total: 2
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 15:53:11 -<==    Updates: 2
2020-04-16 15:53:11 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 15:53:11 -==> Parameters: 181(String), 181(String)
2020-04-16 15:53:11 -<==    Updates: 2
2020-04-16 15:53:11 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 15:53:11 -==> Parameters: 181(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 15:53:11 -<==    Updates: 1
2020-04-16 15:53:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 15:53:11 -==> Parameters: 
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 15:53:11 -<==    Updates: 1
2020-04-16 15:53:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 15:53:11 -==> Parameters: 
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 15:53:11 -<==    Updates: 1
2020-04-16 15:53:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:53:11 -==> Parameters: 181(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 15:53:11 -<==    Updates: 1
2020-04-16 15:53:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:53:11 -==> Parameters: 181(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:53:11 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 15:53:11 -<==    Updates: 1
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -耗时 : 127
2020-04-16 15:53:11 -<==    Updates: 1
2020-04-16 15:53:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:53:11 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 15:53:11 -<==      Total: 1
2020-04-16 15:53:11 -耗时 : 141
2020-04-16 15:53:17 -此处进行解密+验签+身份验证
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:17 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 15:53:17 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 15:53:17 -==> Parameters: 181(String)
2020-04-16 15:53:17 -<==      Total: 1
2020-04-16 15:53:17 -耗时 : 6
2020-04-16 15:53:17 -此处进行解密+验签+身份验证
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:17 -此处进行解密+验签+身份验证
2020-04-16 15:53:17 -此处进行解密+验签+身份验证
2020-04-16 15:53:17 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:17 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:17 -==> Parameters: 181(String), 202004(String)
2020-04-16 15:53:17 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:53:17 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:53:17 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 15:53:17 -==> Parameters: 181(String), 202004(String)
2020-04-16 15:53:17 -<==      Total: 0
2020-04-16 15:53:17 -耗时 : 51
2020-04-16 15:53:17 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 15:53:17 -==> Parameters: 181(String), 202004(String)
2020-04-16 15:53:17 -<==      Total: 1
2020-04-16 15:53:17 -耗时 : 55
2020-04-16 15:53:17 -<==      Total: 1
2020-04-16 15:53:17 -耗时 : 60
2020-04-16 15:53:19 -此处进行解密+验签+身份验证
2020-04-16 15:53:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:53:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:53:19 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 15:53:19 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 15:53:19 -==> Parameters: 181(String), 20200401(String), 20200430(String)
2020-04-16 15:53:21 -<==      Total: 0
2020-04-16 15:53:21 -耗时 : 1713
2020-04-16 15:54:24 -此处进行解密+验签+身份验证
2020-04-16 15:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:54:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 15:54:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 15:54:24 -==> Parameters: 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -耗时 : 3
2020-04-16 15:54:24 -此处进行解密+验签+身份验证
2020-04-16 15:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:54:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 15:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 15:54:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 15:54:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:54:24 -==> Parameters: 181(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:54:24 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 2
2020-04-16 15:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:54:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 15:54:24 -<==    Updates: 2
2020-04-16 15:54:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 15:54:24 -==> Parameters: 181(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:54:24 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:54:24 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 15:54:24 -<==    Updates: 1
2020-04-16 15:54:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 15:54:24 -==> Parameters: 
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:54:24 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:54:24 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 15:54:24 -<==    Updates: 1
2020-04-16 15:54:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:54:24 -==> Parameters: 181(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:54:24 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:54:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 15:54:24 -<==    Updates: 1
2020-04-16 15:54:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:54:24 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 15:54:24 -<==      Total: 1
2020-04-16 15:54:24 -耗时 : 116
2020-04-16 15:54:31 -此处进行解密+验签+身份验证
2020-04-16 15:54:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:54:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:54:31 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:54:31 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 15:54:31 -==> Parameters: 181(String), 202003(String)
2020-04-16 15:54:31 -<==      Total: 1
2020-04-16 15:54:31 -耗时 : 7
2020-04-16 15:54:31 -此处进行解密+验签+身份验证
2020-04-16 15:54:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:54:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:54:31 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 15:54:31 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 15:54:31 -==> Parameters: 181(String), 202003(String)
2020-04-16 15:54:31 -<==      Total: 1
2020-04-16 15:54:31 -耗时 : 3
2020-04-16 15:54:31 -此处进行解密+验签+身份验证
2020-04-16 15:54:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:54:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:54:31 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 15:54:31 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 15:54:31 -==> Parameters: 181(String), 202003(String)
2020-04-16 15:54:31 -<==      Total: 1
2020-04-16 15:54:31 -耗时 : 5
2020-04-16 15:54:33 -此处进行解密+验签+身份验证
2020-04-16 15:54:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:54:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:54:33 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 15:54:33 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 15:54:33 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 15:54:33 -<==      Total: 10
2020-04-16 15:54:33 -耗时 : 32
2020-04-16 15:56:01 -此处进行解密+验签+身份验证
2020-04-16 15:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:56:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 15:56:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 15:56:01 -==> Parameters: 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -耗时 : 38
2020-04-16 15:56:01 -此处进行解密+验签+身份验证
2020-04-16 15:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:56:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 15:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 15:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 15:56:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:56:01 -==> Parameters: 181(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:56:01 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 2
2020-04-16 15:56:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:56:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 15:56:01 -<==    Updates: 2
2020-04-16 15:56:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 15:56:01 -==> Parameters: 181(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:56:01 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:56:01 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 15:56:01 -<==    Updates: 1
2020-04-16 15:56:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 15:56:01 -==> Parameters: 
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:56:01 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:56:01 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 15:56:01 -<==    Updates: 1
2020-04-16 15:56:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:56:01 -==> Parameters: 181(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:56:01 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:56:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 15:56:01 -<==    Updates: 1
2020-04-16 15:56:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:56:01 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 15:56:01 -<==      Total: 1
2020-04-16 15:56:01 -耗时 : 98
2020-04-16 15:56:05 -此处进行解密+验签+身份验证
2020-04-16 15:56:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:56:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:56:05 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 15:56:05 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 15:56:05 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 15:56:05 -<==      Total: 10
2020-04-16 15:56:05 -耗时 : 14
2020-04-16 15:57:39 -此处进行解密+验签+身份验证
2020-04-16 15:57:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:57:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:57:39 -此处进行解密+验签+身份验证
2020-04-16 15:57:39 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 15:57:39 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 15:57:39 -==> Parameters: 181(String)
2020-04-16 15:57:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:57:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:57:39 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 15:57:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 15:57:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -耗时 : 5
2020-04-16 15:57:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:57:39 -==> Parameters: 181(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:57:39 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 2
2020-04-16 15:57:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:57:39 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 15:57:39 -<==    Updates: 2
2020-04-16 15:57:39 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 15:57:39 -==> Parameters: 181(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:57:39 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:57:39 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 15:57:39 -<==    Updates: 1
2020-04-16 15:57:39 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 15:57:39 -==> Parameters: 
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:57:39 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:57:39 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 15:57:39 -<==    Updates: 1
2020-04-16 15:57:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 15:57:39 -==> Parameters: 181(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:57:39 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 15:57:39 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 15:57:39 -<==    Updates: 1
2020-04-16 15:57:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 15:57:39 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 15:57:39 -<==      Total: 1
2020-04-16 15:57:39 -耗时 : 104
2020-04-16 15:57:43 -此处进行解密+验签+身份验证
2020-04-16 15:57:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 15:57:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 15:57:43 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 15:57:43 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 15:57:43 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 15:57:43 -<==      Total: 10
2020-04-16 15:57:43 -耗时 : 3
2020-04-16 16:25:47 -此处进行解密+验签+身份验证
2020-04-16 16:25:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:25:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:25:47 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:25:47 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:25:47 -==> Parameters: 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -耗时 : 7
2020-04-16 16:25:47 -此处进行解密+验签+身份验证
2020-04-16 16:25:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:25:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:25:47 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:25:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:25:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:25:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:25:47 -==> Parameters: 181(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:25:47 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 2
2020-04-16 16:25:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:25:47 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:25:47 -<==    Updates: 2
2020-04-16 16:25:47 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:25:47 -==> Parameters: 181(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:25:47 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:25:47 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:25:47 -<==    Updates: 1
2020-04-16 16:25:47 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:25:47 -==> Parameters: 
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:25:47 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:25:47 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:25:47 -<==    Updates: 1
2020-04-16 16:25:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:25:47 -==> Parameters: 181(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:25:47 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:25:47 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:25:47 -<==    Updates: 1
2020-04-16 16:25:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:25:47 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:25:47 -<==      Total: 1
2020-04-16 16:25:47 -耗时 : 110
2020-04-16 16:25:49 -此处进行解密+验签+身份验证
2020-04-16 16:25:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:25:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:25:49 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 16:25:49 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 16:25:49 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:25:49 -<==      Total: 10
2020-04-16 16:25:49 -耗时 : 19
2020-04-16 16:39:07 -此处进行解密+验签+身份验证
2020-04-16 16:39:07 -解密：
2020-04-16 16:39:07 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 16:39:07 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 16:39:07 -==> Parameters: 04(String), 04(String)
2020-04-16 16:39:07 -<==      Total: 1
2020-04-16 16:39:07 -耗时 : 43
2020-04-16 16:39:07 -此处进行解密+验签+身份验证
2020-04-16 16:39:07 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 16:39:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 16:39:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 16:39:07 -耗时 : 5
2020-04-16 16:39:08 -此处进行解密+验签+身份验证
2020-04-16 16:39:08 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 16:39:08 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 16:39:08 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 16:39:08 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 16:39:08 -==> Parameters: 181(String)
2020-04-16 16:39:08 -<==      Total: 1
2020-04-16 16:39:08 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 16:39:08 -==> Parameters: 26(String)
2020-04-16 16:39:08 -<==      Total: 1
2020-04-16 16:39:08 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:39:08 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:39:08 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:39:08 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:39:08 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:39:08 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:39:08 -耗时 : 60
2020-04-16 16:39:12 -此处进行解密+验签+身份验证
2020-04-16 16:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:12 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:39:12 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:39:12 -==> Parameters: 181(String)
2020-04-16 16:39:12 -<==      Total: 1
2020-04-16 16:39:12 -耗时 : 2
2020-04-16 16:39:13 -此处进行解密+验签+身份验证
2020-04-16 16:39:13 -解密：
2020-04-16 16:39:13 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 16:39:13 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 16:39:13 -==> Parameters: 01(String), 01(String)
2020-04-16 16:39:13 -<==      Total: 4
2020-04-16 16:39:13 -耗时 : 5
2020-04-16 16:39:13 -此处进行解密+验签+身份验证
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:13 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 16:39:13 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 16:39:13 -==> Parameters: 181(String)
2020-04-16 16:39:13 -<==      Total: 2
2020-04-16 16:39:13 -耗时 : 18
2020-04-16 16:39:13 -此处进行解密+验签+身份验证
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:13 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 16:39:13 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 16:39:13 -==> Parameters: 
2020-04-16 16:39:13 -<==      Total: 3
2020-04-16 16:39:13 -耗时 : 2
2020-04-16 16:39:13 -此处进行解密+验签+身份验证
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:13 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:39:13 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:39:13 -==> Parameters: 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -耗时 : 1
2020-04-16 16:39:13 -此处进行解密+验签+身份验证
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:13 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:39:13 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:39:13 -==> Parameters: 181(String), 181(String)
2020-04-16 16:39:13 -此处进行解密+验签+身份验证
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:13 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:39:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:39:13 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:39:13 -==> Parameters: 181(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:39:13 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 2
2020-04-16 16:39:13 -<==      Total: 2
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:39:13 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:39:13 -<==    Updates: 2
2020-04-16 16:39:13 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:39:13 -==> Parameters: 181(String), 181(String)
2020-04-16 16:39:13 -<==    Updates: 2
2020-04-16 16:39:13 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:39:13 -==> Parameters: 181(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:39:13 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:39:13 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:39:13 -<==    Updates: 1
2020-04-16 16:39:13 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:39:13 -==> Parameters: 
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:39:13 -<==    Updates: 1
2020-04-16 16:39:13 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:39:13 -==> Parameters: 
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:39:13 -<==    Updates: 1
2020-04-16 16:39:13 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:39:13 -==> Parameters: 181(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:39:13 -<==    Updates: 1
2020-04-16 16:39:13 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:39:13 -==> Parameters: 181(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:39:13 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:39:13 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:39:13 -<==    Updates: 1
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -耗时 : 90
2020-04-16 16:39:13 -<==    Updates: 1
2020-04-16 16:39:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:39:13 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:39:13 -<==      Total: 1
2020-04-16 16:39:13 -耗时 : 124
2020-04-16 16:39:18 -此处进行解密+验签+身份验证
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 16:39:18 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 16:39:18 -==> Parameters: 181(String)
2020-04-16 16:39:18 -<==      Total: 1
2020-04-16 16:39:18 -耗时 : 3
2020-04-16 16:39:18 -此处进行解密+验签+身份验证
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:39:18 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 16:39:18 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:39:18 -<==      Total: 1
2020-04-16 16:39:18 -耗时 : 5
2020-04-16 16:39:18 -此处进行解密+验签+身份验证
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:39:18 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 16:39:18 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:39:18 -<==      Total: 1
2020-04-16 16:39:18 -耗时 : 2
2020-04-16 16:39:18 -此处进行解密+验签+身份验证
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 16:39:18 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 16:39:18 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:39:18 -<==      Total: 0
2020-04-16 16:39:18 -耗时 : 4
2020-04-16 16:39:27 -此处进行解密+验签+身份验证
2020-04-16 16:39:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 16:39:27 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 16:39:27 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:39:27 -此处进行解密+验签+身份验证
2020-04-16 16:39:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:39:27 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 16:39:27 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:39:27 -此处进行解密+验签+身份验证
2020-04-16 16:39:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:39:27 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 16:39:27 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:39:27 -<==      Total: 1
2020-04-16 16:39:27 -耗时 : 4
2020-04-16 16:39:27 -<==      Total: 1
2020-04-16 16:39:27 -耗时 : 15
2020-04-16 16:39:27 -<==      Total: 1
2020-04-16 16:39:27 -耗时 : 51
2020-04-16 16:39:29 -此处进行解密+验签+身份验证
2020-04-16 16:39:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:39:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:39:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 16:39:29 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 16:39:29 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:39:29 -<==      Total: 10
2020-04-16 16:39:29 -耗时 : 49
2020-04-16 16:41:27 -此处进行解密+验签+身份验证
2020-04-16 16:41:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-04-16 16:41:27 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 16:41:27 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:41:27 -<==      Total: 10
2020-04-16 16:41:27 -耗时 : 2
2020-04-16 16:41:45 -此处进行解密+验签+身份验证
2020-04-16 16:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:45 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:41:45 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:41:45 -==> Parameters: 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -耗时 : 8
2020-04-16 16:41:45 -此处进行解密+验签+身份验证
2020-04-16 16:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:45 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:41:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:41:45 -==> Parameters: 181(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:45 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 2
2020-04-16 16:41:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:45 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:41:45 -<==    Updates: 2
2020-04-16 16:41:45 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:41:45 -==> Parameters: 181(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:45 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:45 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:41:45 -<==    Updates: 1
2020-04-16 16:41:45 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:41:45 -==> Parameters: 
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:45 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:45 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:41:45 -<==    Updates: 1
2020-04-16 16:41:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:41:45 -==> Parameters: 181(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:45 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:45 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:41:45 -<==    Updates: 1
2020-04-16 16:41:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:45 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:41:45 -<==      Total: 1
2020-04-16 16:41:45 -耗时 : 119
2020-04-16 16:41:48 -此处进行解密+验签+身份验证
2020-04-16 16:41:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:48 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 16:41:48 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:41:48 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:41:48 -<==      Total: 10
2020-04-16 16:41:48 -耗时 : 16
2020-04-16 16:41:54 -此处进行解密+验签+身份验证
2020-04-16 16:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:54 -此处进行解密+验签+身份验证
2020-04-16 16:41:54 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:54 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:41:54 -==> Parameters: 181(String)
2020-04-16 16:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -耗时 : 1
2020-04-16 16:41:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:41:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:41:54 -==> Parameters: 181(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:54 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 2
2020-04-16 16:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:54 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:41:54 -<==    Updates: 2
2020-04-16 16:41:54 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:41:54 -==> Parameters: 181(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:54 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:54 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:41:54 -<==    Updates: 1
2020-04-16 16:41:54 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:41:54 -==> Parameters: 
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:54 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:54 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:41:54 -<==    Updates: 1
2020-04-16 16:41:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:41:54 -==> Parameters: 181(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:54 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:41:54 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:41:54 -<==    Updates: 1
2020-04-16 16:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:41:54 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:41:54 -<==      Total: 1
2020-04-16 16:41:54 -耗时 : 76
2020-04-16 16:41:57 -此处进行解密+验签+身份验证
2020-04-16 16:41:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:57 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 16:41:57 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:41:57 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:41:57 -<==      Total: 10
2020-04-16 16:41:57 -耗时 : 4
2020-04-16 16:41:58 -此处进行解密+验签+身份验证
2020-04-16 16:41:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:41:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:41:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 16:41:58 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:41:58 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:41:58 -<==      Total: 10
2020-04-16 16:41:58 -耗时 : 4
2020-04-16 16:44:11 -此处进行解密+验签+身份验证
2020-04-16 16:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:44:11 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:44:11 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:44:11 -==> Parameters: 181(String)
2020-04-16 16:44:11 -此处进行解密+验签+身份验证
2020-04-16 16:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:44:11 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:44:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:44:11 -==> Parameters: 181(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -耗时 : 29
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:11 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 2
2020-04-16 16:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:11 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:44:11 -<==    Updates: 2
2020-04-16 16:44:11 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:44:11 -==> Parameters: 181(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:11 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:11 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:44:11 -<==    Updates: 1
2020-04-16 16:44:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:44:11 -==> Parameters: 
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:11 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:11 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:44:11 -<==    Updates: 1
2020-04-16 16:44:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:44:11 -==> Parameters: 181(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:11 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:11 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:44:11 -<==    Updates: 1
2020-04-16 16:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:11 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:44:11 -<==      Total: 1
2020-04-16 16:44:11 -耗时 : 127
2020-04-16 16:44:15 -此处进行解密+验签+身份验证
2020-04-16 16:44:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:44:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:44:15 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 16:44:15 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:44:15 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:44:15 -<==      Total: 10
2020-04-16 16:44:15 -耗时 : 32
2020-04-16 16:44:45 -此处进行解密+验签+身份验证
2020-04-16 16:44:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:44:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:44:45 -此处进行解密+验签+身份验证
2020-04-16 16:44:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:44:45 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:44:45 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:44:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:44:45 -==> Parameters: 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:44:45 -耗时 : 2
2020-04-16 16:44:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:44:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:44:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:44:45 -==> Parameters: 181(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:45 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 2
2020-04-16 16:44:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:45 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:44:45 -<==    Updates: 2
2020-04-16 16:44:45 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:44:45 -==> Parameters: 181(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:45 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:45 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:44:45 -<==    Updates: 1
2020-04-16 16:44:45 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:44:45 -==> Parameters: 
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:45 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:45 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:44:45 -<==    Updates: 1
2020-04-16 16:44:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:44:45 -==> Parameters: 181(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:45 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:44:45 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:44:45 -<==    Updates: 1
2020-04-16 16:44:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:44:45 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:44:45 -<==      Total: 1
2020-04-16 16:44:45 -耗时 : 85
2020-04-16 16:44:50 -此处进行解密+验签+身份验证
2020-04-16 16:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 16:44:50 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:44:50 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:44:50 -<==      Total: 10
2020-04-16 16:44:50 -耗时 : 6
2020-04-16 16:47:03 -此处进行解密+验签+身份验证
2020-04-16 16:47:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:03 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:47:03 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:47:03 -==> Parameters: 181(String)
2020-04-16 16:47:03 -此处进行解密+验签+身份验证
2020-04-16 16:47:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:03 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:47:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:47:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:47:03 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:47:03 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -耗时 : 57
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:03 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 2
2020-04-16 16:47:03 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:03 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:47:03 -<==    Updates: 2
2020-04-16 16:47:03 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:47:03 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:03 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:03 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:47:03 -<==    Updates: 1
2020-04-16 16:47:03 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:47:03 -==> Parameters: 
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:03 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:03 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:47:03 -<==    Updates: 1
2020-04-16 16:47:03 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:47:03 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:03 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:03 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:47:03 -<==    Updates: 1
2020-04-16 16:47:03 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:03 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:47:03 -<==      Total: 1
2020-04-16 16:47:03 -耗时 : 158
2020-04-16 16:47:05 -此处进行解密+验签+身份验证
2020-04-16 16:47:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:05 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-04-16 16:47:05 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, mer_name, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:47:05 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:47:05 -<==      Total: 10
2020-04-16 16:47:05 -耗时 : 6
2020-04-16 16:47:33 -此处进行解密+验签+身份验证
2020-04-16 16:47:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:33 -此处进行解密+验签+身份验证
2020-04-16 16:47:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:47:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:47:33 -==> Parameters: 181(String)
2020-04-16 16:47:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -耗时 : 2
2020-04-16 16:47:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:47:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:47:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:47:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:33 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 2
2020-04-16 16:47:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:33 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:47:33 -<==    Updates: 2
2020-04-16 16:47:33 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:47:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:33 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:33 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:47:33 -<==    Updates: 1
2020-04-16 16:47:33 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:47:33 -==> Parameters: 
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:33 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:33 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:47:33 -<==    Updates: 1
2020-04-16 16:47:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:47:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:33 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:33 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:47:33 -<==    Updates: 1
2020-04-16 16:47:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:33 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:47:33 -<==      Total: 1
2020-04-16 16:47:33 -耗时 : 132
2020-04-16 16:47:41 -此处进行解密+验签+身份验证
2020-04-16 16:47:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-04-16 16:47:41 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:47:41 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:47:43 -<==      Total: 0
2020-04-16 16:47:43 -耗时 : 1926
2020-04-16 16:47:58 -此处进行解密+验签+身份验证
2020-04-16 16:47:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:58 -此处进行解密+验签+身份验证
2020-04-16 16:47:58 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:47:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:47:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:47:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:47:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:47:58 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:47:58 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:58 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:47:58 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:47:58 -==> Parameters: 181(String)
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -耗时 : 16
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:58 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:47:58 -<==      Total: 2
2020-04-16 16:47:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:58 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:47:58 -<==    Updates: 2
2020-04-16 16:47:58 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:47:58 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:58 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:58 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:47:58 -<==    Updates: 1
2020-04-16 16:47:58 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:47:58 -==> Parameters: 
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:58 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:58 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:47:58 -<==    Updates: 1
2020-04-16 16:47:58 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:47:58 -==> Parameters: 181(String), 181(String)
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:58 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:47:58 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:47:58 -<==    Updates: 1
2020-04-16 16:47:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:47:58 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:47:58 -<==      Total: 1
2020-04-16 16:47:58 -耗时 : 131
2020-04-16 16:49:28 -此处进行解密+验签+身份验证
2020-04-16 16:49:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:49:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:49:28 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-04-16 16:49:28 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:49:28 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:49:28 -<==      Total: 6
2020-04-16 16:49:28 -耗时 : 34
2020-04-16 16:55:28 -此处进行解密+验签+身份验证
2020-04-16 16:55:28 -此处进行解密+验签+身份验证
2020-04-16 16:55:28 -解密：
2020-04-16 16:55:28 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 16:55:28 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 16:55:28 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 16:55:28 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 16:55:28 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 16:55:28 -==> Parameters: 04(String), 04(String)
2020-04-16 16:55:28 -耗时 : 4
2020-04-16 16:55:28 -<==      Total: 1
2020-04-16 16:55:28 -耗时 : 63
2020-04-16 16:55:29 -此处进行解密+验签+身份验证
2020-04-16 16:55:29 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 16:55:29 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 16:55:29 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 16:55:29 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 16:55:29 -==> Parameters: 181(String)
2020-04-16 16:55:29 -<==      Total: 1
2020-04-16 16:55:29 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 16:55:29 -==> Parameters: 26(String)
2020-04-16 16:55:29 -<==      Total: 1
2020-04-16 16:55:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:55:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:55:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:55:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:55:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:55:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:55:29 -耗时 : 72
2020-04-16 16:55:33 -此处进行解密+验签+身份验证
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:55:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:55:33 -==> Parameters: 181(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -耗时 : 2
2020-04-16 16:55:33 -此处进行解密+验签+身份验证
2020-04-16 16:55:33 -解密：
2020-04-16 16:55:33 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 16:55:33 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 16:55:33 -==> Parameters: 01(String), 01(String)
2020-04-16 16:55:33 -<==      Total: 4
2020-04-16 16:55:33 -耗时 : 2
2020-04-16 16:55:33 -此处进行解密+验签+身份验证
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 16:55:33 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 16:55:33 -==> Parameters: 181(String)
2020-04-16 16:55:33 -<==      Total: 2
2020-04-16 16:55:33 -耗时 : 4
2020-04-16 16:55:33 -此处进行解密+验签+身份验证
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:55:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:55:33 -==> Parameters: 181(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -耗时 : 3
2020-04-16 16:55:33 -此处进行解密+验签+身份验证
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:55:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:55:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:55:33 -此处进行解密+验签+身份验证
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:55:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:55:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:55:33 -此处进行解密+验签+身份验证
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:33 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 16:55:33 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 16:55:33 -==> Parameters: 
2020-04-16 16:55:33 -<==      Total: 3
2020-04-16 16:55:33 -耗时 : 7
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:55:33 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:55:33 -<==      Total: 2
2020-04-16 16:55:33 -<==      Total: 2
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:55:33 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:55:33 -<==    Updates: 2
2020-04-16 16:55:33 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:55:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:55:33 -<==    Updates: 2
2020-04-16 16:55:33 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:55:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:55:33 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:55:33 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:55:33 -<==    Updates: 1
2020-04-16 16:55:33 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:55:33 -==> Parameters: 
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:55:33 -<==    Updates: 1
2020-04-16 16:55:33 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:55:33 -==> Parameters: 
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:55:33 -<==    Updates: 1
2020-04-16 16:55:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:55:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:55:33 -<==    Updates: 1
2020-04-16 16:55:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:55:33 -==> Parameters: 181(String), 181(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:55:33 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:55:33 -<==    Updates: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:55:33 -<==    Updates: 1
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:55:33 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:55:33 -耗时 : 153
2020-04-16 16:55:33 -<==      Total: 1
2020-04-16 16:55:33 -耗时 : 213
2020-04-16 16:55:40 -此处进行解密+验签+身份验证
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:40 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 16:55:40 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 16:55:40 -==> Parameters: 181(String)
2020-04-16 16:55:40 -<==      Total: 1
2020-04-16 16:55:40 -耗时 : 2
2020-04-16 16:55:40 -此处进行解密+验签+身份验证
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:40 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:55:40 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 16:55:40 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:55:40 -<==      Total: 1
2020-04-16 16:55:40 -耗时 : 53
2020-04-16 16:55:40 -此处进行解密+验签+身份验证
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:40 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 16:55:40 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 16:55:40 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:55:40 -<==      Total: 0
2020-04-16 16:55:40 -耗时 : 3
2020-04-16 16:55:40 -此处进行解密+验签+身份验证
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:40 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:55:40 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 16:55:40 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:55:40 -<==      Total: 1
2020-04-16 16:55:40 -耗时 : 2
2020-04-16 16:55:45 -此处进行解密+验签+身份验证
2020-04-16 16:55:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:45 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 16:55:45 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 16:55:45 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:55:45 -<==      Total: 1
2020-04-16 16:55:45 -耗时 : 5
2020-04-16 16:55:45 -此处进行解密+验签+身份验证
2020-04-16 16:55:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:45 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:55:45 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 16:55:45 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:55:45 -<==      Total: 1
2020-04-16 16:55:45 -耗时 : 3
2020-04-16 16:55:45 -此处进行解密+验签+身份验证
2020-04-16 16:55:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:45 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:55:45 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 16:55:45 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:55:45 -<==      Total: 1
2020-04-16 16:55:45 -耗时 : 3
2020-04-16 16:55:47 -此处进行解密+验签+身份验证
2020-04-16 16:55:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:55:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:55:47 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-04-16 16:55:47 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:55:47 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:55:47 -<==      Total: 6
2020-04-16 16:55:47 -耗时 : 18
2020-04-16 16:59:29 -此处进行解密+验签+身份验证
2020-04-16 16:59:29 -此处进行解密+验签+身份验证
2020-04-16 16:59:29 -解密：
2020-04-16 16:59:29 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 16:59:29 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 16:59:29 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 16:59:29 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 16:59:29 -==> Parameters: 04(String), 04(String)
2020-04-16 16:59:29 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 16:59:29 -耗时 : 2
2020-04-16 16:59:29 -<==      Total: 1
2020-04-16 16:59:29 -耗时 : 48
2020-04-16 16:59:29 -此处进行解密+验签+身份验证
2020-04-16 16:59:29 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 16:59:29 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 16:59:29 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 16:59:29 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 16:59:29 -==> Parameters: 181(String)
2020-04-16 16:59:30 -<==      Total: 1
2020-04-16 16:59:30 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 16:59:30 -==> Parameters: 26(String)
2020-04-16 16:59:30 -<==      Total: 1
2020-04-16 16:59:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:59:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:59:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:59:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:59:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 16:59:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 16:59:30 -耗时 : 16
2020-04-16 16:59:34 -此处进行解密+验签+身份验证
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:59:34 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:59:34 -==> Parameters: 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -耗时 : 1
2020-04-16 16:59:34 -此处进行解密+验签+身份验证
2020-04-16 16:59:34 -解密：
2020-04-16 16:59:34 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 16:59:34 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 16:59:34 -==> Parameters: 01(String), 01(String)
2020-04-16 16:59:34 -<==      Total: 4
2020-04-16 16:59:34 -耗时 : 2
2020-04-16 16:59:34 -此处进行解密+验签+身份验证
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 16:59:34 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 16:59:34 -==> Parameters: 181(String)
2020-04-16 16:59:34 -<==      Total: 2
2020-04-16 16:59:34 -耗时 : 55
2020-04-16 16:59:34 -此处进行解密+验签+身份验证
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 16:59:34 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 16:59:34 -==> Parameters: 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -耗时 : 5
2020-04-16 16:59:34 -此处进行解密+验签+身份验证
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:34 -此处进行解密+验签+身份验证
2020-04-16 16:59:34 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 16:59:34 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 16:59:34 -==> Parameters: 
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:59:34 -<==      Total: 3
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:59:34 -耗时 : 3
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:59:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:59:34 -==> Parameters: 181(String), 181(String)
2020-04-16 16:59:34 -此处进行解密+验签+身份验证
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 16:59:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 16:59:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:59:34 -==> Parameters: 181(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 2
2020-04-16 16:59:34 -<==      Total: 2
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:59:34 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 16:59:34 -<==    Updates: 2
2020-04-16 16:59:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:59:34 -==> Parameters: 181(String), 181(String)
2020-04-16 16:59:34 -<==    Updates: 2
2020-04-16 16:59:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 16:59:34 -==> Parameters: 181(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:59:34 -<==    Updates: 1
2020-04-16 16:59:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:59:34 -==> Parameters: 
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:59:34 -<==    Updates: 1
2020-04-16 16:59:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:59:34 -==> Parameters: 181(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 16:59:34 -<==    Updates: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -耗时 : 95
2020-04-16 16:59:34 -<==    Updates: 1
2020-04-16 16:59:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 16:59:34 -==> Parameters: 
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 16:59:34 -<==    Updates: 1
2020-04-16 16:59:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 16:59:34 -==> Parameters: 181(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 16:59:34 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 16:59:34 -<==    Updates: 1
2020-04-16 16:59:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 16:59:34 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 16:59:34 -<==      Total: 1
2020-04-16 16:59:34 -耗时 : 150
2020-04-16 16:59:37 -此处进行解密+验签+身份验证
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 16:59:37 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 16:59:37 -==> Parameters: 181(String)
2020-04-16 16:59:37 -<==      Total: 1
2020-04-16 16:59:37 -耗时 : 2
2020-04-16 16:59:37 -此处进行解密+验签+身份验证
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:59:37 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 16:59:37 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:59:37 -此处进行解密+验签+身份验证
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:37 -<==      Total: 1
2020-04-16 16:59:37 -耗时 : 16
2020-04-16 16:59:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 16:59:37 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 16:59:37 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:59:37 -<==      Total: 0
2020-04-16 16:59:37 -耗时 : 4
2020-04-16 16:59:37 -此处进行解密+验签+身份验证
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:59:37 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 16:59:37 -==> Parameters: 181(String), 202004(String)
2020-04-16 16:59:37 -<==      Total: 1
2020-04-16 16:59:37 -耗时 : 1
2020-04-16 16:59:41 -此处进行解密+验签+身份验证
2020-04-16 16:59:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:41 -此处进行解密+验签+身份验证
2020-04-16 16:59:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 16:59:41 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 16:59:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:41 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:59:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:59:41 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 16:59:41 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:59:41 -此处进行解密+验签+身份验证
2020-04-16 16:59:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 16:59:41 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 16:59:41 -==> Parameters: 181(String), 202003(String)
2020-04-16 16:59:41 -<==      Total: 1
2020-04-16 16:59:41 -耗时 : 37
2020-04-16 16:59:41 -<==      Total: 1
2020-04-16 16:59:41 -耗时 : 53
2020-04-16 16:59:41 -<==      Total: 1
2020-04-16 16:59:41 -耗时 : 57
2020-04-16 16:59:43 -此处进行解密+验签+身份验证
2020-04-16 16:59:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 16:59:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 16:59:43 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-04-16 16:59:43 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 16:59:43 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 16:59:43 -<==      Total: 6
2020-04-16 16:59:43 -耗时 : 68
2020-04-16 17:03:27 -此处进行解密+验签+身份验证
2020-04-16 17:03:27 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 17:03:27 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 17:03:27 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 17:03:27 -耗时 : 3
2020-04-16 17:03:27 -此处进行解密+验签+身份验证
2020-04-16 17:03:27 -解密：
2020-04-16 17:03:27 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:03:27 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:03:27 -==> Parameters: 04(String), 04(String)
2020-04-16 17:03:27 -<==      Total: 1
2020-04-16 17:03:27 -耗时 : 47
2020-04-16 17:03:27 -此处进行解密+验签+身份验证
2020-04-16 17:03:27 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 17:03:27 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 17:03:27 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 17:03:27 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 17:03:27 -==> Parameters: 181(String)
2020-04-16 17:03:27 -<==      Total: 1
2020-04-16 17:03:27 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 17:03:27 -==> Parameters: 26(String)
2020-04-16 17:03:27 -<==      Total: 1
2020-04-16 17:03:27 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:03:27 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:03:27 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:03:27 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:03:27 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:03:27 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:03:27 -耗时 : 57
2020-04-16 17:03:31 -此处进行解密+验签+身份验证
2020-04-16 17:03:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:03:31 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:03:31 -==> Parameters: 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -耗时 : 47
2020-04-16 17:03:32 -此处进行解密+验签+身份验证
2020-04-16 17:03:32 -解密：
2020-04-16 17:03:32 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:03:32 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:03:32 -==> Parameters: 01(String), 01(String)
2020-04-16 17:03:32 -<==      Total: 4
2020-04-16 17:03:32 -耗时 : 1
2020-04-16 17:03:32 -此处进行解密+验签+身份验证
2020-04-16 17:03:32 -此处进行解密+验签+身份验证
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:32 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 17:03:32 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 17:03:32 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 17:03:32 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 17:03:32 -==> Parameters: 
2020-04-16 17:03:32 -==> Parameters: 181(String)
2020-04-16 17:03:32 -<==      Total: 3
2020-04-16 17:03:32 -耗时 : 48
2020-04-16 17:03:32 -此处进行解密+验签+身份验证
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:32 -此处进行解密+验签+身份验证
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:32 -<==      Total: 2
2020-04-16 17:03:32 -耗时 : 54
2020-04-16 17:03:32 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:03:32 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:03:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:03:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:03:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:03:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:03:32 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:03:32 -此处进行解密+验签+身份验证
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:32 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:03:32 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:03:32 -==> Parameters: 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -耗时 : 1
2020-04-16 17:03:32 -<==      Total: 2
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:03:32 -<==      Total: 2
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:03:32 -<==    Updates: 2
2020-04-16 17:03:32 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:03:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:03:32 -<==    Updates: 2
2020-04-16 17:03:32 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:03:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:03:32 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:03:32 -<==    Updates: 1
2020-04-16 17:03:32 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:03:32 -==> Parameters: 
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:03:32 -<==    Updates: 1
2020-04-16 17:03:32 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:03:32 -==> Parameters: 
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:03:32 -<==    Updates: 1
2020-04-16 17:03:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:03:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:03:32 -<==    Updates: 1
2020-04-16 17:03:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:03:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:03:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:03:32 -<==    Updates: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -耗时 : 136
2020-04-16 17:03:32 -<==    Updates: 1
2020-04-16 17:03:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:03:32 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:03:32 -<==      Total: 1
2020-04-16 17:03:32 -耗时 : 141
2020-04-16 17:03:38 -此处进行解密+验签+身份验证
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 17:03:38 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 17:03:38 -==> Parameters: 181(String)
2020-04-16 17:03:38 -<==      Total: 1
2020-04-16 17:03:38 -耗时 : 1
2020-04-16 17:03:38 -此处进行解密+验签+身份验证
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:03:38 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 17:03:38 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:03:38 -此处进行解密+验签+身份验证
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:03:38 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 17:03:38 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:03:38 -<==      Total: 1
2020-04-16 17:03:38 -<==      Total: 1
2020-04-16 17:03:38 -耗时 : 45
2020-04-16 17:03:38 -耗时 : 51
2020-04-16 17:03:38 -此处进行解密+验签+身份验证
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 17:03:38 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 17:03:38 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:03:38 -<==      Total: 0
2020-04-16 17:03:38 -耗时 : 5
2020-04-16 17:03:44 -此处进行解密+验签+身份验证
2020-04-16 17:03:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:44 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:03:44 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 17:03:44 -==> Parameters: 181(String), 202003(String)
2020-04-16 17:03:44 -此处进行解密+验签+身份验证
2020-04-16 17:03:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:44 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 17:03:44 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 17:03:44 -==> Parameters: 181(String), 202003(String)
2020-04-16 17:03:44 -此处进行解密+验签+身份验证
2020-04-16 17:03:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:44 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:03:44 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 17:03:44 -==> Parameters: 181(String), 202003(String)
2020-04-16 17:03:44 -<==      Total: 1
2020-04-16 17:03:44 -耗时 : 13
2020-04-16 17:03:44 -<==      Total: 1
2020-04-16 17:03:44 -耗时 : 53
2020-04-16 17:03:44 -<==      Total: 1
2020-04-16 17:03:44 -耗时 : 22
2020-04-16 17:03:46 -此处进行解密+验签+身份验证
2020-04-16 17:03:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:03:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:03:46 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-04-16 17:03:46 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 17:03:46 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 17:03:46 -<==      Total: 6
2020-04-16 17:03:46 -耗时 : 62
2020-04-16 17:04:45 -此处进行解密+验签+身份验证
2020-04-16 17:04:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:04:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:04:45 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:04:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:04:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:04:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:04:45 -==> Parameters: 181(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:04:45 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 2
2020-04-16 17:04:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:04:45 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:04:45 -<==    Updates: 2
2020-04-16 17:04:45 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:04:45 -==> Parameters: 181(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:04:45 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:04:45 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:04:45 -<==    Updates: 1
2020-04-16 17:04:45 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:04:45 -==> Parameters: 
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:04:45 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:04:45 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:04:45 -此处进行解密+验签+身份验证
2020-04-16 17:04:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:04:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:04:45 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:04:45 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:04:45 -==> Parameters: 181(String)
2020-04-16 17:04:45 -<==    Updates: 1
2020-04-16 17:04:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:04:45 -==> Parameters: 181(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -耗时 : 6
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:04:45 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:04:45 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:04:45 -<==    Updates: 1
2020-04-16 17:04:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:04:45 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:04:45 -<==      Total: 1
2020-04-16 17:04:45 -耗时 : 114
2020-04-16 17:04:51 -此处进行解密+验签+身份验证
2020-04-16 17:04:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:04:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:04:51 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-04-16 17:04:51 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 17:04:51 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 17:04:51 -<==      Total: 6
2020-04-16 17:04:51 -耗时 : 65
2020-04-16 17:12:10 -Starting LongEcologicalApplication on PC-201905161910 with PID 17120 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-16 17:12:10 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-16 17:12:10 -No active profile set, falling back to default profiles: default
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:12:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 17:12:11 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 17:12:11 -Finished Spring Data repository scanning in 71ms. Found 0 repository interfaces.
2020-04-16 17:12:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 17:12:11 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 17:12:11 -Finished Spring Data repository scanning in 42ms. Found 0 repository interfaces.
2020-04-16 17:12:12 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$d0d7e3e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 17:12:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cb5bc882] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 17:12:12 -Tomcat initialized with port(s): 8080 (http)
2020-04-16 17:12:12 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-16 17:12:12 -Starting service [Tomcat]
2020-04-16 17:12:12 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-16 17:12:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-16 17:12:12 -Initializing Spring embedded WebApplicationContext
2020-04-16 17:12:12 -Root WebApplicationContext: initialization completed in 2116 ms
2020-04-16 17:12:12 -Filter xssFilter was not registered (disabled)
2020-04-16 17:12:13 -HikariPool-1 - Starting...
2020-04-16 17:12:13 -HikariPool-1 - Start completed.
2020-04-16 17:12:13 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-16 17:12:13 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-16 17:12:13 -HHH000206: hibernate.properties not found
2020-04-16 17:12:13 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-16 17:12:14 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-16 17:12:14 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-16 17:12:14 -Using default implementation for ThreadExecutor
2020-04-16 17:12:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-16 17:12:14 -Quartz Scheduler v.2.3.0 created.
2020-04-16 17:12:14 -RAMJobStore initialized.
2020-04-16 17:12:14 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-16 17:12:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-16 17:12:14 -Quartz scheduler version: 2.3.0
2020-04-16 17:12:14 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2e3f324e
2020-04-16 17:12:15 -STAET TaskExecutorConfig
2020-04-16 17:12:15 -Initializing ExecutorService
2020-04-16 17:12:15 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-16 17:12:15 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-16 17:12:15 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-16 17:12:15 -Initializing ExecutorService 'taskScheduler'
2020-04-16 17:12:15 -Starting Quartz Scheduler now
2020-04-16 17:12:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-16 17:12:15 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-16 17:12:16 -Using a shared selector for servlet write/read
2020-04-16 17:12:16 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-16 17:12:16 -Started LongEcologicalApplication in 5.915 seconds (JVM running for 6.992)
2020-04-16 17:12:32 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-16 17:12:32 -Initializing Servlet 'dispatcherServlet'
2020-04-16 17:12:32 -Completed initialization in 13 ms
2020-04-16 17:12:32 -此处进行解密+验签+身份验证
2020-04-16 17:12:32 -此处进行解密+验签+身份验证
2020-04-16 17:12:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:12:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:12:32 -Starting without optional epoll library
2020-04-16 17:12:32 -Starting without optional kqueue library
2020-04-16 17:12:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:12:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:12:32 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:12:32 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:12:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:12:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:12:32 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:12:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:12:32 -==> Parameters: 181(String)
2020-04-16 17:12:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:32 -耗时 : 103
2020-04-16 17:12:32 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:12:32 -<==      Total: 2
2020-04-16 17:12:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:12:32 -<==    Updates: 2
2020-04-16 17:12:32 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:12:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:32 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:32 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:12:32 -<==    Updates: 1
2020-04-16 17:12:32 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:12:32 -==> Parameters: 
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:32 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:32 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:12:32 -<==    Updates: 1
2020-04-16 17:12:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:12:32 -==> Parameters: 181(String), 181(String)
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:32 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:12:32 -<==      Total: 1
2020-04-16 17:12:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:12:33 -<==    Updates: 1
2020-04-16 17:12:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:33 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:12:33 -<==      Total: 1
2020-04-16 17:12:33 -耗时 : 215
2020-04-16 17:12:34 -此处进行解密+验签+身份验证
2020-04-16 17:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:12:34 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-04-16 17:12:34 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, (select mer_name from t_sys_mpos_info where t_sys_mpos_info.sn=t_user_mpos_machine_back_record.sn) as mer_name, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 17:12:34 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 17:12:34 -<==      Total: 6
2020-04-16 17:12:34 -耗时 : 94
2020-04-16 17:12:59 -此处进行解密+验签+身份验证
2020-04-16 17:12:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:12:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:12:59 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:12:59 -此处进行解密+验签+身份验证
2020-04-16 17:12:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:12:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:12:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:12:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:12:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:12:59 -==> Parameters: 181(String), 181(String)
2020-04-16 17:12:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:12:59 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:12:59 -==> Parameters: 181(String)
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -耗时 : 2
2020-04-16 17:12:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:59 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:12:59 -<==      Total: 2
2020-04-16 17:12:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:59 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:12:59 -<==    Updates: 2
2020-04-16 17:12:59 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:12:59 -==> Parameters: 181(String), 181(String)
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:59 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:59 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:12:59 -<==    Updates: 1
2020-04-16 17:12:59 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:12:59 -==> Parameters: 
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:59 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:59 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:12:59 -<==    Updates: 1
2020-04-16 17:12:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:12:59 -==> Parameters: 181(String), 181(String)
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:59 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:12:59 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:12:59 -<==    Updates: 1
2020-04-16 17:12:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:12:59 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:12:59 -<==      Total: 1
2020-04-16 17:12:59 -耗时 : 122
2020-04-16 17:13:06 -此处进行解密+验签+身份验证
2020-04-16 17:13:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:13:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:13:06 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-04-16 17:13:06 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t_user_trapos_machine_back_record.sn) as mer_name, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-04-16 17:13:06 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 17:13:06 -<==      Total: 9
2020-04-16 17:13:06 -耗时 : 26
2020-04-16 17:13:27 -此处进行解密+验签+身份验证
2020-04-16 17:13:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:13:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:13:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-04-16 17:13:27 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t_user_trapos_machine_back_record.sn) as mer_name, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null AND id < ? ORDER BY id desc limit 0,10 
2020-04-16 17:13:27 -==> Parameters: 181(String), 20200301(String), 20200331(String), 3120(String)
2020-04-16 17:13:27 -<==      Total: 0
2020-04-16 17:13:27 -耗时 : 5
2020-04-16 17:13:29 -此处进行解密+验签+身份验证
2020-04-16 17:13:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:13:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:13:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-04-16 17:13:29 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t_user_trapos_machine_back_record.sn) as mer_name, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null AND id < ? ORDER BY id desc limit 0,10 
2020-04-16 17:13:29 -==> Parameters: 181(String), 20200301(String), 20200331(String), 3120(String)
2020-04-16 17:13:29 -<==      Total: 0
2020-04-16 17:13:29 -耗时 : 3
2020-04-16 17:13:31 -此处进行解密+验签+身份验证
2020-04-16 17:13:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:13:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:13:31 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-04-16 17:13:31 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t_user_trapos_machine_back_record.sn) as mer_name, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null AND id < ? ORDER BY id desc limit 0,10 
2020-04-16 17:13:31 -==> Parameters: 181(String), 20200301(String), 20200331(String), 3120(String)
2020-04-16 17:13:31 -<==      Total: 0
2020-04-16 17:13:31 -耗时 : 4
2020-04-16 17:13:54 -此处进行解密+验签+身份验证
2020-04-16 17:13:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:13:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:13:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:13:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:13:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:13:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:13:54 -==> Parameters: 181(String), 181(String)
2020-04-16 17:13:54 -此处进行解密+验签+身份验证
2020-04-16 17:13:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:13:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:13:54 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:13:54 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:13:54 -==> Parameters: 181(String)
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -耗时 : 7
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:13:54 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:13:54 -<==      Total: 2
2020-04-16 17:13:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:13:54 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:13:54 -<==    Updates: 2
2020-04-16 17:13:54 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:13:54 -==> Parameters: 181(String), 181(String)
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:13:54 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:13:54 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:13:54 -<==    Updates: 1
2020-04-16 17:13:54 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:13:54 -==> Parameters: 
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:13:54 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:13:54 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:13:54 -<==    Updates: 1
2020-04-16 17:13:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:13:54 -==> Parameters: 181(String), 181(String)
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:13:54 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:13:54 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:13:54 -<==    Updates: 1
2020-04-16 17:13:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:13:54 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:13:54 -<==      Total: 1
2020-04-16 17:13:54 -耗时 : 171
2020-04-16 17:14:05 -此处进行解密+验签+身份验证
2020-04-16 17:14:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:14:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:14:05 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-04-16 17:14:05 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 17:14:05 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 17:14:05 -<==      Total: 0
2020-04-16 17:14:05 -耗时 : 47
2020-04-16 17:15:24 -此处进行解密+验签+身份验证
2020-04-16 17:15:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:15:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:15:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:15:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:15:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:15:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:15:24 -==> Parameters: 181(String), 181(String)
2020-04-16 17:15:24 -此处进行解密+验签+身份验证
2020-04-16 17:15:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:15:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:15:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:15:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:15:24 -==> Parameters: 181(String)
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -耗时 : 7
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:15:24 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:15:24 -<==      Total: 2
2020-04-16 17:15:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:15:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:15:24 -<==    Updates: 2
2020-04-16 17:15:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:15:24 -==> Parameters: 181(String), 181(String)
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:15:24 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:15:24 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:15:24 -<==    Updates: 1
2020-04-16 17:15:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:15:24 -==> Parameters: 
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:15:24 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:15:24 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:15:24 -<==    Updates: 1
2020-04-16 17:15:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:15:24 -==> Parameters: 181(String), 181(String)
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:15:24 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:15:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:15:24 -<==    Updates: 1
2020-04-16 17:15:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:15:24 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:15:24 -<==      Total: 1
2020-04-16 17:15:24 -耗时 : 123
2020-04-16 17:16:03 -Starting LongEcologicalApplication on PC-201905161910 with PID 18600 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-16 17:16:03 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-16 17:16:03 -No active profile set, falling back to default profiles: default
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:16:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 17:16:04 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 17:16:04 -Finished Spring Data repository scanning in 67ms. Found 0 repository interfaces.
2020-04-16 17:16:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 17:16:04 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 17:16:04 -Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2020-04-16 17:16:05 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$c976eec4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 17:16:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c3fad364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 17:16:05 -Tomcat initialized with port(s): 8080 (http)
2020-04-16 17:16:05 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-16 17:16:05 -Starting service [Tomcat]
2020-04-16 17:16:05 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-16 17:16:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-16 17:16:05 -Initializing Spring embedded WebApplicationContext
2020-04-16 17:16:05 -Root WebApplicationContext: initialization completed in 2126 ms
2020-04-16 17:16:05 -Filter xssFilter was not registered (disabled)
2020-04-16 17:16:06 -HikariPool-1 - Starting...
2020-04-16 17:16:06 -HikariPool-1 - Start completed.
2020-04-16 17:16:06 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-16 17:16:06 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-16 17:16:06 -HHH000206: hibernate.properties not found
2020-04-16 17:16:06 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-16 17:16:06 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-16 17:16:06 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-16 17:16:07 -Using default implementation for ThreadExecutor
2020-04-16 17:16:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-16 17:16:07 -Quartz Scheduler v.2.3.0 created.
2020-04-16 17:16:07 -RAMJobStore initialized.
2020-04-16 17:16:07 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-16 17:16:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-16 17:16:07 -Quartz scheduler version: 2.3.0
2020-04-16 17:16:07 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@566c1e71
2020-04-16 17:16:07 -STAET TaskExecutorConfig
2020-04-16 17:16:07 -Initializing ExecutorService
2020-04-16 17:16:07 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-16 17:16:07 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-16 17:16:08 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-16 17:16:08 -Initializing ExecutorService 'taskScheduler'
2020-04-16 17:16:08 -Starting Quartz Scheduler now
2020-04-16 17:16:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-16 17:16:08 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-16 17:16:08 -Using a shared selector for servlet write/read
2020-04-16 17:16:08 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-16 17:16:08 -Started LongEcologicalApplication in 5.402 seconds (JVM running for 6.403)
2020-04-16 17:16:42 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-16 17:16:42 -Initializing Servlet 'dispatcherServlet'
2020-04-16 17:16:42 -Completed initialization in 16 ms
2020-04-16 17:16:42 -此处进行解密+验签+身份验证
2020-04-16 17:16:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:16:42 -Starting without optional epoll library
2020-04-16 17:16:42 -Starting without optional kqueue library
2020-04-16 17:16:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:16:42 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardEposList
2020-04-16 17:16:42 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type='epos' and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type='03' and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:16:42 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:16:42 -<==      Total: 0
2020-04-16 17:16:42 -耗时 : 64
2020-04-16 17:16:44 -此处进行解密+验签+身份验证
2020-04-16 17:16:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:16:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:16:44 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:16:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:16:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:16:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:16:44 -==> Parameters: 181(String), 181(String)
2020-04-16 17:16:44 -此处进行解密+验签+身份验证
2020-04-16 17:16:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:16:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:16:44 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:16:44 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:16:44 -==> Parameters: 181(String)
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -耗时 : 11
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:44 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:16:44 -<==      Total: 2
2020-04-16 17:16:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:44 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:16:44 -<==    Updates: 2
2020-04-16 17:16:44 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:16:44 -==> Parameters: 181(String), 181(String)
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:44 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:44 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:16:44 -<==    Updates: 1
2020-04-16 17:16:44 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:16:44 -==> Parameters: 
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:44 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:44 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:16:44 -<==    Updates: 1
2020-04-16 17:16:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:16:44 -==> Parameters: 181(String), 181(String)
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:44 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:44 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:16:44 -<==    Updates: 1
2020-04-16 17:16:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:44 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:16:44 -<==      Total: 1
2020-04-16 17:16:44 -耗时 : 149
2020-04-16 17:16:47 -此处进行解密+验签+身份验证
2020-04-16 17:16:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:16:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:16:47 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-04-16 17:16:47 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t_user_trapos_machine_back_record.sn) as mer_name, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 17:16:47 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 17:16:47 -<==      Total: 0
2020-04-16 17:16:47 -耗时 : 37
2020-04-16 17:16:53 -此处进行解密+验签+身份验证
2020-04-16 17:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:16:53 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:16:53 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:16:53 -==> Parameters: 181(String), 181(String)
2020-04-16 17:16:53 -<==      Total: 1
2020-04-16 17:16:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:53 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:16:53 -此处进行解密+验签+身份验证
2020-04-16 17:16:53 -<==      Total: 2
2020-04-16 17:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:16:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:16:53 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:16:54 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:16:54 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:16:54 -==> Parameters: 181(String)
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -耗时 : 3
2020-04-16 17:16:54 -<==    Updates: 2
2020-04-16 17:16:54 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:16:54 -==> Parameters: 181(String), 181(String)
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:54 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:54 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:16:54 -<==    Updates: 1
2020-04-16 17:16:54 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:16:54 -==> Parameters: 
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:54 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:54 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:16:54 -<==    Updates: 1
2020-04-16 17:16:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:16:54 -==> Parameters: 181(String), 181(String)
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:54 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:16:54 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:16:54 -<==    Updates: 1
2020-04-16 17:16:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:16:54 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:16:54 -<==      Total: 1
2020-04-16 17:16:54 -耗时 : 101
2020-04-16 17:16:59 -此处进行解密+验签+身份验证
2020-04-16 17:16:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:16:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:16:59 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-04-16 17:16:59 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t_user_trapos_machine_back_record.sn) as mer_name, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-04-16 17:16:59 -==> Parameters: 181(String), 20200301(String), 20200331(String)
2020-04-16 17:16:59 -<==      Total: 0
2020-04-16 17:16:59 -耗时 : 5
2020-04-16 17:17:09 -此处进行解密+验签+身份验证
2020-04-16 17:17:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:17:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:17:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:17:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:17:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:17:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:17:09 -==> Parameters: 181(String), 181(String)
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:17:09 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:17:09 -<==      Total: 2
2020-04-16 17:17:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:17:09 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:17:09 -<==    Updates: 2
2020-04-16 17:17:09 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:17:09 -==> Parameters: 181(String), 181(String)
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:17:09 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:17:09 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:17:09 -<==    Updates: 1
2020-04-16 17:17:09 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:17:09 -==> Parameters: 
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:17:09 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:17:09 -此处进行解密+验签+身份验证
2020-04-16 17:17:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:17:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:17:09 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:17:09 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:17:09 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:17:09 -==> Parameters: 181(String)
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -耗时 : 2
2020-04-16 17:17:09 -<==    Updates: 1
2020-04-16 17:17:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:17:09 -==> Parameters: 181(String), 181(String)
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:17:09 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:17:09 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:17:09 -<==    Updates: 1
2020-04-16 17:17:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:17:09 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:17:09 -<==      Total: 1
2020-04-16 17:17:09 -耗时 : 107
2020-04-16 17:23:52 -此处进行解密+验签+身份验证
2020-04-16 17:23:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:23:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:23:52 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardEposList
2020-04-16 17:23:52 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type='epos' and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type='03' and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:23:52 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:23:52 -<==      Total: 0
2020-04-16 17:23:52 -耗时 : 216
2020-04-16 17:31:09 -Starting LongEcologicalApplication on PC-201905161910 with PID 12632 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-16 17:31:09 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-16 17:31:09 -No active profile set, falling back to default profiles: default
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-16 17:31:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 17:31:10 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 17:31:10 -Finished Spring Data repository scanning in 81ms. Found 0 repository interfaces.
2020-04-16 17:31:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-16 17:31:10 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-16 17:31:11 -Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-04-16 17:31:11 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$c0da7590] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 17:31:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb5e5a30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-16 17:31:12 -Tomcat initialized with port(s): 8080 (http)
2020-04-16 17:31:12 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-16 17:31:12 -Starting service [Tomcat]
2020-04-16 17:31:12 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-16 17:31:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-16 17:31:12 -Initializing Spring embedded WebApplicationContext
2020-04-16 17:31:12 -Root WebApplicationContext: initialization completed in 3158 ms
2020-04-16 17:31:12 -Filter xssFilter was not registered (disabled)
2020-04-16 17:31:13 -HikariPool-1 - Starting...
2020-04-16 17:31:13 -HikariPool-1 - Start completed.
2020-04-16 17:31:13 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-16 17:31:13 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-16 17:31:13 -HHH000206: hibernate.properties not found
2020-04-16 17:31:13 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-16 17:31:14 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-16 17:31:14 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-16 17:31:15 -Using default implementation for ThreadExecutor
2020-04-16 17:31:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-16 17:31:15 -Quartz Scheduler v.2.3.0 created.
2020-04-16 17:31:15 -RAMJobStore initialized.
2020-04-16 17:31:15 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-16 17:31:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-16 17:31:15 -Quartz scheduler version: 2.3.0
2020-04-16 17:31:15 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@71369e1a
2020-04-16 17:31:15 -STAET TaskExecutorConfig
2020-04-16 17:31:15 -Initializing ExecutorService
2020-04-16 17:31:15 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-16 17:31:16 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-16 17:31:16 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-16 17:31:16 -Initializing ExecutorService 'taskScheduler'
2020-04-16 17:31:16 -Starting Quartz Scheduler now
2020-04-16 17:31:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-16 17:31:16 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-16 17:31:16 -Using a shared selector for servlet write/read
2020-04-16 17:31:16 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-16 17:31:16 -Started LongEcologicalApplication in 8.369 seconds (JVM running for 9.49)
2020-04-16 17:31:53 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-16 17:31:53 -Initializing Servlet 'dispatcherServlet'
2020-04-16 17:31:53 -Completed initialization in 13 ms
2020-04-16 17:31:53 -此处进行解密+验签+身份验证
2020-04-16 17:31:53 -此处进行解密+验签+身份验证
2020-04-16 17:31:53 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 17:31:53 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 17:31:54 -Starting without optional epoll library
2020-04-16 17:31:54 -Starting without optional kqueue library
2020-04-16 17:31:54 -解密：
2020-04-16 17:31:54 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:31:54 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:31:54 -==> Parameters: 04(String), 04(String)
2020-04-16 17:31:54 -<==      Total: 1
2020-04-16 17:31:54 -耗时 : 88
2020-04-16 17:31:54 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 17:31:54 -耗时 : 778
2020-04-16 17:31:54 -此处进行解密+验签+身份验证
2020-04-16 17:31:54 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 17:31:54 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 17:31:54 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 17:31:54 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 17:31:54 -==> Parameters: 181(String)
2020-04-16 17:31:54 -<==      Total: 1
2020-04-16 17:31:54 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 17:31:54 -==> Parameters: 26(String)
2020-04-16 17:31:54 -<==      Total: 1
2020-04-16 17:31:54 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:31:54 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:31:54 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:31:54 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:31:54 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:31:54 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:31:54 -耗时 : 98
2020-04-16 17:31:58 -此处进行解密+验签+身份验证
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:31:58 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:31:58 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:31:58 -==> Parameters: 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -耗时 : 7
2020-04-16 17:31:58 -此处进行解密+验签+身份验证
2020-04-16 17:31:58 -解密：
2020-04-16 17:31:58 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:31:58 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:31:58 -==> Parameters: 01(String), 01(String)
2020-04-16 17:31:58 -<==      Total: 4
2020-04-16 17:31:58 -耗时 : 2
2020-04-16 17:31:58 -此处进行解密+验签+身份验证
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:31:58 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:31:58 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:31:58 -==> Parameters: 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -耗时 : 3
2020-04-16 17:31:58 -此处进行解密+验签+身份验证
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:31:58 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 17:31:58 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 17:31:58 -==> Parameters: 181(String)
2020-04-16 17:31:58 -此处进行解密+验签+身份验证
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:31:58 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:31:58 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:31:58 -==> Parameters: 181(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 2
2020-04-16 17:31:58 -耗时 : 58
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:31:58 -此处进行解密+验签+身份验证
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:31:58 -<==      Total: 2
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:31:58 -此处进行解密+验签+身份验证
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:31:58 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 17:31:58 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:31:58 -<==    Updates: 2
2020-04-16 17:31:58 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:31:58 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 17:31:58 -==> Parameters: 
2020-04-16 17:31:58 -==> Parameters: 181(String), 181(String)
2020-04-16 17:31:58 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:31:58 -==> Parameters: 181(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 2
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:31:58 -<==      Total: 3
2020-04-16 17:31:58 -耗时 : 16
2020-04-16 17:31:58 -<==    Updates: 2
2020-04-16 17:31:58 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:31:58 -==> Parameters: 181(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:31:58 -<==    Updates: 1
2020-04-16 17:31:58 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:31:58 -==> Parameters: 
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:31:58 -<==    Updates: 1
2020-04-16 17:31:58 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:31:58 -==> Parameters: 
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:31:58 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:31:58 -<==    Updates: 1
2020-04-16 17:31:58 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:31:58 -==> Parameters: 181(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:31:58 -<==    Updates: 1
2020-04-16 17:31:58 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:31:58 -==> Parameters: 181(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:31:58 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:31:58 -<==    Updates: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:31:58 -<==    Updates: 1
2020-04-16 17:31:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:31:58 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -耗时 : 75
2020-04-16 17:31:58 -<==      Total: 1
2020-04-16 17:31:58 -耗时 : 150
2020-04-16 17:32:18 -此处进行解密+验签+身份验证
2020-04-16 17:32:18 -解密：
2020-04-16 17:32:18 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:32:18 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:32:18 -==> Parameters: 04(String), 04(String)
2020-04-16 17:32:18 -<==      Total: 1
2020-04-16 17:32:18 -耗时 : 3
2020-04-16 17:32:18 -此处进行解密+验签+身份验证
2020-04-16 17:32:18 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 17:32:18 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 17:32:18 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 17:32:18 -耗时 : 3
2020-04-16 17:32:18 -此处进行解密+验签+身份验证
2020-04-16 17:32:18 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 17:32:18 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 17:32:18 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 17:32:18 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 17:32:18 -==> Parameters: 181(String)
2020-04-16 17:32:18 -<==      Total: 1
2020-04-16 17:32:18 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 17:32:18 -==> Parameters: 26(String)
2020-04-16 17:32:19 -<==      Total: 1
2020-04-16 17:32:19 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:32:19 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:32:19 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:32:19 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:32:19 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:32:19 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:32:19 -耗时 : 20
2020-04-16 17:32:23 -此处进行解密+验签+身份验证
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:23 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:32:23 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:32:23 -==> Parameters: 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -耗时 : 2
2020-04-16 17:32:23 -此处进行解密+验签+身份验证
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:23 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 17:32:23 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 17:32:23 -==> Parameters: 181(String)
2020-04-16 17:32:23 -此处进行解密+验签+身份验证
2020-04-16 17:32:23 -解密：
2020-04-16 17:32:23 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:32:23 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:32:23 -==> Parameters: 01(String), 01(String)
2020-04-16 17:32:23 -<==      Total: 4
2020-04-16 17:32:23 -耗时 : 2
2020-04-16 17:32:23 -<==      Total: 2
2020-04-16 17:32:23 -耗时 : 58
2020-04-16 17:32:23 -此处进行解密+验签+身份验证
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:23 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 17:32:23 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 17:32:23 -==> Parameters: 
2020-04-16 17:32:23 -<==      Total: 3
2020-04-16 17:32:23 -耗时 : 3
2020-04-16 17:32:23 -此处进行解密+验签+身份验证
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:23 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:32:23 -此处进行解密+验签+身份验证
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:32:23 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:23 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:32:23 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:32:23 -==> Parameters: 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -耗时 : 2
2020-04-16 17:32:23 -此处进行解密+验签+身份验证
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:23 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:32:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:32:23 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:23 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:32:23 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:32:23 -<==      Total: 2
2020-04-16 17:32:23 -<==      Total: 2
2020-04-16 17:32:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:23 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:32:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:23 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:32:23 -<==    Updates: 2
2020-04-16 17:32:23 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:32:23 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:23 -<==    Updates: 2
2020-04-16 17:32:23 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:32:23 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:23 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:23 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:23 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:23 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:32:23 -<==    Updates: 1
2020-04-16 17:32:23 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:32:23 -==> Parameters: 
2020-04-16 17:32:23 -<==    Updates: 1
2020-04-16 17:32:23 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:32:23 -==> Parameters: 
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:23 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:32:23 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:32:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:23 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:32:23 -<==    Updates: 1
2020-04-16 17:32:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:32:23 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:23 -<==      Total: 1
2020-04-16 17:32:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:23 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:32:23 -<==    Updates: 1
2020-04-16 17:32:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:32:23 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:24 -<==      Total: 1
2020-04-16 17:32:24 -<==      Total: 1
2020-04-16 17:32:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:32:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:24 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:32:24 -<==      Total: 1
2020-04-16 17:32:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:24 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:32:24 -<==    Updates: 1
2020-04-16 17:32:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:24 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:32:24 -<==    Updates: 1
2020-04-16 17:32:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:24 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:32:24 -<==      Total: 1
2020-04-16 17:32:24 -耗时 : 169
2020-04-16 17:32:24 -<==      Total: 1
2020-04-16 17:32:24 -耗时 : 149
2020-04-16 17:32:29 -此处进行解密+验签+身份验证
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-16 17:32:29 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-16 17:32:29 -==> Parameters: 181(String)
2020-04-16 17:32:29 -<==      Total: 1
2020-04-16 17:32:29 -耗时 : 4
2020-04-16 17:32:29 -此处进行解密+验签+身份验证
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 17:32:29 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 17:32:29 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:32:29 -<==      Total: 0
2020-04-16 17:32:29 -耗时 : 4
2020-04-16 17:32:29 -此处进行解密+验签+身份验证
2020-04-16 17:32:29 -此处进行解密+验签+身份验证
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:32:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:32:29 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 17:32:29 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 17:32:29 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:32:29 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:32:29 -<==      Total: 1
2020-04-16 17:32:29 -<==      Total: 1
2020-04-16 17:32:29 -耗时 : 20
2020-04-16 17:32:29 -耗时 : 18
2020-04-16 17:32:41 -此处进行解密+验签+身份验证
2020-04-16 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:41 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardEposList
2020-04-16 17:32:41 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t.sn) as mer_name, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type='epos' and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t.sn) as mer_name, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type='03' and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:32:41 -==> Parameters: 181(String), 20200401(String), 20200430(String), 181(String), 20200401(String), 20200430(String)
2020-04-16 17:32:41 -<==      Total: 0
2020-04-16 17:32:41 -耗时 : 74
2020-04-16 17:32:43 -此处进行解密+验签+身份验证
2020-04-16 17:32:43 -此处进行解密+验签+身份验证
2020-04-16 17:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:32:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:32:43 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:32:43 -==> Parameters: 181(String)
2020-04-16 17:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -耗时 : 1
2020-04-16 17:32:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:32:43 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:43 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 2
2020-04-16 17:32:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:43 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:32:43 -<==    Updates: 2
2020-04-16 17:32:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:32:43 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:43 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:43 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:32:43 -<==    Updates: 1
2020-04-16 17:32:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:32:43 -==> Parameters: 
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:43 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:43 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:32:43 -<==    Updates: 1
2020-04-16 17:32:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:32:43 -==> Parameters: 181(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:43 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:32:43 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:32:43 -<==    Updates: 1
2020-04-16 17:32:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:32:43 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:32:43 -<==      Total: 1
2020-04-16 17:32:43 -耗时 : 144
2020-04-16 17:32:49 -此处进行解密+验签+身份验证
2020-04-16 17:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:49 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:32:49 -此处进行解密+验签+身份验证
2020-04-16 17:32:49 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 17:32:49 -==> Parameters: 181(String), 202003(String)
2020-04-16 17:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:49 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 17:32:49 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 17:32:49 -==> Parameters: 181(String), 202003(String)
2020-04-16 17:32:49 -此处进行解密+验签+身份验证
2020-04-16 17:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:49 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:32:49 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 17:32:49 -==> Parameters: 181(String), 202003(String)
2020-04-16 17:32:49 -<==      Total: 1
2020-04-16 17:32:49 -<==      Total: 1
2020-04-16 17:32:49 -耗时 : 61
2020-04-16 17:32:49 -耗时 : 46
2020-04-16 17:32:49 -<==      Total: 1
2020-04-16 17:32:49 -耗时 : 59
2020-04-16 17:32:51 -此处进行解密+验签+身份验证
2020-04-16 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardTraditionalPosList
2020-04-16 17:32:51 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t.sn) as mer_name, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t.sn) as mer_name, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type is null and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:32:51 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:32:51 -<==      Total: 2
2020-04-16 17:32:51 -耗时 : 77
2020-04-16 17:32:56 -此处进行解密+验签+身份验证
2020-04-16 17:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:32:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:32:56 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardTraditionalPosList
2020-04-16 17:32:56 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t.sn) as mer_name, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, (select mer_name from t_sys_traditional_pos_info where t_sys_traditional_pos_info.sn=t.sn) as mer_name, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type is null and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:32:56 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:32:56 -<==      Total: 2
2020-04-16 17:32:56 -耗时 : 4
2020-04-16 17:33:02 -此处进行解密+验签+身份验证
2020-04-16 17:33:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:02 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:33:02 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:33:02 -==> Parameters: 181(String)
2020-04-16 17:33:02 -此处进行解密+验签+身份验证
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -耗时 : 2
2020-04-16 17:33:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:33:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:33:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:33:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:33:02 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:02 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 2
2020-04-16 17:33:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:02 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:33:02 -<==    Updates: 2
2020-04-16 17:33:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:33:02 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:02 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:02 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:33:02 -<==    Updates: 1
2020-04-16 17:33:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:33:02 -==> Parameters: 
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:02 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:02 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:33:02 -<==    Updates: 1
2020-04-16 17:33:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:33:02 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:02 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:02 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:33:02 -<==    Updates: 1
2020-04-16 17:33:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:02 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:33:02 -<==      Total: 1
2020-04-16 17:33:02 -耗时 : 61
2020-04-16 17:33:06 -此处进行解密+验签+身份验证
2020-04-16 17:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:06 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardMposList
2020-04-16 17:33:06 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_mpos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:33:06 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:33:06 -<==      Total: 0
2020-04-16 17:33:06 -耗时 : 12
2020-04-16 17:33:08 -此处进行解密+验签+身份验证
2020-04-16 17:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:08 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardMposList
2020-04-16 17:33:08 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_mpos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:33:08 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:33:08 -<==      Total: 0
2020-04-16 17:33:08 -耗时 : 7
2020-04-16 17:33:29 -此处进行解密+验签+身份验证
2020-04-16 17:33:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardMposList
2020-04-16 17:33:29 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_mpos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-04-16 17:33:29 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:33:29 -<==      Total: 0
2020-04-16 17:33:29 -耗时 : 13
2020-04-16 17:33:34 -此处进行解密+验签+身份验证
2020-04-16 17:33:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:34 -此处进行解密+验签+身份验证
2020-04-16 17:33:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:33:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:33:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:33:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:33:34 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:33:34 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:33:34 -==> Parameters: 181(String)
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -耗时 : 2
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:34 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:33:34 -<==      Total: 2
2020-04-16 17:33:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:34 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:33:34 -<==    Updates: 2
2020-04-16 17:33:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:33:34 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:34 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:34 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:33:34 -<==    Updates: 1
2020-04-16 17:33:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:33:34 -==> Parameters: 
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:34 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:34 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:33:34 -<==    Updates: 1
2020-04-16 17:33:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:33:34 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:34 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:34 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:33:34 -<==    Updates: 1
2020-04-16 17:33:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:34 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:33:34 -<==      Total: 1
2020-04-16 17:33:34 -耗时 : 75
2020-04-16 17:33:38 -此处进行解密+验签+身份验证
2020-04-16 17:33:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getDeductMposList
2020-04-16 17:33:38 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.assess_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_deduct_record t INNER JOIN t_user_mpos_assess_info t1 on t.assess_id = t1.id WHERE t.user_id = ? and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date,t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_mpos_deduct_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id where t.user_id=? and t.cre_date between ? and ? ) tt,(SELECT @rownum:=0) r order by tt.order_id desc) t limit 0,10 
2020-04-16 17:33:38 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-04-16 17:33:38 -<==      Total: 0
2020-04-16 17:33:38 -耗时 : 22
2020-04-16 17:33:40 -此处进行解密+验签+身份验证
2020-04-16 17:33:40 -此处进行解密+验签+身份验证
2020-04-16 17:33:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:40 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:33:40 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:33:40 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:33:40 -==> Parameters: 181(String)
2020-04-16 17:33:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:33:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -耗时 : 1
2020-04-16 17:33:40 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:33:40 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:40 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 2
2020-04-16 17:33:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:40 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:33:40 -<==    Updates: 2
2020-04-16 17:33:40 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:33:40 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:40 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:40 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:33:40 -<==    Updates: 1
2020-04-16 17:33:40 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:33:40 -==> Parameters: 
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:40 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:40 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:33:40 -<==    Updates: 1
2020-04-16 17:33:40 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:33:40 -==> Parameters: 181(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:40 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:33:40 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:33:40 -<==    Updates: 1
2020-04-16 17:33:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:33:40 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:33:40 -<==      Total: 1
2020-04-16 17:33:40 -耗时 : 78
2020-04-16 17:33:48 -此处进行解密+验签+身份验证
2020-04-16 17:33:48 -此处进行解密+验签+身份验证
2020-04-16 17:33:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:48 -此处进行解密+验签+身份验证
2020-04-16 17:33:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:48 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:33:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:48 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-16 17:33:48 -==> Parameters: 181(String), 202001(String)
2020-04-16 17:33:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:48 -<==      Total: 0
2020-04-16 17:33:48 -耗时 : 2
2020-04-16 17:33:48 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-16 17:33:48 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-16 17:33:48 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-16 17:33:48 -==> Parameters: 181(String), 202001(String)
2020-04-16 17:33:48 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 17:33:48 -==> Parameters: 181(String), 202001(String)
2020-04-16 17:33:48 -<==      Total: 1
2020-04-16 17:33:48 -耗时 : 4
2020-04-16 17:33:48 -<==      Total: 1
2020-04-16 17:33:48 -耗时 : 5
2020-04-16 17:33:49 -此处进行解密+验签+身份验证
2020-04-16 17:33:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:33:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:33:49 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getDeductMposList
2020-04-16 17:33:49 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.assess_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_deduct_record t INNER JOIN t_user_mpos_assess_info t1 on t.assess_id = t1.id WHERE t.user_id = ? and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date,t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_mpos_deduct_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id where t.user_id=? and t.cre_date between ? and ? ) tt,(SELECT @rownum:=0) r order by tt.order_id desc) t limit 0,10 
2020-04-16 17:33:49 -==> Parameters: 181(String), 20200101(String), 20200131(String), 181(String), 20200101(String), 20200131(String)
2020-04-16 17:33:49 -<==      Total: 0
2020-04-16 17:33:49 -耗时 : 11
2020-04-16 17:36:01 -此处进行解密+验签+身份验证
2020-04-16 17:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:36:01 -此处进行解密+验签+身份验证
2020-04-16 17:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:36:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:36:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:36:01 -==> Parameters: 181(String)
2020-04-16 17:36:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -耗时 : 3
2020-04-16 17:36:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:36:01 -==> Parameters: 181(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:36:01 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 2
2020-04-16 17:36:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:36:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:36:01 -<==    Updates: 2
2020-04-16 17:36:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:36:01 -==> Parameters: 181(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:36:01 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:36:01 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:36:01 -<==    Updates: 1
2020-04-16 17:36:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:36:01 -==> Parameters: 
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:36:01 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:36:01 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:36:01 -<==    Updates: 1
2020-04-16 17:36:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:36:01 -==> Parameters: 181(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:36:01 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:36:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:36:01 -<==    Updates: 1
2020-04-16 17:36:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:36:01 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:36:01 -<==      Total: 1
2020-04-16 17:36:01 -耗时 : 124
2020-04-16 17:41:06 -此处进行解密+验签+身份验证
2020-04-16 17:41:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:06 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:41:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:41:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:41:06 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:41:06 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:06 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 2
2020-04-16 17:41:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:06 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:41:06 -<==    Updates: 2
2020-04-16 17:41:06 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:41:06 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:06 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:06 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:41:06 -<==    Updates: 1
2020-04-16 17:41:06 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:41:06 -==> Parameters: 
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:06 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:06 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:41:06 -<==    Updates: 1
2020-04-16 17:41:06 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:41:06 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:06 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:06 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:41:06 -<==    Updates: 1
2020-04-16 17:41:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:06 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:41:06 -<==      Total: 1
2020-04-16 17:41:06 -耗时 : 113
2020-04-16 17:41:16 -此处进行解密+验签+身份验证
2020-04-16 17:41:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:16 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:41:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:41:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:41:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:41:16 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:16 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 2
2020-04-16 17:41:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:41:16 -<==    Updates: 2
2020-04-16 17:41:16 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:41:16 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:16 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:16 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:41:16 -<==    Updates: 1
2020-04-16 17:41:16 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:41:16 -==> Parameters: 
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:16 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:16 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:41:16 -<==    Updates: 1
2020-04-16 17:41:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:41:16 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:16 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:41:16 -<==    Updates: 1
2020-04-16 17:41:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:16 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:41:16 -<==      Total: 1
2020-04-16 17:41:16 -耗时 : 130
2020-04-16 17:41:19 -此处进行解密+验签+身份验证
2020-04-16 17:41:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:19 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-04-16 17:41:19 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-04-16 17:41:19 -==> Parameters: 181(String)
2020-04-16 17:41:19 -<==      Total: 1
2020-04-16 17:41:19 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-04-16 17:41:19 -==> Parameters: 181(String), 181(String), 202004(String)
2020-04-16 17:41:19 -此处进行解密+验签+身份验证
2020-04-16 17:41:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:19 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryMposList
2020-04-16 17:41:19 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND del='0' 
2020-04-16 17:41:19 -==> Parameters: 181(String)
2020-04-16 17:41:19 -<==      Total: 1
2020-04-16 17:41:19 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-04-16 17:41:19 -==> Parameters: 181(String), 181(String), 20200317(String), 20200416(String), 181(String)
2020-04-16 17:41:19 -<==      Total: 1
2020-04-16 17:41:19 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_mpos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-04-16 17:41:19 -==> Parameters: 181(String), 181(String), 202004(String)
2020-04-16 17:41:19 -<==      Total: 1
2020-04-16 17:41:19 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-04-16 17:41:19 -==> Parameters: 181(String), 181(String), 20200317(String), 20200416(String), 181(String)
2020-04-16 17:41:20 -<==      Total: 1
2020-04-16 17:41:20 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-04-16 17:41:20 -==> Parameters: 181(String), 20200216(String), 181(String), 20200216(String), 20200416(String), 181(String)
2020-04-16 17:41:21 -<==      Total: 1
2020-04-16 17:41:21 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-04-16 17:41:21 -==> Parameters: 181(String)
2020-04-16 17:41:21 -<==      Total: 1
2020-04-16 17:41:21 -耗时 : 2523
2020-04-16 17:41:21 -<==      Total: 1
2020-04-16 17:41:21 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-04-16 17:41:21 -==> Parameters: 181(String), 20200216(String), 181(String), 20200216(String), 20200416(String), 181(String)
2020-04-16 17:41:22 -<==      Total: 1
2020-04-16 17:41:22 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='02' 
2020-04-16 17:41:22 -==> Parameters: 181(String)
2020-04-16 17:41:22 -<==      Total: 1
2020-04-16 17:41:22 -耗时 : 3563
2020-04-16 17:41:23 -此处进行解密+验签+身份验证
2020-04-16 17:41:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:23 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getAllMerchantTraditionalPosList
2020-04-16 17:41:23 -==>  Preparing: SELECT cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, t1.name, t1.tel FROM t_user_traditional_pos_info t LEFT JOIN t_sys_traditional_pos_info t1 on t.sn = t1.sn WHERE t.user_id = ? AND t.state_status = '1' AND t.del = '0' and t1.pos_type is null ORDER BY t.id desc limit 0,10 
2020-04-16 17:41:23 -==> Parameters: 181(String)
2020-04-16 17:41:23 -<==      Total: 10
2020-04-16 17:41:23 -耗时 : 16
2020-04-16 17:41:43 -此处进行解密+验签+身份验证
2020-04-16 17:41:43 -此处进行解密+验签+身份验证
2020-04-16 17:41:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:41:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:41:43 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:41:43 -==> Parameters: 181(String)
2020-04-16 17:41:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:41:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:41:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:41:43 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -耗时 : 23
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:43 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 2
2020-04-16 17:41:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:43 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:41:43 -<==    Updates: 2
2020-04-16 17:41:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:41:43 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:43 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:43 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:41:43 -<==    Updates: 1
2020-04-16 17:41:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:41:43 -==> Parameters: 
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:43 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:43 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:41:43 -<==    Updates: 1
2020-04-16 17:41:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:41:43 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:43 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:41:43 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:41:43 -<==    Updates: 1
2020-04-16 17:41:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:41:43 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:41:43 -<==      Total: 1
2020-04-16 17:41:43 -耗时 : 139
2020-04-16 17:41:50 -此处进行解密+验签+身份验证
2020-04-16 17:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-04-16 17:41:50 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-04-16 17:41:50 -==> Parameters: 181(String)
2020-04-16 17:41:50 -此处进行解密+验签+身份验证
2020-04-16 17:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-04-16 17:41:50 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-04-16 17:41:50 -==> Parameters: 181(String), 181(String)
2020-04-16 17:41:50 -<==      Total: 1164
2020-04-16 17:41:50 -耗时 : 208
2020-04-16 17:41:50 -<==      Total: 1599
2020-04-16 17:41:50 -耗时 : 485
2020-04-16 17:41:54 -此处进行解密+验签+身份验证
2020-04-16 17:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-04-16 17:41:54 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-04-16 17:41:54 -==> Parameters: 181(String), MPOS(String)
2020-04-16 17:41:54 -此处进行解密+验签+身份验证
2020-04-16 17:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-04-16 17:41:54 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-04-16 17:41:54 -==> Parameters: 181(String), TraditionalPOS(String)
2020-04-16 17:41:54 -<==      Total: 10
2020-04-16 17:41:54 -耗时 : 111
2020-04-16 17:41:54 -<==      Total: 10
2020-04-16 17:41:54 -耗时 : 38
2020-04-16 17:41:56 -此处进行解密+验签+身份验证
2020-04-16 17:41:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-04-16 17:41:56 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-04-16 17:41:56 -==> Parameters: 1926(String), M351846173855(String)
2020-04-16 17:41:56 -<==      Total: 1
2020-04-16 17:41:56 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-04-16 17:41:56 -==> Parameters: M351846173855(String)
2020-04-16 17:41:56 -<==      Total: 1
2020-04-16 17:41:56 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-04-16 17:41:56 -==> Parameters: 181_20200319162442(String)
2020-04-16 17:41:56 -<==      Total: 1
2020-04-16 17:41:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1926
2020-04-16 17:41:56 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-04-16 17:41:56 -==> Parameters: 1926(String)
2020-04-16 17:41:56 -<==      Total: 1
2020-04-16 17:41:56 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_1926,save content:{referer_id=181, parent_chain=181, user_tel=13715278397, id_card=433025197802122715, real_name=向阳, algebra=2, cre_date=20191102, cre_time=120611, login_password=f3963ad38f0ff83c2800f4a3888ad8c9, manager_id=26, pay_password=b96e654034b88867b1ebd23eb11af402, id=1926, auth_status=09, status=0}
2020-04-16 17:41:56 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-04-16 17:41:56 -==> Parameters: 181_20200319162442(String)
2020-04-16 17:41:56 -<==      Total: 1
2020-04-16 17:41:56 -耗时 : 178
2020-04-16 17:41:56 -此处进行解密+验签+身份验证
2020-04-16 17:41:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:41:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:41:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-04-16 17:41:56 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-04-16 17:41:56 -==> Parameters: 181(String), M351846173855(String)
2020-04-16 17:41:56 -<==      Total: 1
2020-04-16 17:41:56 -==>  Preparing: select FORMAT(rate,3) as rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-04-16 17:41:56 -==> Parameters: 
2020-04-16 17:41:56 -<==      Total: 101
2020-04-16 17:41:56 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-04-16 17:41:56 -==> Parameters: M351846173855(String)
2020-04-16 17:41:56 -<==      Total: 1
2020-04-16 17:41:56 -耗时 : 126
2020-04-16 17:42:01 -此处进行解密+验签+身份验证
2020-04-16 17:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:01 -此处进行解密+验签+身份验证
2020-04-16 17:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:42:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:42:01 -==> Parameters: 181(String)
2020-04-16 17:42:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:42:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:01 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -耗时 : 11
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:01 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 2
2020-04-16 17:42:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:42:01 -<==    Updates: 2
2020-04-16 17:42:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:42:01 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:01 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:01 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:42:01 -<==    Updates: 1
2020-04-16 17:42:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:42:01 -==> Parameters: 
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:01 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:01 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:42:01 -<==    Updates: 1
2020-04-16 17:42:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:01 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:01 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:01 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:42:01 -<==    Updates: 1
2020-04-16 17:42:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:01 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:42:01 -<==      Total: 1
2020-04-16 17:42:01 -耗时 : 110
2020-04-16 17:42:09 -此处进行解密+验签+身份验证
2020-04-16 17:42:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:09 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-04-16 17:42:09 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-16 17:42:09 -==> Parameters: 202004(String), 181(String)
2020-04-16 17:42:09 -此处进行解密+验签+身份验证
2020-04-16 17:42:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:09 -<==      Total: 1
2020-04-16 17:42:09 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-04-16 17:42:09 -==> Parameters: 181(String)
2020-04-16 17:42:09 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-04-16 17:42:09 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-04-16 17:42:09 -==> Parameters: 181(String)
2020-04-16 17:42:09 -<==      Total: 1
2020-04-16 17:42:09 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-04-16 17:42:09 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:09 -<==      Total: 1
2020-04-16 17:42:09 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-16 17:42:09 -==> Parameters: 202004(String), 181(String)
2020-04-16 17:42:09 -<==      Total: 1
2020-04-16 17:42:09 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-04-16 17:42:09 -==> Parameters: 181(String)
2020-04-16 17:42:09 -<==      Total: 0
2020-04-16 17:42:09 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-16 17:42:09 -==> Parameters: 202004(String), 181(String)
2020-04-16 17:42:09 -<==      Total: 1
2020-04-16 17:42:09 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-04-16 17:42:09 -==> Parameters: 181(String)
2020-04-16 17:42:09 -<==      Total: 0
2020-04-16 17:42:09 -耗时 : 53
2020-04-16 17:42:11 -<==      Total: 1
2020-04-16 17:42:11 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-04-16 17:42:11 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:11 -<==      Total: 1
2020-04-16 17:42:11 -耗时 : 1339
2020-04-16 17:42:13 -此处进行解密+验签+身份验证
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:13 -此处进行解密+验签+身份验证
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:13 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-04-16 17:42:13 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-04-16 17:42:13 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-16 17:42:13 -==> Parameters: 181(String), 20200416(String)
2020-04-16 17:42:13 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 17:42:13 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:42:13 -<==      Total: 1
2020-04-16 17:42:13 -耗时 : 29
2020-04-16 17:42:13 -<==      Total: 1
2020-04-16 17:42:13 -耗时 : 30
2020-04-16 17:42:13 -此处进行解密+验签+身份验证
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:13 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-04-16 17:42:13 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-16 17:42:13 -==> Parameters: 181(String), 202004(String)
2020-04-16 17:42:13 -<==      Total: 1
2020-04-16 17:42:13 -耗时 : 1
2020-04-16 17:42:13 -此处进行解密+验签+身份验证
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:13 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-04-16 17:42:13 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-16 17:42:13 -==> Parameters: 181(String), 20200416(String)
2020-04-16 17:42:14 -<==      Total: 1
2020-04-16 17:42:14 -耗时 : 19
2020-04-16 17:42:15 -此处进行解密+验签+身份验证
2020-04-16 17:42:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:15 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:42:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:42:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:42:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:15 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:15 -此处进行解密+验签+身份验证
2020-04-16 17:42:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:15 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:42:15 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:42:15 -==> Parameters: 181(String)
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -耗时 : 31
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:15 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:42:15 -<==      Total: 2
2020-04-16 17:42:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:15 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:42:15 -<==    Updates: 2
2020-04-16 17:42:15 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:42:15 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:15 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:15 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:42:15 -<==    Updates: 1
2020-04-16 17:42:15 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:42:15 -==> Parameters: 
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:15 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:15 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:42:15 -<==    Updates: 1
2020-04-16 17:42:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:15 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:15 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:15 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:42:15 -<==    Updates: 1
2020-04-16 17:42:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:15 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:42:15 -<==      Total: 1
2020-04-16 17:42:15 -耗时 : 146
2020-04-16 17:42:17 -此处进行解密+验签+身份验证
2020-04-16 17:42:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:42:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:42:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:42:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:17 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:17 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 2
2020-04-16 17:42:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:17 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:42:17 -<==    Updates: 2
2020-04-16 17:42:17 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:42:17 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:17 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:17 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:42:17 -<==    Updates: 1
2020-04-16 17:42:17 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:42:17 -==> Parameters: 
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:17 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:17 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:42:17 -<==    Updates: 1
2020-04-16 17:42:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:17 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:17 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:17 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:42:17 -<==    Updates: 1
2020-04-16 17:42:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:17 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:42:17 -<==      Total: 1
2020-04-16 17:42:17 -耗时 : 60
2020-04-16 17:42:21 -此处进行解密+验签+身份验证
2020-04-16 17:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-04-16 17:42:21 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 17:42:21 -==> Parameters: 181(String)
2020-04-16 17:42:21 -此处进行解密+验签+身份验证
2020-04-16 17:42:21 -<==      Total: 1
2020-04-16 17:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:21 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-04-16 17:42:21 -==> Parameters: 181(String)
2020-04-16 17:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-04-16 17:42:21 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-04-16 17:42:21 -==> Parameters: 181(String)
2020-04-16 17:42:21 -<==      Total: 1
2020-04-16 17:42:21 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:42:21 -==> Parameters: 181(String)
2020-04-16 17:42:21 -<==      Total: 10
2020-04-16 17:42:21 -耗时 : 34
2020-04-16 17:42:21 -<==      Total: 1
2020-04-16 17:42:21 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-04-16 17:42:21 -==> Parameters: 181(String)
2020-04-16 17:42:21 -<==      Total: 1
2020-04-16 17:42:21 -耗时 : 39
2020-04-16 17:42:22 -此处进行解密+验签+身份验证
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:22 -此处进行解密+验签+身份验证
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-04-16 17:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:22 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2632 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2632 and cre_month=202004 and pos_type is null 
2020-04-16 17:42:22 -==> Parameters: 
2020-04-16 17:42:22 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-04-16 17:42:22 -==> Parameters: 2632(String)
2020-04-16 17:42:22 -<==      Total: 1
2020-04-16 17:42:22 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_2632,save content:{referer_id=181, parent_chain=181, user_tel=13502890969, id_card=440923197605081032, real_name=蔡东兴, algebra=2, cre_date=20200309, cre_time=165424, login_password=e7a672513d8b69291a084906bc294516, manager_id=26, pay_password=6696a1ef46ad7f50ba7f8a3c4899fe8f, id=2632, auth_status=09, status=0}
2020-04-16 17:42:22 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-04-16 17:42:22 -==> Parameters: 2632(String)
2020-04-16 17:42:22 -<==      Total: 1
2020-04-16 17:42:22 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:42:22 -==> Parameters: 2632(String)
2020-04-16 17:42:22 -<==      Total: 1
2020-04-16 17:42:22 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2632 and pos_type='epos' 
2020-04-16 17:42:22 -==> Parameters: 
2020-04-16 17:42:22 -此处进行解密+验签+身份验证
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:42:22 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:42:22 -==> Parameters: 2632(String), 2632(String)
2020-04-16 17:42:22 -此处进行解密+验签+身份验证
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:42:22 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:42:22 -==> Parameters: 2632(String), 2632(String), 1(String)
2020-04-16 17:42:22 -此处进行解密+验签+身份验证
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:42:22 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:42:22 -==> Parameters: 2632(String), 2632(String), 0(String)
2020-04-16 17:42:22 -<==      Total: 10
2020-04-16 17:42:22 -耗时 : 78
2020-04-16 17:42:23 -<==      Total: 1
2020-04-16 17:42:23 -耗时 : 188
2020-04-16 17:42:23 -<==      Total: 1
2020-04-16 17:42:23 -耗时 : 191
2020-04-16 17:42:23 -<==      Total: 4
2020-04-16 17:42:23 -耗时 : 153
2020-04-16 17:42:23 -<==      Total: 6
2020-04-16 17:42:23 -耗时 : 130
2020-04-16 17:42:25 -此处进行解密+验签+身份验证
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:42:25 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:42:25 -==> Parameters: 2632(String), 2632(String), 0(String)
2020-04-16 17:42:25 -此处进行解密+验签+身份验证
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:25 -此处进行解密+验签+身份验证
2020-04-16 17:42:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadMposInfo
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:25 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_mpos_benefit_all where user_id = ? 
2020-04-16 17:42:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:42:25 -==> Parameters: 2632(String)
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:42:25 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:42:25 -==> Parameters: 2632(String), 2632(String)
2020-04-16 17:42:25 -<==      Total: 1
2020-04-16 17:42:25 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-04-16 17:42:25 -==> Parameters: 2632(String)
2020-04-16 17:42:25 -<==      Total: 1
2020-04-16 17:42:25 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_mpos_trans_all where user_id=2632 
2020-04-16 17:42:25 -==> Parameters: 
2020-04-16 17:42:25 -此处进行解密+验签+身份验证
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:42:25 -此处进行解密+验签+身份验证
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:25 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:42:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:25 -==> Parameters: 2632(String), 2632(String), 1(String)
2020-04-16 17:42:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMPosTradeAmountAvg
2020-04-16 17:42:25 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_mpos_benefit_all where user_id=2632 ),2) as char),'0') as avg_performance from t_summary_mpos_trans_month where user_id=2632 and cre_month=202004 
2020-04-16 17:42:25 -==> Parameters: 
2020-04-16 17:42:25 -<==      Total: 0
2020-04-16 17:42:25 -<==      Total: 0
2020-04-16 17:42:25 -<==      Total: 0
2020-04-16 17:42:25 -耗时 : 183
2020-04-16 17:42:25 -耗时 : 154
2020-04-16 17:42:25 -耗时 : 168
2020-04-16 17:42:25 -<==      Total: 1
2020-04-16 17:42:25 -耗时 : 349
2020-04-16 17:42:25 -<==      Total: 1
2020-04-16 17:42:25 -耗时 : 401
2020-04-16 17:42:36 -此处进行解密+验签+身份验证
2020-04-16 17:42:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:36 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:42:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:42:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:42:36 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:36 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:36 -此处进行解密+验签+身份验证
2020-04-16 17:42:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:36 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:42:36 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:42:36 -==> Parameters: 181(String)
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -耗时 : 5
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:36 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:42:36 -<==      Total: 2
2020-04-16 17:42:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:36 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:42:36 -<==    Updates: 2
2020-04-16 17:42:36 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:42:36 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:36 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:36 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:42:36 -<==    Updates: 1
2020-04-16 17:42:36 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:42:36 -==> Parameters: 
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:36 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:36 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:42:36 -<==    Updates: 1
2020-04-16 17:42:36 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:36 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:36 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:36 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:42:36 -<==    Updates: 1
2020-04-16 17:42:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:36 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:42:36 -<==      Total: 1
2020-04-16 17:42:36 -耗时 : 119
2020-04-16 17:42:39 -此处进行解密+验签+身份验证
2020-04-16 17:42:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:39 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-04-16 17:42:39 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-04-16 17:42:39 -==> Parameters: 181(String)
2020-04-16 17:42:39 -此处进行解密+验签+身份验证
2020-04-16 17:42:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:39 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-04-16 17:42:39 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-04-16 17:42:39 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:39 -<==      Total: 1164
2020-04-16 17:42:39 -耗时 : 170
2020-04-16 17:42:39 -<==      Total: 1599
2020-04-16 17:42:39 -耗时 : 454
2020-04-16 17:42:41 -此处进行解密+验签+身份验证
2020-04-16 17:42:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:41 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:42:41 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:42:41 -==> Parameters: 181(String)
2020-04-16 17:42:41 -<==      Total: 1
2020-04-16 17:42:41 -耗时 : 3
2020-04-16 17:42:41 -此处进行解密+验签+身份验证
2020-04-16 17:42:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:41 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:42:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:42:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:42:41 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:41 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:42 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 2
2020-04-16 17:42:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:42 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:42:42 -<==    Updates: 2
2020-04-16 17:42:42 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:42:42 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:42 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:42 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:42:42 -<==    Updates: 1
2020-04-16 17:42:42 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:42:42 -==> Parameters: 
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:42 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:42 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:42:42 -<==    Updates: 1
2020-04-16 17:42:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:42:42 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:42 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:42:42 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:42:42 -<==    Updates: 1
2020-04-16 17:42:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:42:42 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:42:42 -<==      Total: 1
2020-04-16 17:42:42 -耗时 : 132
2020-04-16 17:42:54 -此处进行解密+验签+身份验证
2020-04-16 17:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-04-16 17:42:54 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-04-16 17:42:54 -==> Parameters: 181(String)
2020-04-16 17:42:54 -此处进行解密+验签+身份验证
2020-04-16 17:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-04-16 17:42:54 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-04-16 17:42:54 -==> Parameters: 181(String), 181(String)
2020-04-16 17:42:54 -<==      Total: 1164
2020-04-16 17:42:54 -耗时 : 195
2020-04-16 17:42:54 -<==      Total: 1599
2020-04-16 17:42:54 -耗时 : 442
2020-04-16 17:42:56 -此处进行解密+验签+身份验证
2020-04-16 17:42:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-04-16 17:42:56 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-04-16 17:42:56 -==> Parameters: 181(String), MPOS(String)
2020-04-16 17:42:56 -此处进行解密+验签+身份验证
2020-04-16 17:42:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-04-16 17:42:56 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-04-16 17:42:56 -==> Parameters: 181(String), TraditionalPOS(String)
2020-04-16 17:42:56 -<==      Total: 10
2020-04-16 17:42:56 -耗时 : 61
2020-04-16 17:42:56 -<==      Total: 10
2020-04-16 17:42:56 -耗时 : 78
2020-04-16 17:42:57 -此处进行解密+验签+身份验证
2020-04-16 17:42:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:57 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-04-16 17:42:57 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-04-16 17:42:57 -==> Parameters: 1926(String), M351846173855(String)
2020-04-16 17:42:57 -<==      Total: 1
2020-04-16 17:42:57 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-04-16 17:42:57 -==> Parameters: M351846173855(String)
2020-04-16 17:42:57 -<==      Total: 1
2020-04-16 17:42:57 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-04-16 17:42:57 -==> Parameters: 181_20200319162442(String)
2020-04-16 17:42:57 -<==      Total: 1
2020-04-16 17:42:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1926
2020-04-16 17:42:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1926 , return
2020-04-16 17:42:57 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-04-16 17:42:57 -==> Parameters: 181_20200319162442(String)
2020-04-16 17:42:58 -<==      Total: 1
2020-04-16 17:42:58 -耗时 : 194
2020-04-16 17:42:58 -此处进行解密+验签+身份验证
2020-04-16 17:42:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:42:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:42:58 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-04-16 17:42:58 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-04-16 17:42:58 -==> Parameters: 181(String), M351846173855(String)
2020-04-16 17:42:58 -<==      Total: 1
2020-04-16 17:42:58 -==>  Preparing: select FORMAT(rate,3) as rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-04-16 17:42:58 -==> Parameters: 
2020-04-16 17:42:58 -<==      Total: 101
2020-04-16 17:42:58 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-04-16 17:42:58 -==> Parameters: M351846173855(String)
2020-04-16 17:42:58 -<==      Total: 1
2020-04-16 17:42:58 -耗时 : 76
2020-04-16 17:43:12 -此处进行解密+验签+身份验证
2020-04-16 17:43:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:43:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:43:12 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:43:12 -此处进行解密+验签+身份验证
2020-04-16 17:43:12 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:43:12 -==> Parameters: 181(String)
2020-04-16 17:43:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:43:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:43:12 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:43:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:43:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:43:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:43:12 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -耗时 : 53
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:12 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 2
2020-04-16 17:43:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:12 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:43:12 -<==    Updates: 2
2020-04-16 17:43:12 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:43:12 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:12 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:12 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:43:12 -<==    Updates: 1
2020-04-16 17:43:12 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:43:12 -==> Parameters: 
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:12 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:12 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:43:12 -<==    Updates: 1
2020-04-16 17:43:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:43:12 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:12 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:12 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:43:12 -<==    Updates: 1
2020-04-16 17:43:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:12 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:43:12 -<==      Total: 1
2020-04-16 17:43:12 -耗时 : 166
2020-04-16 17:43:16 -此处进行解密+验签+身份验证
2020-04-16 17:43:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:43:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:43:16 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:43:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:43:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:43:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:43:16 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:16 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 2
2020-04-16 17:43:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:43:16 -<==    Updates: 2
2020-04-16 17:43:16 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:43:16 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:16 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:16 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:43:16 -<==    Updates: 1
2020-04-16 17:43:16 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:43:16 -==> Parameters: 
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:16 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:16 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:43:16 -<==    Updates: 1
2020-04-16 17:43:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:43:16 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:16 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:16 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:43:16 -<==    Updates: 1
2020-04-16 17:43:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:16 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:43:16 -<==      Total: 1
2020-04-16 17:43:16 -耗时 : 120
2020-04-16 17:43:29 -此处进行解密+验签+身份验证
2020-04-16 17:43:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:43:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:43:29 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:43:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:43:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:43:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:43:29 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:29 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 2
2020-04-16 17:43:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:29 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:43:29 -<==    Updates: 2
2020-04-16 17:43:29 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:43:29 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:29 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:29 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:43:29 -<==    Updates: 1
2020-04-16 17:43:29 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:43:29 -==> Parameters: 
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:29 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:29 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:43:29 -<==    Updates: 1
2020-04-16 17:43:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:43:29 -==> Parameters: 181(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:29 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:43:29 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:43:29 -<==    Updates: 1
2020-04-16 17:43:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:43:29 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:43:29 -<==      Total: 1
2020-04-16 17:43:29 -耗时 : 111
2020-04-16 17:44:00 -此处进行解密+验签+身份验证
2020-04-16 17:44:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:00 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-04-16 17:44:00 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-04-16 17:44:00 -==> Parameters: 181(String)
2020-04-16 17:44:00 -此处进行解密+验签+身份验证
2020-04-16 17:44:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:00 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-04-16 17:44:00 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 17:44:00 -==> Parameters: 181(String)
2020-04-16 17:44:00 -<==      Total: 1
2020-04-16 17:44:00 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-04-16 17:44:00 -==> Parameters: 181(String)
2020-04-16 17:44:00 -<==      Total: 1
2020-04-16 17:44:00 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:44:00 -==> Parameters: 181(String)
2020-04-16 17:44:00 -<==      Total: 10
2020-04-16 17:44:00 -耗时 : 71
2020-04-16 17:44:00 -<==      Total: 1
2020-04-16 17:44:00 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-04-16 17:44:00 -==> Parameters: 181(String)
2020-04-16 17:44:00 -<==      Total: 1
2020-04-16 17:44:00 -耗时 : 62
2020-04-16 17:44:03 -此处进行解密+验签+身份验证
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:03 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-04-16 17:44:03 -==> Parameters: 2504(String)
2020-04-16 17:44:03 -<==      Total: 1
2020-04-16 17:44:03 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_2504,save content:{referer_id=181, parent_chain=181, user_tel=18960855286, id_card=352228197906182041, real_name=张晓琼, algebra=2, cre_date=20200219, cre_time=172813, login_password=c7e42d51c16b5d388b672782f5bb3ad6, manager_id=26, pay_password=0cb293670b1ce3653eea9ad2d9cd9793, id=2504, auth_status=09, status=0}
2020-04-16 17:44:03 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-04-16 17:44:03 -==> Parameters: 2504(String)
2020-04-16 17:44:03 -此处进行解密+验签+身份验证
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-04-16 17:44:03 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2504 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2504 and cre_month=202004 and pos_type is null 
2020-04-16 17:44:03 -==> Parameters: 
2020-04-16 17:44:03 -此处进行解密+验签+身份验证
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:03 -此处进行解密+验签+身份验证
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:03 -此处进行解密+验签+身份验证
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:03 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:03 -==> Parameters: 2504(String), 2504(String), 1(String)
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:03 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:03 -==> Parameters: 2504(String), 2504(String), 0(String)
2020-04-16 17:44:03 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:03 -==> Parameters: 2504(String), 2504(String)
2020-04-16 17:44:03 -<==      Total: 1
2020-04-16 17:44:03 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:44:03 -==> Parameters: 2504(String)
2020-04-16 17:44:03 -<==      Total: 1
2020-04-16 17:44:03 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2504 and pos_type='epos' 
2020-04-16 17:44:03 -==> Parameters: 
2020-04-16 17:44:03 -<==      Total: 0
2020-04-16 17:44:03 -耗时 : 182
2020-04-16 17:44:03 -<==      Total: 0
2020-04-16 17:44:03 -<==      Total: 0
2020-04-16 17:44:03 -耗时 : 186
2020-04-16 17:44:03 -耗时 : 184
2020-04-16 17:44:03 -<==      Total: 1
2020-04-16 17:44:03 -耗时 : 341
2020-04-16 17:44:03 -<==      Total: 1
2020-04-16 17:44:03 -耗时 : 331
2020-04-16 17:44:05 -此处进行解密+验签+身份验证
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:05 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:05 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:05 -==> Parameters: 2504(String), 2504(String)
2020-04-16 17:44:05 -此处进行解密+验签+身份验证
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:05 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMPosTradeAmountAvg
2020-04-16 17:44:05 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_mpos_benefit_all where user_id=2504 ),2) as char),'0') as avg_performance from t_summary_mpos_trans_month where user_id=2504 and cre_month=202004 
2020-04-16 17:44:05 -==> Parameters: 
2020-04-16 17:44:05 -此处进行解密+验签+身份验证
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:05 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadMposInfo
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:05 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_mpos_benefit_all where user_id = ? 
2020-04-16 17:44:05 -==> Parameters: 2504(String)
2020-04-16 17:44:05 -此处进行解密+验签+身份验证
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:05 -此处进行解密+验签+身份验证
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:05 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:05 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:05 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:05 -==> Parameters: 2504(String), 2504(String), 1(String)
2020-04-16 17:44:05 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:05 -==> Parameters: 2504(String), 2504(String), 0(String)
2020-04-16 17:44:05 -<==      Total: 1
2020-04-16 17:44:05 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-04-16 17:44:05 -==> Parameters: 2504(String)
2020-04-16 17:44:05 -<==      Total: 1
2020-04-16 17:44:05 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_mpos_trans_all where user_id=2504 
2020-04-16 17:44:05 -==> Parameters: 
2020-04-16 17:44:05 -<==      Total: 6
2020-04-16 17:44:05 -耗时 : 297
2020-04-16 17:44:05 -<==      Total: 3
2020-04-16 17:44:05 -耗时 : 259
2020-04-16 17:44:05 -<==      Total: 3
2020-04-16 17:44:05 -耗时 : 259
2020-04-16 17:44:06 -<==      Total: 1
2020-04-16 17:44:06 -耗时 : 444
2020-04-16 17:44:06 -<==      Total: 1
2020-04-16 17:44:06 -耗时 : 519
2020-04-16 17:44:06 -此处进行解密+验签+身份验证
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:06 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type='epos' 
2020-04-16 17:44:06 -==> Parameters: 2504(String)
2020-04-16 17:44:06 -此处进行解密+验签+身份验证
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:06 -此处进行解密+验签+身份验证
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-04-16 17:44:06 -此处进行解密+验签+身份验证
2020-04-16 17:44:06 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2504 and pos_type='epos' ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2504 and cre_month=202004 and pos_type='epos' 
2020-04-16 17:44:06 -==> Parameters: 
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:06 -==> Parameters: 2504(String), 2504(String), 0(String)
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:06 -==> Parameters: 2504(String), 2504(String)
2020-04-16 17:44:06 -此处进行解密+验签+身份验证
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:06 -==> Parameters: 2504(String), 2504(String), 1(String)
2020-04-16 17:44:06 -<==      Total: 1
2020-04-16 17:44:06 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-04-16 17:44:06 -==> Parameters: 2504(String)
2020-04-16 17:44:06 -<==      Total: 1
2020-04-16 17:44:06 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2504 and pos_type='epos' 
2020-04-16 17:44:06 -==> Parameters: 
2020-04-16 17:44:06 -<==      Total: 0
2020-04-16 17:44:06 -<==      Total: 0
2020-04-16 17:44:06 -<==      Total: 0
2020-04-16 17:44:06 -耗时 : 145
2020-04-16 17:44:06 -耗时 : 135
2020-04-16 17:44:06 -耗时 : 142
2020-04-16 17:44:06 -<==      Total: 1
2020-04-16 17:44:06 -耗时 : 228
2020-04-16 17:44:06 -<==      Total: 1
2020-04-16 17:44:06 -耗时 : 224
2020-04-16 17:44:07 -此处进行解密+验签+身份验证
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:07 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadMposInfo
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:07 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_mpos_benefit_all where user_id = ? 
2020-04-16 17:44:07 -==> Parameters: 2504(String)
2020-04-16 17:44:07 -此处进行解密+验签+身份验证
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:07 -<==      Total: 1
2020-04-16 17:44:07 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-04-16 17:44:07 -==> Parameters: 2504(String)
2020-04-16 17:44:07 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMPosTradeAmountAvg
2020-04-16 17:44:07 -<==      Total: 1
2020-04-16 17:44:07 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_mpos_trans_all where user_id=2504 
2020-04-16 17:44:07 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_mpos_benefit_all where user_id=2504 ),2) as char),'0') as avg_performance from t_summary_mpos_trans_month where user_id=2504 and cre_month=202004 
2020-04-16 17:44:07 -==> Parameters: 
2020-04-16 17:44:07 -==> Parameters: 
2020-04-16 17:44:07 -此处进行解密+验签+身份验证
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:07 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:07 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:07 -==> Parameters: 2504(String), 2504(String), 1(String)
2020-04-16 17:44:07 -此处进行解密+验签+身份验证
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:07 -此处进行解密+验签+身份验证
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:07 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:44:07 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:07 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:07 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:07 -==> Parameters: 2504(String), 2504(String), 0(String)
2020-04-16 17:44:07 -==> Parameters: 2504(String), 2504(String)
2020-04-16 17:44:07 -<==      Total: 3
2020-04-16 17:44:07 -耗时 : 217
2020-04-16 17:44:07 -<==      Total: 6
2020-04-16 17:44:07 -<==      Total: 3
2020-04-16 17:44:07 -耗时 : 220
2020-04-16 17:44:07 -耗时 : 252
2020-04-16 17:44:07 -<==      Total: 1
2020-04-16 17:44:07 -耗时 : 324
2020-04-16 17:44:08 -<==      Total: 1
2020-04-16 17:44:08 -耗时 : 386
2020-04-16 17:44:08 -此处进行解密+验签+身份验证
2020-04-16 17:44:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getMposDetail
2020-04-16 17:44:08 -==>  Preparing: select t.sn, t.card_settle_price, t.cloud_settle_price, t.single_profit_rate, t.cash_back_rate, t1.name, t1.tel, t1.credit_card_rate, t1.cloud_flash_rate, t1.act_status, t1.cash_back_status, t.is_reward from t_user_mpos_info t left join t_sys_mpos_info t1 on t1.sn = t.sn where t.user_id = ? and t.sn = ? 
2020-04-16 17:44:08 -==> Parameters: 181(String), N581844031025(String)
2020-04-16 17:44:08 -<==      Total: 1
2020-04-16 17:44:08 -==>  Preparing: select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info where sn=? and isuse=1 and module_type=1 
2020-04-16 17:44:08 -==> Parameters: N581844031025(String)
2020-04-16 17:44:08 -<==      Total: 0
2020-04-16 17:44:08 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? 
2020-04-16 17:44:08 -==> Parameters: N581844031025(String)
2020-04-16 17:44:08 -<==      Total: 1
2020-04-16 17:44:08 -==>  Preparing: select cast(performance as char) as performance,cast(num as char) as num FROM t_summary_mpos_trans_all where 1=1 and sn=? and user_id=? 
2020-04-16 17:44:08 -==> Parameters: N581844031025(String), 181(String)
2020-04-16 17:44:08 -<==      Total: 1
2020-04-16 17:44:08 -耗时 : 83
2020-04-16 17:44:17 -此处进行解密+验签+身份验证
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:17 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:17 -==> Parameters: 2504(String), 2504(String)
2020-04-16 17:44:17 -此处进行解密+验签+身份验证
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:17 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:17 -==> Parameters: 2504(String), 2504(String), 0(String)
2020-04-16 17:44:17 -此处进行解密+验签+身份验证
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:17 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-04-16 17:44:17 -==> Parameters: 2504(String)
2020-04-16 17:44:17 -此处进行解密+验签+身份验证
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:17 -此处进行解密+验签+身份验证
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-04-16 17:44:17 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2504 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2504 and cre_month=202004 and pos_type is null 
2020-04-16 17:44:17 -==> Parameters: 
2020-04-16 17:44:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2504
2020-04-16 17:44:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2504 , return
2020-04-16 17:44:17 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:17 -==> Parameters: 2504(String), 2504(String), 1(String)
2020-04-16 17:44:17 -<==      Total: 1
2020-04-16 17:44:17 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:44:17 -==> Parameters: 2504(String)
2020-04-16 17:44:17 -<==      Total: 1
2020-04-16 17:44:17 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2504 and pos_type='epos' 
2020-04-16 17:44:17 -==> Parameters: 
2020-04-16 17:44:17 -<==      Total: 0
2020-04-16 17:44:17 -耗时 : 206
2020-04-16 17:44:17 -<==      Total: 0
2020-04-16 17:44:17 -耗时 : 151
2020-04-16 17:44:17 -<==      Total: 0
2020-04-16 17:44:17 -耗时 : 192
2020-04-16 17:44:17 -<==      Total: 1
2020-04-16 17:44:17 -耗时 : 256
2020-04-16 17:44:17 -<==      Total: 1
2020-04-16 17:44:17 -耗时 : 255
2020-04-16 17:44:21 -此处进行解密+验签+身份验证
2020-04-16 17:44:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-04-16 17:44:21 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2504 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2504 and cre_month=202003 and pos_type is null 
2020-04-16 17:44:21 -==> Parameters: 
2020-04-16 17:44:21 -<==      Total: 1
2020-04-16 17:44:21 -耗时 : 149
2020-04-16 17:44:25 -此处进行解密+验签+身份验证
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:44:25 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-04-16 17:44:25 -==> Parameters: 2632(String)
2020-04-16 17:44:25 -此处进行解密+验签+身份验证
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-04-16 17:44:25 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2632 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2632 and cre_month=202004 and pos_type is null 
2020-04-16 17:44:25 -==> Parameters: 
2020-04-16 17:44:25 -<==      Total: 1
2020-04-16 17:44:25 -耗时 : 13
2020-04-16 17:44:25 -<==      Total: 1
2020-04-16 17:44:25 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:44:25 -==> Parameters: 2632(String)
2020-04-16 17:44:25 -<==      Total: 1
2020-04-16 17:44:25 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2632 and pos_type='epos' 
2020-04-16 17:44:25 -==> Parameters: 
2020-04-16 17:44:25 -此处进行解密+验签+身份验证
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:44:25 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:25 -==> Parameters: 2632(String), 2632(String), 0(String)
2020-04-16 17:44:25 -此处进行解密+验签+身份验证
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:44:25 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:25 -==> Parameters: 2632(String), 2632(String)
2020-04-16 17:44:25 -此处进行解密+验签+身份验证
2020-04-16 17:44:25 -<==      Total: 10
2020-04-16 17:44:25 -耗时 : 8
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:44:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:44:25 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:44:25 -==> Parameters: 2632(String), 2632(String), 1(String)
2020-04-16 17:44:25 -<==      Total: 1
2020-04-16 17:44:25 -耗时 : 174
2020-04-16 17:44:25 -<==      Total: 6
2020-04-16 17:44:25 -<==      Total: 4
2020-04-16 17:44:25 -耗时 : 104
2020-04-16 17:44:25 -耗时 : 68
2020-04-16 17:44:29 -此处进行解密+验签+身份验证
2020-04-16 17:44:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:44:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:44:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosDetail
2020-04-16 17:44:29 -==>  Preparing: select t.sn, t.card_settle_price_vip, t.card_settle_price, t.weixin_settle_price, t.zhifubao_settle_price, t.cloud_settle_price, t.single_profit_rate, t.cash_back_rate, t.mer_cap_fee, t1.mer_name, t1.mer_id, t1.name, t1.tel, t1.credit_card_rate, t1.cloud_flash_rate, t1.weixin_rate, t1.zhifubao_rate, t1.act_status, DATE_FORMAT(t1.act_date, '%Y-%m-%d') AS act_date, t1.cash_back_status, t.is_reward from t_user_traditional_pos_info t left join t_sys_traditional_pos_info t1 on t1.sn = t.sn where t.user_id = ? and t.sn = ? 
2020-04-16 17:44:29 -==> Parameters: 181(String), 0000290228010862(String)
2020-04-16 17:44:29 -<==      Total: 1
2020-04-16 17:44:29 -==>  Preparing: select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info where sn=? and isuse=1 and module_type=1 
2020-04-16 17:44:29 -==> Parameters: 0000290228010862(String)
2020-04-16 17:44:29 -<==      Total: 1
2020-04-16 17:44:29 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? 
2020-04-16 17:44:29 -==> Parameters: 0000290228010862(String)
2020-04-16 17:44:29 -<==      Total: 1
2020-04-16 17:44:29 -==>  Preparing: select pos_type from t_sys_traditional_pos_info where sn=? 
2020-04-16 17:44:29 -==> Parameters: 0000290228010862(String)
2020-04-16 17:44:29 -<==      Total: 1
2020-04-16 17:44:29 -==>  Preparing: select cast(performance as char) as performance,cast(num as char) as num FROM t_summary_traditional_pos_trans_all where 1=1 and pos_type is null and sn=? and user_id=? 
2020-04-16 17:44:29 -==> Parameters: 0000290228010862(String), 181(String)
2020-04-16 17:44:29 -<==      Total: 1
2020-04-16 17:44:29 -耗时 : 33
2020-04-16 17:54:42 -此处进行解密+验签+身份验证
2020-04-16 17:54:42 -解密：
2020-04-16 17:54:42 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:54:42 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:54:42 -==> Parameters: 04(String), 04(String)
2020-04-16 17:54:42 -<==      Total: 1
2020-04-16 17:54:42 -耗时 : 5
2020-04-16 17:54:42 -此处进行解密+验签+身份验证
2020-04-16 17:54:42 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 17:54:42 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 17:54:42 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 17:54:42 -耗时 : 2
2020-04-16 17:54:42 -此处进行解密+验签+身份验证
2020-04-16 17:54:42 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 17:54:42 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 17:54:42 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 17:54:42 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 17:54:42 -==> Parameters: 181(String)
2020-04-16 17:54:42 -<==      Total: 1
2020-04-16 17:54:42 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 17:54:42 -==> Parameters: 26(String)
2020-04-16 17:54:42 -<==      Total: 1
2020-04-16 17:54:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:54:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:54:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:54:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:54:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 17:54:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 17:54:42 -耗时 : 28
2020-04-16 17:54:46 -此处进行解密+验签+身份验证
2020-04-16 17:54:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:54:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:54:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:54:46 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:54:46 -==> Parameters: 181(String)
2020-04-16 17:54:46 -<==      Total: 1
2020-04-16 17:54:46 -耗时 : 2
2020-04-16 17:54:47 -此处进行解密+验签+身份验证
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 17:54:47 -此处进行解密+验签+身份验证
2020-04-16 17:54:47 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 17:54:47 -==> Parameters: 181(String)
2020-04-16 17:54:47 -解密：
2020-04-16 17:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 17:54:47 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 17:54:47 -==> Parameters: 01(String), 01(String)
2020-04-16 17:54:47 -<==      Total: 4
2020-04-16 17:54:47 -耗时 : 1
2020-04-16 17:54:47 -<==      Total: 2
2020-04-16 17:54:47 -耗时 : 7
2020-04-16 17:54:47 -此处进行解密+验签+身份验证
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 17:54:47 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 17:54:47 -==> Parameters: 
2020-04-16 17:54:47 -<==      Total: 3
2020-04-16 17:54:47 -耗时 : 4
2020-04-16 17:54:47 -此处进行解密+验签+身份验证
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:54:47 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:54:47 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:54:47 -==> Parameters: 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -耗时 : 1
2020-04-16 17:54:47 -此处进行解密+验签+身份验证
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:54:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:54:47 -==> Parameters: 181(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -此处进行解密+验签+身份验证
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:54:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:54:47 -==> Parameters: 181(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 2
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -<==      Total: 2
2020-04-16 17:54:47 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:54:47 -<==    Updates: 2
2020-04-16 17:54:47 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:54:47 -==> Parameters: 181(String), 181(String)
2020-04-16 17:54:47 -<==    Updates: 2
2020-04-16 17:54:47 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:54:47 -==> Parameters: 181(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:54:47 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:54:47 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:54:47 -<==    Updates: 1
2020-04-16 17:54:47 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:54:47 -==> Parameters: 
2020-04-16 17:54:47 -<==    Updates: 1
2020-04-16 17:54:47 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==> Parameters: 
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:54:47 -<==    Updates: 1
2020-04-16 17:54:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:54:47 -==> Parameters: 181(String), 181(String)
2020-04-16 17:54:47 -<==    Updates: 1
2020-04-16 17:54:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:54:47 -==> Parameters: 181(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:54:47 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:54:47 -<==    Updates: 1
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:54:47 -<==    Updates: 1
2020-04-16 17:54:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:54:47 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -耗时 : 125
2020-04-16 17:54:47 -<==      Total: 1
2020-04-16 17:54:47 -耗时 : 99
2020-04-16 17:55:03 -此处进行解密+验签+身份验证
2020-04-16 17:55:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-04-16 17:55:03 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 17:55:03 -==> Parameters: 181(String)
2020-04-16 17:55:03 -<==      Total: 1
2020-04-16 17:55:03 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-04-16 17:55:03 -==> Parameters: 181(String)
2020-04-16 17:55:03 -<==      Total: 1
2020-04-16 17:55:03 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:55:03 -==> Parameters: 181(String)
2020-04-16 17:55:03 -<==      Total: 1
2020-04-16 17:55:03 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-04-16 17:55:03 -==> Parameters: 181(String)
2020-04-16 17:55:03 -<==      Total: 1
2020-04-16 17:55:03 -耗时 : 15
2020-04-16 17:55:03 -此处进行解密+验签+身份验证
2020-04-16 17:55:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-04-16 17:55:03 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-04-16 17:55:03 -==> Parameters: 181(String)
2020-04-16 17:55:03 -<==      Total: 10
2020-04-16 17:55:03 -耗时 : 12
2020-04-16 17:55:06 -此处进行解密+验签+身份验证
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-04-16 17:55:06 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2632 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2632 and cre_month=202004 and pos_type is null 
2020-04-16 17:55:06 -==> Parameters: 
2020-04-16 17:55:06 -此处进行解密+验签+身份验证
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:55:06 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-04-16 17:55:06 -==> Parameters: 2632(String)
2020-04-16 17:55:06 -<==      Total: 1
2020-04-16 17:55:06 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-04-16 17:55:06 -==> Parameters: 2632(String)
2020-04-16 17:55:06 -<==      Total: 1
2020-04-16 17:55:06 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2632 and pos_type='epos' 
2020-04-16 17:55:06 -==> Parameters: 
2020-04-16 17:55:06 -<==      Total: 1
2020-04-16 17:55:06 -耗时 : 103
2020-04-16 17:55:06 -<==      Total: 1
2020-04-16 17:55:06 -耗时 : 104
2020-04-16 17:55:06 -此处进行解密+验签+身份验证
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:55:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-04-16 17:55:06 -==> Parameters: 2632(String), 2632(String)
2020-04-16 17:55:06 -<==      Total: 10
2020-04-16 17:55:06 -耗时 : 22
2020-04-16 17:55:06 -此处进行解密+验签+身份验证
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:55:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-04-16 17:55:06 -==> Parameters: 2632(String), 2632(String), 1(String)
2020-04-16 17:55:06 -此处进行解密+验签+身份验证
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2632
2020-04-16 17:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2632 , return
2020-04-16 17:55:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-04-16 17:55:06 -==> Parameters: 2632(String), 2632(String), 0(String)
2020-04-16 17:55:06 -<==      Total: 4
2020-04-16 17:55:06 -耗时 : 69
2020-04-16 17:55:06 -<==      Total: 6
2020-04-16 17:55:06 -耗时 : 57
2020-04-16 17:55:08 -此处进行解密+验签+身份验证
2020-04-16 17:55:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:55:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:55:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosDetail
2020-04-16 17:55:08 -==>  Preparing: select t.sn, t.card_settle_price_vip, t.card_settle_price, t.weixin_settle_price, t.zhifubao_settle_price, t.cloud_settle_price, t.single_profit_rate, t.cash_back_rate, t.mer_cap_fee, t1.mer_name, t1.mer_id, t1.name, t1.tel, t1.credit_card_rate, t1.cloud_flash_rate, t1.weixin_rate, t1.zhifubao_rate, t1.act_status, DATE_FORMAT(t1.act_date, '%Y-%m-%d') AS act_date, t1.cash_back_status, t.is_reward from t_user_traditional_pos_info t left join t_sys_traditional_pos_info t1 on t1.sn = t.sn where t.user_id = ? and t.sn = ? 
2020-04-16 17:55:08 -==> Parameters: 181(String), 0000290228010862(String)
2020-04-16 17:55:08 -<==      Total: 1
2020-04-16 17:55:08 -==>  Preparing: select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info where sn=? and isuse=1 and module_type=1 
2020-04-16 17:55:08 -==> Parameters: 0000290228010862(String)
2020-04-16 17:55:08 -<==      Total: 1
2020-04-16 17:55:08 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? 
2020-04-16 17:55:08 -==> Parameters: 0000290228010862(String)
2020-04-16 17:55:08 -<==      Total: 1
2020-04-16 17:55:08 -==>  Preparing: select pos_type from t_sys_traditional_pos_info where sn=? 
2020-04-16 17:55:08 -==> Parameters: 0000290228010862(String)
2020-04-16 17:55:08 -<==      Total: 1
2020-04-16 17:55:08 -==>  Preparing: select cast(performance as char) as performance,cast(num as char) as num FROM t_summary_traditional_pos_trans_all where 1=1 and pos_type is null and sn=? and user_id=? 
2020-04-16 17:55:08 -==> Parameters: 0000290228010862(String), 181(String)
2020-04-16 17:55:08 -<==      Total: 1
2020-04-16 17:55:08 -耗时 : 35
2020-04-16 17:56:44 -此处进行解密+验签+身份验证
2020-04-16 17:56:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:56:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:56:44 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 17:56:44 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 17:56:44 -==> Parameters: 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -耗时 : 8
2020-04-16 17:56:44 -此处进行解密+验签+身份验证
2020-04-16 17:56:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:56:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:56:44 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 17:56:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 17:56:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 17:56:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:56:44 -==> Parameters: 181(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:56:44 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 2
2020-04-16 17:56:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:56:44 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 17:56:44 -<==    Updates: 2
2020-04-16 17:56:44 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 17:56:44 -==> Parameters: 181(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:56:44 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:56:44 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 17:56:44 -<==    Updates: 1
2020-04-16 17:56:44 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 17:56:44 -==> Parameters: 
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:56:44 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:56:44 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 17:56:44 -<==    Updates: 1
2020-04-16 17:56:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 17:56:44 -==> Parameters: 181(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:56:44 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 17:56:44 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 17:56:44 -<==    Updates: 1
2020-04-16 17:56:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 17:56:44 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 17:56:44 -<==      Total: 1
2020-04-16 17:56:44 -耗时 : 109
2020-04-16 17:56:46 -此处进行解密+验签+身份验证
2020-04-16 17:56:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:56:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:56:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 17:56:46 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 17:56:46 -==> Parameters: 1(String), 181(String), collegeFlag(String)
2020-04-16 17:56:46 -<==    Updates: 1
2020-04-16 17:56:46 -耗时 : 45
2020-04-16 17:56:46 -此处进行解密+验签+身份验证
2020-04-16 17:56:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:56:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:56:46 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeList
2020-04-16 17:56:46 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_list_0
2020-04-16 17:56:46 -==>  Preparing: SELECT cast(id as char) as money_locker_id, money_locker_title, money_locker_cover, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_sys_money_locker_college_info order by id desc 
2020-04-16 17:56:46 -==> Parameters: 
2020-04-16 17:56:46 -<==      Total: 25
2020-04-16 17:56:46 -after List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) proceed,save result to cache,redisKey:zfpay_sys_money_locker_college_list_0,save content:[{money_locker_title=电签机已开通支付宝总汇（3-9更新）, cre_datetime=2020-03-12 15:05:54, money_locker_id=44, money_locker_cover=684652ef-0024-4e0b-9b40-df67b5c5af42.png}, {money_locker_title=电签EPOS客户自助装机流程, cre_datetime=2020-03-06 15:53:11, money_locker_id=43, money_locker_cover=19ff52b2-d7e9-44fa-9678-a19175f4e6f7.png}, {money_locker_title=中付支付商户匹配表-3月6号更新（仅供参考）, cre_datetime=2020-03-06 11:32:22, money_locker_id=41, money_locker_cover=54844a9a-63f9-4987-ba51-fe631eb13e1f.png}, {money_locker_title=传统大POS装机流程, cre_datetime=2020-02-28 17:10:31, money_locker_id=38, money_locker_cover=8a6b5127-3820-4311-92a5-8868f73a5347.png}, {money_locker_title=H60-A常规设置教程, cre_datetime=2020-02-25 16:27:11, money_locker_id=37, money_locker_cover=0dfb1741-d43d-4c57-914a-3fb097a3b6f2.JPG}, {money_locker_title=7220关闭按键声音, cre_datetime=2020-02-25 15:57:59, money_locker_id=36, money_locker_cover=8a65de8d-4254-44e7-85cd-8d36f67a527e.JPG}, {money_locker_title=7220常规设置教程, cre_datetime=2020-02-25 15:52:58, money_locker_id=35, money_locker_cover=094aa941-3332-4313-96a8-62c86575cfa6.JPG}, {money_locker_title=SP610关闭按键音设置, cre_datetime=2020-02-25 11:51:39, money_locker_id=34, money_locker_cover=7145fdfe-8f16-4aca-aa07-25f00eff5d56.JPG}, {money_locker_title=SP610常规设置教程, cre_datetime=2020-02-25 10:50:36, money_locker_id=32, money_locker_cover=73313760-6e60-4e32-8f4b-6ba89de61cfb.JPG}, {money_locker_title=中付支付可装机区域说明, cre_datetime=2020-02-14 10:54:02, money_locker_id=31, money_locker_cover=2aacce35-cac4-4d33-afc8-c14c4784eb4c.png}, {money_locker_title=中付支付钱柜事业部春节放假通知, cre_datetime=2020-01-17 11:05:43, money_locker_id=29, money_locker_cover=23a0da21-d8ac-4292-835b-d818ff0d71ca.png}, {money_locker_title=POS机常见错误代码, cre_datetime=2020-01-14 16:43:39, money_locker_id=28, money_locker_cover=72323e56-7b74-4df9-9eaf-d66484d9df84.jpg}, {money_locker_title=SP610开启免密免签及VIP不输密码, cre_datetime=2019-12-18 18:23:35, money_locker_id=27, money_locker_cover=47dbf224-a30f-40a1-85ca-a67c7cb6d407.JPG}, {money_locker_title=华智融7220小票打印张数设置, cre_datetime=2019-11-08 15:39:13, money_locker_id=26, money_locker_cover=bc8a3ccb-8b9e-41bc-9c1d-258f6f24bdee.JPG}, {money_locker_title=7220一键装机, cre_datetime=2019-11-05 11:56:06, money_locker_id=25, money_locker_cover=731bdc1a-f992-438b-afae-48d3dd05e840.jpg}, {money_locker_title=1000以内闪付免密免签, cre_datetime=2019-11-05 11:49:09, money_locker_id=24, money_locker_cover=0ebcf32b-065b-406a-8296-2bc8d6d49cd0.jpg}, {money_locker_title=传统POS一键装机教程, cre_datetime=2019-10-22 18:04:21, money_locker_id=23, money_locker_cover=90b57f30-3dee-46a3-a02c-0b2d7ebf7c08.JPG}, {money_locker_title=中付钱柜APP使用说明, cre_datetime=2019-10-11 14:26:10, money_locker_id=22, money_locker_cover=ef6322c5-ef95-4736-8618-f0579a593c21.jpg}, {money_locker_title=不想成为“卡奴”，不想“毁掉”自己，就别再有这两种行为了, cre_datetime=2019-10-09 16:24:14, money_locker_id=17, money_locker_cover=53e4fee9-b494-4536-9d8e-f9f6d55aa507.jpg}, {money_locker_title=为救“新穷人”，众多银行纷纷放大招，卡奴的“末日”即将来临, cre_datetime=2019-10-09 16:20:25, money_locker_id=16, money_locker_cover=77f1bc0b-21e9-41a6-95a7-795b884c6ef5.jpg}, {money_locker_title=花呗、借呗、白条、微粒贷、有钱花哪些上征信？最详细解答, cre_datetime=2019-10-09 16:16:25, money_locker_id=15, money_locker_cover=6a1b1391-508e-4973-a53d-49f2e9ab7e6f.jpg}, {money_locker_title=银行那些事——哪家银行真正藏了利润？, cre_datetime=2019-10-09 16:04:39, money_locker_id=14, money_locker_cover=f68a4fce-3552-453f-b9ce-c88137da7cc0.jpg}, {money_locker_title=最严风控袭来！信用卡出现降额、封卡？牢记这几点准不会错, cre_datetime=2019-10-09 15:55:57, money_locker_id=13, money_locker_cover=d42c1225-bbc6-4755-83d3-1caf6a2fae50.png}, {money_locker_title=新中付注册流程, cre_datetime=2019-09-23 14:24:11, money_locker_id=12, money_locker_cover=21c7aa50-5b69-4801-9b6f-3de1fdc0a06c.jpg}, {money_locker_title=MPOS未到账处理流程, cre_datetime=2019-09-23 14:22:26, money_locker_id=11, money_locker_cover=11fe69ef-955c-46fb-abc7-d5da4d7ea640.jpg}]
2020-04-16 17:56:46 -耗时 : 14
2020-04-16 17:56:50 -此处进行解密+验签+身份验证
2020-04-16 17:56:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:56:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:56:50 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeDetail
2020-04-16 17:56:50 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_43
2020-04-16 17:56:50 -==>  Preparing: SELECT cast(id as char) as money_locker_id, money_locker_title, money_locker_cover, money_locker_nav, money_locker_content, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_sys_money_locker_college_info WHERE id = ? 
2020-04-16 17:56:50 -==> Parameters: 43(String)
2020-04-16 17:56:50 -<==      Total: 1
2020-04-16 17:56:50 -after Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) proceed,save result to cache,redisKey:zfpay_sys_money_locker_college_43,save content:{money_locker_title=电签EPOS客户自助装机流程, cre_datetime=2020-03-06 15:53:11, money_locker_id=43, money_locker_cover=19ff52b2-d7e9-44fa-9678-a19175f4e6f7.png, money_locker_nav=12c39aaf-a4e3-4090-a34f-b54009f6d590.png, money_locker_content=fcb3844b-4bde-43c0-b3e8-0f7dfdd76ce5.jpg}
2020-04-16 17:56:50 -耗时 : 5
2020-04-16 17:59:55 -此处进行解密+验签+身份验证
2020-04-16 17:59:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 17:59:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 17:59:55 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeDetail
2020-04-16 17:59:55 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_41
2020-04-16 17:59:55 -==>  Preparing: SELECT cast(id as char) as money_locker_id, money_locker_title, money_locker_cover, money_locker_nav, money_locker_content, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_sys_money_locker_college_info WHERE id = ? 
2020-04-16 17:59:55 -==> Parameters: 41(String)
2020-04-16 17:59:55 -<==      Total: 1
2020-04-16 17:59:55 -after Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) proceed,save result to cache,redisKey:zfpay_sys_money_locker_college_41,save content:{money_locker_title=中付支付商户匹配表-3月6号更新（仅供参考）, cre_datetime=2020-03-06 11:32:22, money_locker_id=41, money_locker_cover=54844a9a-63f9-4987-ba51-fe631eb13e1f.png, money_locker_nav=ba96490b-7f7b-4cd7-b0ea-7c41881d24e2.png, money_locker_content=deb675f2-3fa6-4423-b0f2-3d9136923ece.png}
2020-04-16 17:59:55 -耗时 : 4
2020-04-16 18:02:05 -此处进行解密+验签+身份验证
2020-04-16 18:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:02:05 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeDetail
2020-04-16 18:02:05 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_37
2020-04-16 18:02:05 -==>  Preparing: SELECT cast(id as char) as money_locker_id, money_locker_title, money_locker_cover, money_locker_nav, money_locker_content, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_sys_money_locker_college_info WHERE id = ? 
2020-04-16 18:02:05 -==> Parameters: 37(String)
2020-04-16 18:02:05 -<==      Total: 1
2020-04-16 18:02:05 -after Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) proceed,save result to cache,redisKey:zfpay_sys_money_locker_college_37,save content:{money_locker_title=H60-A常规设置教程, cre_datetime=2020-02-25 16:27:11, money_locker_id=37, money_locker_cover=0dfb1741-d43d-4c57-914a-3fb097a3b6f2.JPG, money_locker_nav=0608554c-e15f-4e18-aba6-82f666e01771.mp4, money_locker_content=1e888d70-a2b1-4acd-ae27-69d947e4931c.jpg}
2020-04-16 18:02:05 -耗时 : 6
2020-04-16 18:02:14 -此处进行解密+验签+身份验证
2020-04-16 18:02:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:02:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:02:14 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:02:14 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:02:14 -==> Parameters: 181(String)
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -耗时 : 2
2020-04-16 18:02:14 -此处进行解密+验签+身份验证
2020-04-16 18:02:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:02:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:02:14 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:02:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:02:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:02:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:02:14 -==> Parameters: 181(String), 181(String)
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:02:14 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:02:14 -<==      Total: 2
2020-04-16 18:02:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:02:14 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:02:14 -<==    Updates: 2
2020-04-16 18:02:14 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:02:14 -==> Parameters: 181(String), 181(String)
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:02:14 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:02:14 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:02:14 -<==    Updates: 1
2020-04-16 18:02:14 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:02:14 -==> Parameters: 
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:02:14 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:02:14 -==> Parameters: 0(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:02:14 -<==    Updates: 1
2020-04-16 18:02:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:02:14 -==> Parameters: 181(String), 181(String)
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:02:14 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:02:14 -<==      Total: 1
2020-04-16 18:02:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:02:14 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:02:14 -<==    Updates: 1
2020-04-16 18:02:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:02:14 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:02:15 -<==      Total: 1
2020-04-16 18:02:15 -耗时 : 82
2020-04-16 18:02:17 -此处进行解密+验签+身份验证
2020-04-16 18:02:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:02:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:02:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 18:02:17 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 18:02:17 -==> Parameters: 1(String), 181(String), appImgFlag(String)
2020-04-16 18:02:17 -<==    Updates: 1
2020-04-16 18:02:17 -耗时 : 11
2020-04-16 18:02:17 -此处进行解密+验签+身份验证
2020-04-16 18:02:17 -解密：
2020-04-16 18:02:17 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:02:17 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:02:17 -==> Parameters: 02(String), 02(String)
2020-04-16 18:02:17 -<==      Total: 15
2020-04-16 18:02:17 -耗时 : 8
2020-04-16 18:02:17 -此处进行解密+验签+身份验证
2020-04-16 18:02:17 -解密：
2020-04-16 18:02:17 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:02:17 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:02:17 -==> Parameters: 03(String), 03(String)
2020-04-16 18:02:17 -<==      Total: 10
2020-04-16 18:02:17 -耗时 : 2
2020-04-16 18:02:55 -此处进行解密+验签+身份验证
2020-04-16 18:02:55 -解密：
2020-04-16 18:02:55 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:02:55 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:02:55 -==> Parameters: 02(String), 02(String)
2020-04-16 18:02:55 -<==      Total: 15
2020-04-16 18:02:55 -耗时 : 2
2020-04-16 18:02:56 -此处进行解密+验签+身份验证
2020-04-16 18:02:56 -解密：
2020-04-16 18:02:56 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:02:56 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:02:56 -==> Parameters: 02(String), 02(String)
2020-04-16 18:02:56 -<==      Total: 15
2020-04-16 18:02:56 -耗时 : 2
2020-04-16 18:02:58 -此处进行解密+验签+身份验证
2020-04-16 18:02:58 -解密：
2020-04-16 18:02:58 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:02:58 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:02:58 -==> Parameters: 02(String), 02(String)
2020-04-16 18:02:58 -<==      Total: 15
2020-04-16 18:02:58 -耗时 : 2
2020-04-16 18:03:00 -此处进行解密+验签+身份验证
2020-04-16 18:03:00 -解密：
2020-04-16 18:03:00 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:03:00 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:03:00 -==> Parameters: 02(String), 02(String)
2020-04-16 18:03:00 -<==      Total: 15
2020-04-16 18:03:00 -耗时 : 2
2020-04-16 18:03:01 -此处进行解密+验签+身份验证
2020-04-16 18:03:01 -解密：
2020-04-16 18:03:01 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:03:01 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:03:01 -==> Parameters: 02(String), 02(String)
2020-04-16 18:03:01 -<==      Total: 15
2020-04-16 18:03:01 -耗时 : 2
2020-04-16 18:03:08 -此处进行解密+验签+身份验证
2020-04-16 18:03:08 -解密：
2020-04-16 18:03:08 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:03:08 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:03:08 -==> Parameters: 02(String), 02(String)
2020-04-16 18:03:08 -<==      Total: 15
2020-04-16 18:03:08 -耗时 : 2
2020-04-16 18:03:52 -此处进行解密+验签+身份验证
2020-04-16 18:03:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:03:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:03:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:03:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:03:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:03:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:03:52 -==> Parameters: 181(String), 181(String)
2020-04-16 18:03:52 -此处进行解密+验签+身份验证
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:03:52 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:03:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:03:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:03:52 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:03:52 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:03:52 -==> Parameters: 181(String)
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -耗时 : 6
2020-04-16 18:03:52 -<==      Total: 2
2020-04-16 18:03:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:03:52 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:03:52 -<==    Updates: 2
2020-04-16 18:03:52 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:03:52 -==> Parameters: 181(String), 181(String)
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:03:52 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:03:52 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:03:52 -<==    Updates: 1
2020-04-16 18:03:52 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:03:52 -==> Parameters: 
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:03:52 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:03:52 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:03:52 -<==    Updates: 1
2020-04-16 18:03:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:03:52 -==> Parameters: 181(String), 181(String)
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:03:52 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:03:52 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:03:52 -<==    Updates: 1
2020-04-16 18:03:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:03:52 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:03:52 -<==      Total: 1
2020-04-16 18:03:52 -耗时 : 78
2020-04-16 18:04:04 -此处进行解密+验签+身份验证
2020-04-16 18:04:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:04:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:04:04 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:04:04 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:04:04 -==> Parameters: 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -耗时 : 2
2020-04-16 18:04:04 -此处进行解密+验签+身份验证
2020-04-16 18:04:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:04:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:04:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:04:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:04:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:04:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:04:04 -==> Parameters: 181(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:04 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 2
2020-04-16 18:04:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:04 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:04:04 -<==    Updates: 2
2020-04-16 18:04:04 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:04:04 -==> Parameters: 181(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:04 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:04 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:04:04 -<==    Updates: 1
2020-04-16 18:04:04 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:04:04 -==> Parameters: 
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:04 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:04 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:04:04 -<==    Updates: 1
2020-04-16 18:04:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:04:04 -==> Parameters: 181(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:04 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:04 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:04:04 -<==    Updates: 1
2020-04-16 18:04:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:04 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:04:04 -<==      Total: 1
2020-04-16 18:04:04 -耗时 : 65
2020-04-16 18:04:52 -此处进行解密+验签+身份验证
2020-04-16 18:04:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:04:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:04:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:04:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:04:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:04:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:04:52 -==> Parameters: 181(String), 181(String)
2020-04-16 18:04:52 -此处进行解密+验签+身份验证
2020-04-16 18:04:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:04:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:52 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:04:52 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:04:52 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:04:52 -==> Parameters: 181(String)
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -耗时 : 1
2020-04-16 18:04:52 -<==      Total: 2
2020-04-16 18:04:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:52 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:04:52 -<==    Updates: 2
2020-04-16 18:04:52 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:04:52 -==> Parameters: 181(String), 181(String)
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:52 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:52 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:04:52 -<==    Updates: 1
2020-04-16 18:04:52 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:04:52 -==> Parameters: 
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:52 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:52 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:04:52 -<==    Updates: 1
2020-04-16 18:04:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:04:52 -==> Parameters: 181(String), 181(String)
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:52 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:04:52 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:04:52 -<==    Updates: 1
2020-04-16 18:04:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:04:52 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:04:52 -<==      Total: 1
2020-04-16 18:04:52 -耗时 : 68
2020-04-16 18:04:54 -此处进行解密+验签+身份验证
2020-04-16 18:04:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:04:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:04:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 18:04:54 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 18:04:54 -==> Parameters: 1(String), 181(String), collegeFlag(String)
2020-04-16 18:04:54 -<==    Updates: 1
2020-04-16 18:04:54 -耗时 : 15
2020-04-16 18:04:54 -此处进行解密+验签+身份验证
2020-04-16 18:04:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:04:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:04:54 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeList
2020-04-16 18:04:54 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_list_0
2020-04-16 18:04:54 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,has cacheKey:zfpay_sys_money_locker_college_list_0 , return
2020-04-16 18:04:54 -耗时 : 5
2020-04-16 18:04:56 -此处进行解密+验签+身份验证
2020-04-16 18:04:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:04:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:04:56 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeDetail
2020-04-16 18:04:56 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_41
2020-04-16 18:04:56 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,has cacheKey:zfpay_sys_money_locker_college_41 , return
2020-04-16 18:04:56 -耗时 : 1
2020-04-16 18:07:52 -此处进行解密+验签+身份验证
2020-04-16 18:07:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:07:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:07:52 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeDetail
2020-04-16 18:07:52 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_37
2020-04-16 18:07:52 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,has cacheKey:zfpay_sys_money_locker_college_37 , return
2020-04-16 18:07:52 -耗时 : 1
2020-04-16 18:18:02 -此处进行解密+验签+身份验证
2020-04-16 18:18:02 -此处进行解密+验签+身份验证
2020-04-16 18:18:02 -解密：
2020-04-16 18:18:02 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:18:02 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 18:18:02 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 18:18:02 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:18:02 -==> Parameters: 04(String), 04(String)
2020-04-16 18:18:02 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 18:18:02 -耗时 : 2
2020-04-16 18:18:02 -<==      Total: 1
2020-04-16 18:18:02 -耗时 : 4
2020-04-16 18:18:02 -此处进行解密+验签+身份验证
2020-04-16 18:18:02 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 18:18:02 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 18:18:02 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 18:18:02 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 18:18:02 -==> Parameters: 181(String)
2020-04-16 18:18:02 -<==      Total: 1
2020-04-16 18:18:02 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 18:18:02 -==> Parameters: 26(String)
2020-04-16 18:18:02 -<==      Total: 1
2020-04-16 18:18:02 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:18:02 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:18:02 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:18:02 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:18:02 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:18:02 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:18:02 -耗时 : 14
2020-04-16 18:18:06 -此处进行解密+验签+身份验证
2020-04-16 18:18:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:06 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:18:06 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:18:06 -==> Parameters: 181(String)
2020-04-16 18:18:06 -<==      Total: 1
2020-04-16 18:18:06 -耗时 : 1
2020-04-16 18:18:07 -此处进行解密+验签+身份验证
2020-04-16 18:18:07 -解密：
2020-04-16 18:18:07 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:18:07 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:18:07 -==> Parameters: 01(String), 01(String)
2020-04-16 18:18:07 -此处进行解密+验签+身份验证
2020-04-16 18:18:07 -<==      Total: 4
2020-04-16 18:18:07 -耗时 : 1
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 18:18:07 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 18:18:07 -==> Parameters: 181(String)
2020-04-16 18:18:07 -<==      Total: 2
2020-04-16 18:18:07 -耗时 : 38
2020-04-16 18:18:07 -此处进行解密+验签+身份验证
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:07 -此处进行解密+验签+身份验证
2020-04-16 18:18:07 -此处进行解密+验签+身份验证
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:07 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 18:18:07 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 18:18:07 -==> Parameters: 
2020-04-16 18:18:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:18:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:18:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:18:07 -==> Parameters: 181(String), 181(String)
2020-04-16 18:18:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:18:07 -==> Parameters: 181(String), 181(String)
2020-04-16 18:18:07 -此处进行解密+验签+身份验证
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:07 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:18:07 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:18:07 -==> Parameters: 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -耗时 : 2
2020-04-16 18:18:07 -<==      Total: 3
2020-04-16 18:18:07 -耗时 : 29
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:18:07 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 2
2020-04-16 18:18:07 -<==      Total: 2
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:18:07 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:18:07 -<==    Updates: 2
2020-04-16 18:18:07 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:18:07 -==> Parameters: 181(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -<==    Updates: 2
2020-04-16 18:18:07 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: 181(String), 181(String)
2020-04-16 18:18:07 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:18:07 -<==    Updates: 1
2020-04-16 18:18:07 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:18:07 -==> Parameters: 
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:18:07 -<==    Updates: 1
2020-04-16 18:18:07 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:18:07 -==> Parameters: 
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==> Parameters: 0(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==> Parameters: 0(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:18:07 -<==    Updates: 1
2020-04-16 18:18:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:18:07 -==> Parameters: 181(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:18:07 -<==    Updates: 1
2020-04-16 18:18:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:18:07 -==> Parameters: 181(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:18:07 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:18:07 -<==    Updates: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:18:07 -<==    Updates: 1
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:18:07 -耗时 : 104
2020-04-16 18:18:07 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:18:07 -<==      Total: 1
2020-04-16 18:18:07 -耗时 : 107
2020-04-16 18:18:30 -此处进行解密+验签+身份验证
2020-04-16 18:18:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:30 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 18:18:30 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 18:18:30 -==> Parameters: 1(String), 181(String), collegeFlag(String)
2020-04-16 18:18:30 -<==    Updates: 1
2020-04-16 18:18:30 -耗时 : 11
2020-04-16 18:18:30 -此处进行解密+验签+身份验证
2020-04-16 18:18:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:18:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:18:30 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeList
2020-04-16 18:18:30 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_list_0
2020-04-16 18:18:30 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,has cacheKey:zfpay_sys_money_locker_college_list_0 , return
2020-04-16 18:18:30 -耗时 : 2
2020-04-16 18:20:54 -此处进行解密+验签+身份验证
2020-04-16 18:20:54 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 18:20:54 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 18:20:54 -此处进行解密+验签+身份验证
2020-04-16 18:20:54 -解密：
2020-04-16 18:20:54 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:20:54 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:20:54 -==> Parameters: 04(String), 04(String)
2020-04-16 18:20:55 -<==      Total: 1
2020-04-16 18:20:55 -耗时 : 1
2020-04-16 18:20:55 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 18:20:55 -耗时 : 10
2020-04-16 18:20:55 -此处进行解密+验签+身份验证
2020-04-16 18:20:55 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 18:20:55 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 18:20:55 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 18:20:55 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 18:20:55 -==> Parameters: 181(String)
2020-04-16 18:20:55 -<==      Total: 1
2020-04-16 18:20:55 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 18:20:55 -==> Parameters: 26(String)
2020-04-16 18:20:55 -<==      Total: 1
2020-04-16 18:20:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:20:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:20:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:20:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:20:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:20:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:20:55 -耗时 : 6
2020-04-16 18:20:59 -此处进行解密+验签+身份验证
2020-04-16 18:20:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:20:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:20:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:20:59 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:20:59 -==> Parameters: 181(String)
2020-04-16 18:20:59 -<==      Total: 1
2020-04-16 18:20:59 -耗时 : 1
2020-04-16 18:21:00 -此处进行解密+验签+身份验证
2020-04-16 18:21:00 -解密：
2020-04-16 18:21:00 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:21:00 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:21:00 -==> Parameters: 01(String), 01(String)
2020-04-16 18:21:00 -<==      Total: 4
2020-04-16 18:21:00 -耗时 : 2
2020-04-16 18:21:00 -此处进行解密+验签+身份验证
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 18:21:00 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 18:21:00 -==> Parameters: 181(String)
2020-04-16 18:21:00 -<==      Total: 2
2020-04-16 18:21:00 -耗时 : 2
2020-04-16 18:21:00 -此处进行解密+验签+身份验证
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:00 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:21:00 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:21:00 -此处进行解密+验签+身份验证
2020-04-16 18:21:00 -==> Parameters: 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:00 -耗时 : 1
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:21:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:21:00 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:00 -此处进行解密+验签+身份验证
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:21:00 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 18:21:00 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 18:21:00 -==> Parameters: 
2020-04-16 18:21:00 -<==      Total: 3
2020-04-16 18:21:00 -耗时 : 1
2020-04-16 18:21:00 -此处进行解密+验签+身份验证
2020-04-16 18:21:00 -<==      Total: 2
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:21:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:21:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:21:00 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 2
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:21:00 -<==    Updates: 2
2020-04-16 18:21:00 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:21:00 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:21:00 -<==    Updates: 2
2020-04-16 18:21:00 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:21:00 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:21:00 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:21:00 -<==    Updates: 1
2020-04-16 18:21:00 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:21:00 -==> Parameters: 
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:21:00 -<==    Updates: 1
2020-04-16 18:21:00 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:21:00 -==> Parameters: 
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==> Parameters: 0(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==> Parameters: 0(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:21:00 -<==    Updates: 1
2020-04-16 18:21:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:21:00 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:21:00 -<==    Updates: 1
2020-04-16 18:21:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:21:00 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:21:00 -<==    Updates: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -耗时 : 93
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:00 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:21:00 -<==    Updates: 1
2020-04-16 18:21:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:00 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:21:00 -<==      Total: 1
2020-04-16 18:21:00 -耗时 : 100
2020-04-16 18:21:04 -此处进行解密+验签+身份验证
2020-04-16 18:21:04 -此处进行解密+验签+身份验证
2020-04-16 18:21:04 -此处进行解密+验签+身份验证
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:04 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-04-16 18:21:04 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-04-16 18:21:04 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:21:04 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-04-16 18:21:04 -==> Parameters: 181(String)
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:21:04 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-04-16 18:21:04 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-04-16 18:21:04 -==> Parameters: 26(String), 20200416(String)
2020-04-16 18:21:04 -==> Parameters: 26(String), 20200416(String)
2020-04-16 18:21:04 -<==      Total: 0
2020-04-16 18:21:04 -耗时 : 17
2020-04-16 18:21:04 -<==      Total: 0
2020-04-16 18:21:04 -耗时 : 19
2020-04-16 18:21:04 -<==      Total: 0
2020-04-16 18:21:04 -耗时 : 21
2020-04-16 18:21:04 -此处进行解密+验签+身份验证
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:04 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-04-16 18:21:04 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-04-16 18:21:04 -==> Parameters: 181(String)
2020-04-16 18:21:04 -<==      Total: 0
2020-04-16 18:21:04 -耗时 : 6
2020-04-16 18:21:06 -此处进行解密+验签+身份验证
2020-04-16 18:21:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:06 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:21:06 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:21:06 -==> Parameters: 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -耗时 : 2
2020-04-16 18:21:06 -此处进行解密+验签+身份验证
2020-04-16 18:21:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:06 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:21:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:21:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:21:06 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:21:06 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:06 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 2
2020-04-16 18:21:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:06 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:21:06 -<==    Updates: 2
2020-04-16 18:21:06 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:21:06 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:06 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:06 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:21:06 -<==    Updates: 1
2020-04-16 18:21:06 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:21:06 -==> Parameters: 
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:06 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:06 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:21:06 -<==    Updates: 1
2020-04-16 18:21:06 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:21:06 -==> Parameters: 181(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:06 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:21:06 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:21:06 -<==    Updates: 1
2020-04-16 18:21:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:21:06 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:21:06 -<==      Total: 1
2020-04-16 18:21:06 -耗时 : 71
2020-04-16 18:21:07 -此处进行解密+验签+身份验证
2020-04-16 18:21:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-16 18:21:07 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-16 18:21:07 -==> Parameters: 1(String), 181(String), collegeFlag(String)
2020-04-16 18:21:07 -<==    Updates: 1
2020-04-16 18:21:07 -耗时 : 11
2020-04-16 18:21:07 -此处进行解密+验签+身份验证
2020-04-16 18:21:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:21:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:21:07 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeList
2020-04-16 18:21:07 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_list_0
2020-04-16 18:21:07 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,has cacheKey:zfpay_sys_money_locker_college_list_0 , return
2020-04-16 18:21:07 -耗时 : 2
2020-04-16 18:22:03 -此处进行解密+验签+身份验证
2020-04-16 18:22:03 -解密：
2020-04-16 18:22:03 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:22:03 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:22:03 -==> Parameters: 04(String), 04(String)
2020-04-16 18:22:03 -<==      Total: 1
2020-04-16 18:22:03 -耗时 : 1
2020-04-16 18:22:03 -此处进行解密+验签+身份验证
2020-04-16 18:22:03 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-16 18:22:03 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-16 18:22:03 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-16 18:22:03 -耗时 : 2
2020-04-16 18:22:04 -此处进行解密+验签+身份验证
2020-04-16 18:22:04 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"BE0FE215C94D76589FE01DC065C4D8D8","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA"}
2020-04-16 18:22:04 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-16 18:22:04 -token值=======181|4PE5JFJ5UIJYSY8271ZA9AWG7IU0YHEA
2020-04-16 18:22:04 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-16 18:22:04 -==> Parameters: 181(String)
2020-04-16 18:22:04 -<==      Total: 1
2020-04-16 18:22:04 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-16 18:22:04 -==> Parameters: 26(String)
2020-04-16 18:22:04 -<==      Total: 1
2020-04-16 18:22:04 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:22:04 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:22:04 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:22:04 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:22:04 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-16 18:22:04 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-16 18:22:04 -耗时 : 54
2020-04-16 18:22:08 -此处进行解密+验签+身份验证
2020-04-16 18:22:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:22:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:22:08 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:22:08 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:22:08 -==> Parameters: 181(String)
2020-04-16 18:22:08 -<==      Total: 1
2020-04-16 18:22:08 -耗时 : 1
2020-04-16 18:22:08 -此处进行解密+验签+身份验证
2020-04-16 18:22:08 -解密：
2020-04-16 18:22:08 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-16 18:22:08 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-16 18:22:08 -==> Parameters: 01(String), 01(String)
2020-04-16 18:22:08 -<==      Total: 4
2020-04-16 18:22:08 -耗时 : 1
2020-04-16 18:22:09 -此处进行解密+验签+身份验证
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:22:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-16 18:22:09 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-16 18:22:09 -==> Parameters: 181(String)
2020-04-16 18:22:09 -<==      Total: 2
2020-04-16 18:22:09 -耗时 : 3
2020-04-16 18:22:09 -此处进行解密+验签+身份验证
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:22:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:22:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:22:09 -==> Parameters: 181(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 2
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:22:09 -<==    Updates: 2
2020-04-16 18:22:09 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:22:09 -==> Parameters: 181(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:22:09 -<==    Updates: 1
2020-04-16 18:22:09 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:22:09 -==> Parameters: 
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 0(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:22:09 -<==    Updates: 1
2020-04-16 18:22:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:22:09 -==> Parameters: 181(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:22:09 -<==    Updates: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:22:09 -此处进行解密+验签+身份验证
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:22:09 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-16 18:22:09 -耗时 : 69
2020-04-16 18:22:09 -==> Parameters: 
2020-04-16 18:22:09 -<==      Total: 3
2020-04-16 18:22:09 -耗时 : 2
2020-04-16 18:22:09 -此处进行解密+验签+身份验证
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:22:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-16 18:22:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:22:09 -==> Parameters: 181(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 2
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-16 18:22:09 -<==    Updates: 2
2020-04-16 18:22:09 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-16 18:22:09 -==> Parameters: 181(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: recallFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-16 18:22:09 -<==    Updates: 1
2020-04-16 18:22:09 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-16 18:22:09 -==> Parameters: 
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: collegeFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-16 18:22:09 -此处进行解密+验签+身份验证
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-16 18:22:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-16 18:22:09 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-16 18:22:09 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-16 18:22:09 -==> Parameters: 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -耗时 : 1
2020-04-16 18:22:09 -<==    Updates: 1
2020-04-16 18:22:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-16 18:22:09 -==> Parameters: 181(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: cardFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-16 18:22:09 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-16 18:22:09 -<==    Updates: 1
2020-04-16 18:22:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-16 18:22:09 -==> Parameters: appImgFlag(String), 181(String)
2020-04-16 18:22:09 -<==      Total: 1
2020-04-16 18:22:09 -耗时 : 60
