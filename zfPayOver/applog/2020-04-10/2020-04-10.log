2020-04-10 09:48:10 -Starting LongEcologicalApplication on PC-201905161910 with PID 13732 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-10 09:48:10 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-10 09:48:10 -No active profile set, falling back to default profiles: default
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-10 09:48:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-10 09:48:11 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-10 09:48:11 -Finished Spring Data repository scanning in 85ms. Found 0 repository interfaces.
2020-04-10 09:48:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-10 09:48:12 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-10 09:48:12 -Finished Spring Data repository scanning in 55ms. Found 0 repository interfaces.
2020-04-10 09:48:12 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$b2e0f62d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-10 09:48:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ad64dacd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-10 09:48:13 -Tomcat initialized with port(s): 8080 (http)
2020-04-10 09:48:13 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-10 09:48:13 -Starting service [Tomcat]
2020-04-10 09:48:13 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-10 09:48:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-10 09:48:13 -Initializing Spring embedded WebApplicationContext
2020-04-10 09:48:13 -Root WebApplicationContext: initialization completed in 2854 ms
2020-04-10 09:48:13 -Filter xssFilter was not registered (disabled)
2020-04-10 09:48:13 -HikariPool-1 - Starting...
2020-04-10 09:48:14 -HikariPool-1 - Start completed.
2020-04-10 09:48:14 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-10 09:48:14 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-10 09:48:14 -HHH000206: hibernate.properties not found
2020-04-10 09:48:14 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-10 09:48:15 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-10 09:48:15 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-10 09:48:15 -Using default implementation for ThreadExecutor
2020-04-10 09:48:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-10 09:48:15 -Quartz Scheduler v.2.3.0 created.
2020-04-10 09:48:15 -RAMJobStore initialized.
2020-04-10 09:48:15 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-10 09:48:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-10 09:48:15 -Quartz scheduler version: 2.3.0
2020-04-10 09:48:15 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@727986ad
2020-04-10 09:48:16 -STAET TaskExecutorConfig
2020-04-10 09:48:16 -Initializing ExecutorService
2020-04-10 09:48:16 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-10 09:48:16 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-10 09:48:16 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-10 09:48:17 -Initializing ExecutorService 'taskScheduler'
2020-04-10 09:48:17 -Starting Quartz Scheduler now
2020-04-10 09:48:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-10 09:48:17 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-10 09:48:17 -Using a shared selector for servlet write/read
2020-04-10 09:48:17 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-10 09:48:17 -Started LongEcologicalApplication in 7.681 seconds (JVM running for 9.239)
2020-04-10 11:44:27 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-10 11:44:27 -Initializing Servlet 'dispatcherServlet'
2020-04-10 11:44:27 -Completed initialization in 18 ms
2020-04-10 11:44:28 -此处进行解密+验签+身份验证
2020-04-10 11:44:28 -此处进行解密+验签+身份验证
2020-04-10 11:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-10 11:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-04-10 11:44:28 -Starting without optional epoll library
2020-04-10 11:44:28 -Starting without optional kqueue library
2020-04-10 11:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-10 11:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-04-10 11:44:28 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-10 11:44:28 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-10 11:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-04-10 11:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-04-10 11:44:28 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-10 11:44:28 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-10 11:44:28 -==> Parameters: 426(String), 426(String)
2020-04-10 11:44:28 -==> Parameters: 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -耗时 : 210
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-10 11:44:29 -==> Parameters: applyRateFlag(String), 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-10 11:44:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-04-10 11:44:29 -<==    Updates: 1
2020-04-10 11:44:29 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-10 11:44:29 -==> Parameters: 426(String), 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-10 11:44:29 -==> Parameters: recallFlag(String), 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-10 11:44:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-04-10 11:44:29 -<==    Updates: 1
2020-04-10 11:44:29 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-10 11:44:29 -==> Parameters: 
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-10 11:44:29 -==> Parameters: collegeFlag(String), 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-10 11:44:29 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-04-10 11:44:29 -<==    Updates: 1
2020-04-10 11:44:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-10 11:44:29 -==> Parameters: 426(String), 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-10 11:44:29 -==> Parameters: cardFlag(String), 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-10 11:44:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-04-10 11:44:29 -<==    Updates: 1
2020-04-10 11:44:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-10 11:44:29 -==> Parameters: appImgFlag(String), 426(String)
2020-04-10 11:44:29 -<==      Total: 1
2020-04-10 11:44:29 -耗时 : 388
