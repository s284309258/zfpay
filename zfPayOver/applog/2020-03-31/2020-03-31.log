2020-03-31 11:24:41 -Starting LongEcologicalApplication on PC-201905161910 with PID 13516 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-31 11:24:41 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-31 11:24:41 -No active profile set, falling back to default profiles: default
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-31 11:24:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-31 11:24:43 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-31 11:24:43 -Finished Spring Data repository scanning in 197ms. Found 0 repository interfaces.
2020-03-31 11:24:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-31 11:24:43 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-31 11:24:43 -Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2020-03-31 11:24:44 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$cdc3eded] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-31 11:24:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c847d28d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-31 11:24:45 -Tomcat initialized with port(s): 8080 (http)
2020-03-31 11:24:45 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-31 11:24:45 -Starting service [Tomcat]
2020-03-31 11:24:45 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-31 11:24:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-31 11:24:45 -Initializing Spring embedded WebApplicationContext
2020-03-31 11:24:45 -Root WebApplicationContext: initialization completed in 3334 ms
2020-03-31 11:24:45 -Filter xssFilter was not registered (disabled)
2020-03-31 11:24:45 -HikariPool-1 - Starting...
2020-03-31 11:24:45 -HikariPool-1 - Start completed.
2020-03-31 11:24:46 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-31 11:24:46 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-31 11:24:46 -HHH000206: hibernate.properties not found
2020-03-31 11:24:46 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-31 11:24:46 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-31 11:24:46 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-31 11:24:47 -Using default implementation for ThreadExecutor
2020-03-31 11:24:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-31 11:24:47 -Quartz Scheduler v.2.3.0 created.
2020-03-31 11:24:47 -RAMJobStore initialized.
2020-03-31 11:24:47 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-31 11:24:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-31 11:24:47 -Quartz scheduler version: 2.3.0
2020-03-31 11:24:47 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@52aa7742
2020-03-31 11:24:47 -STAET TaskExecutorConfig
2020-03-31 11:24:47 -Initializing ExecutorService
2020-03-31 11:24:47 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-31 11:24:48 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-31 11:24:48 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-31 11:24:48 -Initializing ExecutorService 'taskScheduler'
2020-03-31 11:24:48 -Starting Quartz Scheduler now
2020-03-31 11:24:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-31 11:24:48 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-31 11:24:48 -Using a shared selector for servlet write/read
2020-03-31 11:24:48 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-31 11:24:48 -Started LongEcologicalApplication in 7.471 seconds (JVM running for 8.779)
2020-03-31 11:24:55 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-31 11:24:55 -Initializing Servlet 'dispatcherServlet'
2020-03-31 11:24:55 -Completed initialization in 12 ms
2020-03-31 11:24:55 -此处进行解密+验签+身份验证
2020-03-31 11:24:55 -此处进行解密+验签+身份验证
2020-03-31 11:24:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:24:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:24:56 -Starting without optional epoll library
2020-03-31 11:24:56 -Starting without optional kqueue library
2020-03-31 11:24:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:24:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:24:56 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-31 11:24:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-31 11:24:56 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-31 11:24:56 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-31 11:24:56 -==> Parameters: 202003(String), 426(String)
2020-03-31 11:24:56 -==> Parameters: 426(String)
2020-03-31 11:24:56 -<==      Total: 1
2020-03-31 11:24:56 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-31 11:24:56 -==> Parameters: 426(String), 426(String)
2020-03-31 11:24:56 -<==      Total: 1
2020-03-31 11:24:56 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-31 11:24:56 -==> Parameters: 426(String)
2020-03-31 11:24:56 -<==      Total: 0
2020-03-31 11:24:56 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-31 11:24:56 -==> Parameters: 202003(String), 426(String)
2020-03-31 11:24:56 -<==      Total: 1
2020-03-31 11:24:56 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-31 11:24:56 -==> Parameters: 426(String)
2020-03-31 11:24:56 -<==      Total: 0
2020-03-31 11:24:56 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-31 11:24:56 -==> Parameters: 202003(String), 426(String)
2020-03-31 11:24:56 -<==      Total: 1
2020-03-31 11:24:56 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-31 11:24:56 -==> Parameters: 426(String)
2020-03-31 11:24:56 -<==      Total: 0
2020-03-31 11:24:56 -耗时 : 140
2020-03-31 11:24:57 -<==      Total: 1
2020-03-31 11:24:57 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-31 11:24:57 -==> Parameters: 426(String), 426(String)
2020-03-31 11:24:58 -<==      Total: 1
2020-03-31 11:24:58 -耗时 : 1480
2020-03-31 11:25:04 -此处进行解密+验签+身份验证
2020-03-31 11:25:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 11:25:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 11:25:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 11:25:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:25:04 -==> Parameters: 426(String), 426(String)
2020-03-31 11:25:04 -<==      Total: 1
2020-03-31 11:25:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:25:04 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 11:25:04 -<==      Total: 1
2020-03-31 11:25:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:25:04 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 11:25:04 -<==    Updates: 1
2020-03-31 11:25:04 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 11:25:04 -==> Parameters: 426(String), 426(String)
2020-03-31 11:25:04 -<==      Total: 1
2020-03-31 11:25:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:25:04 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 11:25:04 -<==      Total: 1
2020-03-31 11:25:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:25:04 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 11:25:04 -<==    Updates: 1
2020-03-31 11:25:04 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 11:25:04 -==> Parameters: 
2020-03-31 11:25:05 -<==      Total: 1
2020-03-31 11:25:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:25:05 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 11:25:05 -<==      Total: 1
2020-03-31 11:25:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:25:05 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 11:25:05 -<==    Updates: 1
2020-03-31 11:25:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:25:05 -==> Parameters: 426(String), 426(String)
2020-03-31 11:25:05 -<==      Total: 1
2020-03-31 11:25:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:25:05 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 11:25:05 -<==      Total: 1
2020-03-31 11:25:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:25:05 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 11:25:05 -<==    Updates: 1
2020-03-31 11:25:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:25:05 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 11:25:05 -<==      Total: 1
2020-03-31 11:25:05 -耗时 : 132
2020-03-31 11:25:11 -此处进行解密+验签+身份验证
2020-03-31 11:25:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:11 -此处进行解密+验签+身份验证
2020-03-31 11:25:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:11 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-31 11:25:11 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-31 11:25:11 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-31 11:25:11 -==> Parameters: 426(String)
2020-03-31 11:25:11 -<==      Total: 1
2020-03-31 11:25:11 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-31 11:25:11 -==> Parameters: 426(String)
2020-03-31 11:25:11 -<==      Total: 1
2020-03-31 11:25:11 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 11:25:11 -==> Parameters: 426(String)
2020-03-31 11:25:11 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-31 11:25:11 -==> Parameters: 426(String)
2020-03-31 11:25:11 -<==      Total: 1
2020-03-31 11:25:11 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-31 11:25:11 -==> Parameters: 426(String)
2020-03-31 11:25:11 -<==      Total: 1
2020-03-31 11:25:11 -耗时 : 48
2020-03-31 11:25:11 -<==      Total: 10
2020-03-31 11:25:11 -耗时 : 57
2020-03-31 11:25:17 -此处进行解密+验签+身份验证
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 11:25:17 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-31 11:25:17 -==> Parameters: 2555(String)
2020-03-31 11:25:17 -<==      Total: 1
2020-03-31 11:25:17 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 11:25:17 -==> Parameters: 2555(String)
2020-03-31 11:25:17 -<==      Total: 1
2020-03-31 11:25:17 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2555 and pos_type='epos' 
2020-03-31 11:25:17 -==> Parameters: 
2020-03-31 11:25:17 -此处进行解密+验签+身份验证
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-31 11:25:17 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2555 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2555 and cre_month=202003 and pos_type is null 
2020-03-31 11:25:17 -==> Parameters: 
2020-03-31 11:25:17 -<==      Total: 1
2020-03-31 11:25:17 -耗时 : 96
2020-03-31 11:25:17 -此处进行解密+验签+身份验证
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 11:25:17 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 11:25:17 -==> Parameters: 2555(String), 2555(String), 0(String)
2020-03-31 11:25:17 -此处进行解密+验签+身份验证
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 11:25:17 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 11:25:17 -==> Parameters: 2555(String), 2555(String), 1(String)
2020-03-31 11:25:17 -此处进行解密+验签+身份验证
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 11:25:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 11:25:17 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 11:25:17 -==> Parameters: 2555(String), 2555(String)
2020-03-31 11:25:17 -<==      Total: 10
2020-03-31 11:25:17 -耗时 : 27
2020-03-31 11:25:17 -<==      Total: 10
2020-03-31 11:25:17 -耗时 : 152
2020-03-31 11:25:17 -<==      Total: 1
2020-03-31 11:25:17 -耗时 : 316
2020-03-31 11:25:17 -<==      Total: 3
2020-03-31 11:25:17 -耗时 : 233
2020-03-31 11:25:30 -此处进行解密+验签+身份验证
2020-03-31 11:25:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:30 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-31 11:25:30 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-03-31 11:25:30 -==> Parameters: 426(String)
2020-03-31 11:25:30 -<==      Total: 1
2020-03-31 11:25:30 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-03-31 11:25:30 -==> Parameters: 426(String), 426(String), 202003(String)
2020-03-31 11:25:30 -<==      Total: 1
2020-03-31 11:25:30 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-31 11:25:30 -==> Parameters: 426(String), 426(String), 20200301(String), 20200331(String), 426(String)
2020-03-31 11:25:30 -此处进行解密+验签+身份验证
2020-03-31 11:25:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:30 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryMposList
2020-03-31 11:25:30 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND del='0' 
2020-03-31 11:25:30 -==> Parameters: 426(String)
2020-03-31 11:25:31 -<==      Total: 1
2020-03-31 11:25:31 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_mpos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-03-31 11:25:31 -==> Parameters: 426(String), 426(String), 202003(String)
2020-03-31 11:25:31 -<==      Total: 1
2020-03-31 11:25:31 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-31 11:25:31 -==> Parameters: 426(String), 426(String), 20200301(String), 20200331(String), 426(String)
2020-03-31 11:25:31 -<==      Total: 1
2020-03-31 11:25:31 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-31 11:25:31 -==> Parameters: 426(String), 20200131(String), 426(String), 20200131(String), 20200331(String), 426(String)
2020-03-31 11:25:32 -<==      Total: 1
2020-03-31 11:25:32 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-03-31 11:25:32 -==> Parameters: 426(String)
2020-03-31 11:25:32 -<==      Total: 1
2020-03-31 11:25:32 -耗时 : 2085
2020-03-31 11:25:33 -<==      Total: 1
2020-03-31 11:25:33 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-31 11:25:33 -==> Parameters: 426(String), 20200131(String), 426(String), 20200131(String), 20200331(String), 426(String)
2020-03-31 11:25:33 -<==      Total: 1
2020-03-31 11:25:33 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='02' 
2020-03-31 11:25:33 -==> Parameters: 426(String)
2020-03-31 11:25:33 -<==      Total: 1
2020-03-31 11:25:33 -耗时 : 3061
2020-03-31 11:25:38 -此处进行解密+验签+身份验证
2020-03-31 11:25:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-31 11:25:38 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-31 11:25:38 -==> Parameters: 426(String)
2020-03-31 11:25:38 -此处进行解密+验签+身份验证
2020-03-31 11:25:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:25:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:25:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-31 11:25:38 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-31 11:25:38 -==> Parameters: 426(String)
2020-03-31 11:25:38 -<==      Total: 1
2020-03-31 11:25:38 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-31 11:25:38 -==> Parameters: 426(String)
2020-03-31 11:25:38 -<==      Total: 10
2020-03-31 11:25:38 -耗时 : 10
2020-03-31 11:25:38 -<==      Total: 1
2020-03-31 11:25:38 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 11:25:38 -==> Parameters: 426(String)
2020-03-31 11:25:38 -<==      Total: 1
2020-03-31 11:25:38 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-31 11:25:38 -==> Parameters: 426(String)
2020-03-31 11:25:38 -<==      Total: 1
2020-03-31 11:25:38 -耗时 : 15
2020-03-31 11:32:09 -此处进行解密+验签+身份验证
2020-03-31 11:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:32:09 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-31 11:32:09 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-31 11:32:09 -==> Parameters: 426(String)
2020-03-31 11:32:09 -此处进行解密+验签+身份验证
2020-03-31 11:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -耗时 : 6
2020-03-31 11:32:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 11:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 11:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 11:32:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:32:09 -==> Parameters: 426(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:32:09 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:32:09 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 11:32:09 -<==    Updates: 1
2020-03-31 11:32:09 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 11:32:09 -==> Parameters: 426(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:32:09 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:32:09 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 11:32:09 -<==    Updates: 1
2020-03-31 11:32:09 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 11:32:09 -==> Parameters: 
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:32:09 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:32:09 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 11:32:09 -<==    Updates: 1
2020-03-31 11:32:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:32:09 -==> Parameters: 426(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:32:09 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:32:09 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 11:32:09 -<==    Updates: 1
2020-03-31 11:32:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:32:09 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 11:32:09 -<==      Total: 1
2020-03-31 11:32:09 -耗时 : 103
2020-03-31 11:34:06 -此处进行解密+验签+身份验证
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:34:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyMposDetail
2020-03-31 11:34:06 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-31 11:34:06 -==> Parameters: 426(String), 20200331(String)
2020-03-31 11:34:06 -<==      Total: 0
2020-03-31 11:34:06 -耗时 : 7
2020-03-31 11:34:06 -此处进行解密+验签+身份验证
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:34:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyMposDetail
2020-03-31 11:34:06 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-31 11:34:06 -==> Parameters: 426(String), 202003(String)
2020-03-31 11:34:06 -<==      Total: 1
2020-03-31 11:34:06 -耗时 : 31
2020-03-31 11:34:06 -此处进行解密+验签+身份验证
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:34:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantMposDetail
2020-03-31 11:34:06 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-31 11:34:06 -此处进行解密+验签+身份验证
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:34:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:34:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantMposDetail
2020-03-31 11:34:06 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-31 11:34:06 -==> Parameters: 426(String), 202003(String)
2020-03-31 11:34:06 -==> Parameters: 426(String), 20200331(String)
2020-03-31 11:34:06 -<==      Total: 0
2020-03-31 11:34:06 -耗时 : 9
2020-03-31 11:34:06 -<==      Total: 1
2020-03-31 11:34:06 -耗时 : 8
2020-03-31 11:34:08 -此处进行解密+验签+身份验证
2020-03-31 11:34:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:34:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:34:08 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-31 11:34:08 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-31 11:34:08 -==> Parameters: 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -耗时 : 2
2020-03-31 11:34:08 -此处进行解密+验签+身份验证
2020-03-31 11:34:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:34:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:34:08 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 11:34:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 11:34:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 11:34:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:34:08 -==> Parameters: 426(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:08 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:08 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 11:34:08 -<==    Updates: 1
2020-03-31 11:34:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 11:34:08 -==> Parameters: 426(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:08 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:08 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 11:34:08 -<==    Updates: 1
2020-03-31 11:34:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 11:34:08 -==> Parameters: 
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:08 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:08 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 11:34:08 -<==    Updates: 1
2020-03-31 11:34:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:34:08 -==> Parameters: 426(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:08 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:08 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 11:34:08 -<==    Updates: 1
2020-03-31 11:34:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:08 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 11:34:08 -<==      Total: 1
2020-03-31 11:34:08 -耗时 : 66
2020-03-31 11:34:43 -此处进行解密+验签+身份验证
2020-03-31 11:34:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:34:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:34:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 11:34:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 11:34:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 11:34:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:34:43 -==> Parameters: 426(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:43 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:43 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 11:34:43 -<==    Updates: 1
2020-03-31 11:34:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 11:34:43 -==> Parameters: 426(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:43 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:43 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 11:34:43 -<==    Updates: 1
2020-03-31 11:34:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 11:34:43 -==> Parameters: 
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:43 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:43 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 11:34:43 -<==    Updates: 1
2020-03-31 11:34:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 11:34:43 -==> Parameters: 426(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:43 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 11:34:43 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 11:34:43 -<==    Updates: 1
2020-03-31 11:34:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 11:34:43 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 11:34:43 -<==      Total: 1
2020-03-31 11:34:43 -耗时 : 61
2020-03-31 11:45:46 -此处进行解密+验签+身份验证
2020-03-31 11:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 11:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 11:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-31 11:45:46 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-31 11:45:46 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-03-31 11:45:46 -<==    Updates: 1
2020-03-31 11:45:46 -耗时 : 22
2020-03-31 11:45:46 -此处进行解密+验签+身份验证
2020-03-31 11:45:46 -此处进行解密+验签+身份验证
2020-03-31 11:45:46 -解密：
2020-03-31 11:45:46 -解密：
2020-03-31 11:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-31 11:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-31 11:45:46 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-31 11:45:46 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-31 11:45:46 -==> Parameters: 03(String), 03(String)
2020-03-31 11:45:46 -==> Parameters: 02(String), 02(String)
2020-03-31 11:45:46 -<==      Total: 7
2020-03-31 11:45:46 -耗时 : 11
2020-03-31 11:45:46 -<==      Total: 3
2020-03-31 11:45:46 -耗时 : 13
2020-03-31 12:00:13 -此处进行解密+验签+身份验证
2020-03-31 12:00:13 -解密：
2020-03-31 12:00:13 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-31 12:00:13 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-31 12:00:13 -==> Parameters: 04(String), 04(String)
2020-03-31 12:00:13 -<==      Total: 1
2020-03-31 12:00:13 -耗时 : 11
2020-03-31 12:00:26 -此处进行解密+验签+身份验证
2020-03-31 12:00:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 12:00:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 12:00:26 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-31 12:00:26 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-31 12:00:26 -==> Parameters: 426(String)
2020-03-31 12:00:26 -<==      Total: 1
2020-03-31 12:00:26 -耗时 : 2
2020-03-31 12:00:26 -此处进行解密+验签+身份验证
2020-03-31 12:00:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 12:00:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 12:00:26 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 12:00:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 12:00:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 12:00:26 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 12:00:26 -==> Parameters: 426(String), 426(String)
2020-03-31 12:00:26 -<==      Total: 1
2020-03-31 12:00:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 12:00:26 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 12:00:27 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 12:00:27 -<==    Updates: 1
2020-03-31 12:00:27 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 12:00:27 -==> Parameters: 426(String), 426(String)
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 12:00:27 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 12:00:27 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 12:00:27 -<==    Updates: 1
2020-03-31 12:00:27 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 12:00:27 -==> Parameters: 
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 12:00:27 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 12:00:27 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 12:00:27 -<==    Updates: 1
2020-03-31 12:00:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 12:00:27 -==> Parameters: 426(String), 426(String)
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 12:00:27 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 12:00:27 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 12:00:27 -<==    Updates: 1
2020-03-31 12:00:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 12:00:27 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 12:00:27 -<==      Total: 1
2020-03-31 12:00:27 -耗时 : 109
2020-03-31 14:07:42 -此处进行解密+验签+身份验证
2020-03-31 14:07:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:07:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:07:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 14:07:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 14:07:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 14:07:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 14:07:42 -==> Parameters: 426(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:07:42 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:07:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 14:07:42 -<==    Updates: 1
2020-03-31 14:07:42 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 14:07:42 -==> Parameters: 426(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:07:42 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:07:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 14:07:42 -<==    Updates: 1
2020-03-31 14:07:42 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 14:07:42 -==> Parameters: 
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:07:42 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:07:42 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 14:07:42 -<==    Updates: 1
2020-03-31 14:07:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 14:07:42 -==> Parameters: 426(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:07:42 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:07:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 14:07:42 -<==    Updates: 1
2020-03-31 14:07:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:07:42 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 14:07:42 -<==      Total: 1
2020-03-31 14:07:42 -耗时 : 104
2020-03-31 14:25:10 -此处进行解密+验签+身份验证
2020-03-31 14:25:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:25:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:25:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 14:25:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 14:25:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 14:25:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 14:25:10 -==> Parameters: 426(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:10 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:10 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 14:25:10 -<==    Updates: 1
2020-03-31 14:25:10 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 14:25:10 -==> Parameters: 426(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:10 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:10 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 14:25:10 -<==    Updates: 1
2020-03-31 14:25:10 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 14:25:10 -==> Parameters: 
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:10 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:10 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 14:25:10 -<==    Updates: 1
2020-03-31 14:25:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 14:25:10 -==> Parameters: 426(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:10 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:10 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 14:25:10 -<==    Updates: 1
2020-03-31 14:25:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:10 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 14:25:10 -<==      Total: 1
2020-03-31 14:25:10 -耗时 : 91
2020-03-31 14:25:15 -此处进行解密+验签+身份验证
2020-03-31 14:25:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:25:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:25:15 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-31 14:25:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-31 14:25:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-31 14:25:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 14:25:15 -==> Parameters: 426(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:15 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:15 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-31 14:25:15 -<==    Updates: 1
2020-03-31 14:25:15 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-31 14:25:15 -==> Parameters: 426(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:15 -==> Parameters: recallFlag(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:15 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-31 14:25:15 -<==    Updates: 1
2020-03-31 14:25:15 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-31 14:25:15 -==> Parameters: 
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:15 -==> Parameters: collegeFlag(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:15 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-31 14:25:15 -<==    Updates: 1
2020-03-31 14:25:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-31 14:25:15 -==> Parameters: 426(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:15 -==> Parameters: cardFlag(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-31 14:25:15 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-31 14:25:15 -<==    Updates: 1
2020-03-31 14:25:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-31 14:25:15 -==> Parameters: appImgFlag(String), 426(String)
2020-03-31 14:25:15 -<==      Total: 1
2020-03-31 14:25:15 -耗时 : 59
2020-03-31 14:25:21 -此处进行解密+验签+身份验证
2020-03-31 14:25:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:25:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:25:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-31 14:25:21 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-31 14:25:21 -==> Parameters: 426(String)
2020-03-31 14:25:21 -此处进行解密+验签+身份验证
2020-03-31 14:25:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:25:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:25:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-31 14:25:21 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-31 14:25:21 -==> Parameters: 426(String)
2020-03-31 14:25:21 -<==      Total: 10
2020-03-31 14:25:21 -耗时 : 17
2020-03-31 14:25:21 -<==      Total: 1
2020-03-31 14:25:21 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-31 14:25:21 -==> Parameters: 426(String)
2020-03-31 14:25:21 -<==      Total: 1
2020-03-31 14:25:21 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 14:25:21 -==> Parameters: 426(String)
2020-03-31 14:25:21 -<==      Total: 1
2020-03-31 14:25:21 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-31 14:25:21 -==> Parameters: 426(String)
2020-03-31 14:25:21 -<==      Total: 1
2020-03-31 14:25:21 -耗时 : 23
2020-03-31 14:26:08 -此处进行解密+验签+身份验证
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:26:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-31 14:26:08 -此处进行解密+验签+身份验证
2020-03-31 14:26:08 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2309 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2309 and cre_month=202003 and pos_type is null 
2020-03-31 14:26:08 -==> Parameters: 
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:26:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 14:26:08 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-31 14:26:08 -==> Parameters: 2309(String)
2020-03-31 14:26:08 -<==      Total: 1
2020-03-31 14:26:08 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 14:26:08 -==> Parameters: 2309(String)
2020-03-31 14:26:08 -<==      Total: 1
2020-03-31 14:26:08 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2309 and pos_type='epos' 
2020-03-31 14:26:08 -==> Parameters: 
2020-03-31 14:26:08 -此处进行解密+验签+身份验证
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:26:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 14:26:08 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 14:26:08 -==> Parameters: 2309(String), 2309(String), 0(String)
2020-03-31 14:26:08 -此处进行解密+验签+身份验证
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:26:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 14:26:08 -此处进行解密+验签+身份验证
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 14:26:08 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 14:26:08 -==> Parameters: 2309(String), 2309(String)
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 14:26:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 14:26:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 14:26:08 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 14:26:08 -==> Parameters: 2309(String), 2309(String), 1(String)
2020-03-31 14:26:08 -<==      Total: 1
2020-03-31 14:26:08 -耗时 : 278
2020-03-31 14:26:08 -<==      Total: 0
2020-03-31 14:26:08 -耗时 : 157
2020-03-31 14:26:08 -<==      Total: 1
2020-03-31 14:26:08 -耗时 : 103
2020-03-31 14:26:08 -<==      Total: 1
2020-03-31 14:26:08 -耗时 : 97
2020-03-31 14:26:08 -<==      Total: 1
2020-03-31 14:26:08 -耗时 : 339
2020-03-31 15:06:06 -此处进行解密+验签+身份验证
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:06 -此处进行解密+验签+身份验证
2020-03-31 15:06:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-31 15:06:06 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2309 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2309 and cre_month=202003 and pos_type is null 
2020-03-31 15:06:06 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-31 15:06:06 -==> Parameters: 
2020-03-31 15:06:06 -==> Parameters: 2309(String)
2020-03-31 15:06:06 -<==      Total: 1
2020-03-31 15:06:06 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 15:06:06 -==> Parameters: 2309(String)
2020-03-31 15:06:06 -<==      Total: 1
2020-03-31 15:06:06 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2309 and pos_type='epos' 
2020-03-31 15:06:06 -==> Parameters: 
2020-03-31 15:06:06 -此处进行解密+验签+身份验证
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:06 -==> Parameters: 2309(String), 2309(String), 0(String)
2020-03-31 15:06:06 -此处进行解密+验签+身份验证
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:06 -==> Parameters: 2309(String), 2309(String)
2020-03-31 15:06:06 -<==      Total: 0
2020-03-31 15:06:06 -耗时 : 160
2020-03-31 15:06:06 -此处进行解密+验签+身份验证
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:06 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:06 -==> Parameters: 2309(String), 2309(String), 1(String)
2020-03-31 15:06:06 -<==      Total: 1
2020-03-31 15:06:06 -耗时 : 262
2020-03-31 15:06:06 -<==      Total: 1
2020-03-31 15:06:06 -耗时 : 275
2020-03-31 15:06:06 -<==      Total: 1
2020-03-31 15:06:06 -<==      Total: 1
2020-03-31 15:06:06 -耗时 : 57
2020-03-31 15:06:06 -耗时 : 90
2020-03-31 15:06:08 -此处进行解密+验签+身份验证
2020-03-31 15:06:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosDetail
2020-03-31 15:06:08 -==>  Preparing: select t.sn, t.card_settle_price_vip, t.card_settle_price, t.weixin_settle_price, t.zhifubao_settle_price, t.cloud_settle_price, t.single_profit_rate, t.cash_back_rate, t.mer_cap_fee, t1.mer_name, t1.mer_id, t1.name, t1.tel, t1.credit_card_rate, t1.cloud_flash_rate, t1.weixin_rate, t1.zhifubao_rate, t1.act_status, DATE_FORMAT(t1.act_date, '%Y-%m-%d') AS act_date, t1.cash_back_status, t.is_reward from t_user_traditional_pos_info t left join t_sys_traditional_pos_info t1 on t1.sn = t.sn where t.user_id = ? and t.sn = ? 
2020-03-31 15:06:08 -==> Parameters: 426(String), 000006027281889055(String)
2020-03-31 15:06:08 -<==      Total: 1
2020-03-31 15:06:08 -==>  Preparing: select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info where sn=? and isuse=1 and module_type=1 
2020-03-31 15:06:08 -==> Parameters: 000006027281889055(String)
2020-03-31 15:06:08 -<==      Total: 0
2020-03-31 15:06:08 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? 
2020-03-31 15:06:08 -==> Parameters: 000006027281889055(String)
2020-03-31 15:06:08 -<==      Total: 1
2020-03-31 15:06:08 -==>  Preparing: select pos_type from t_sys_traditional_pos_info where sn=? 
2020-03-31 15:06:08 -==> Parameters: 000006027281889055(String)
2020-03-31 15:06:08 -<==      Total: 1
2020-03-31 15:06:08 -==>  Preparing: select cast(performance as char) as performance,cast(num as char) as num FROM t_summary_traditional_pos_trans_all where 1=1 and pos_type is null and sn=? and user_id=? 
2020-03-31 15:06:08 -==> Parameters: 000006027281889055(String), 426(String)
2020-03-31 15:06:08 -<==      Total: 1
2020-03-31 15:06:08 -耗时 : 65
2020-03-31 15:06:28 -此处进行解密+验签+身份验证
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:28 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:28 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:28 -==> Parameters: 2309(String), 2309(String), 1(String)
2020-03-31 15:06:28 -此处进行解密+验签+身份验证
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:28 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:28 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:28 -==> Parameters: 2309(String), 2309(String), 0(String)
2020-03-31 15:06:28 -此处进行解密+验签+身份验证
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:28 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMPosTradeAmountAvg
2020-03-31 15:06:28 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_mpos_benefit_all where user_id=2309 ),2) as char),'0') as avg_performance from t_summary_mpos_trans_month where user_id=2309 and cre_month=202003 
2020-03-31 15:06:28 -==> Parameters: 
2020-03-31 15:06:28 -此处进行解密+验签+身份验证
2020-03-31 15:06:28 -此处进行解密+验签+身份验证
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:28 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-03-31 15:06:28 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadMposInfo
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:28 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:28 -==> Parameters: 2309(String), 2309(String)
2020-03-31 15:06:28 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_mpos_benefit_all where user_id = ? 
2020-03-31 15:06:28 -==> Parameters: 2309(String)
2020-03-31 15:06:28 -<==      Total: 1
2020-03-31 15:06:28 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-31 15:06:28 -==> Parameters: 2309(String)
2020-03-31 15:06:28 -<==      Total: 1
2020-03-31 15:06:28 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_mpos_trans_all where user_id=2309 
2020-03-31 15:06:28 -==> Parameters: 
2020-03-31 15:06:28 -<==      Total: 0
2020-03-31 15:06:28 -<==      Total: 0
2020-03-31 15:06:28 -耗时 : 162
2020-03-31 15:06:28 -<==      Total: 0
2020-03-31 15:06:28 -耗时 : 141
2020-03-31 15:06:28 -耗时 : 183
2020-03-31 15:06:29 -<==      Total: 1
2020-03-31 15:06:29 -耗时 : 374
2020-03-31 15:06:29 -<==      Total: 1
2020-03-31 15:06:29 -耗时 : 429
2020-03-31 15:06:29 -此处进行解密+验签+身份验证
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:29 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:29 -==> Parameters: 2309(String), 2309(String)
2020-03-31 15:06:29 -此处进行解密+验签+身份验证
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-31 15:06:29 -此处进行解密+验签+身份验证
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:29 -此处进行解密+验签+身份验证
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:29 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type='epos' 
2020-03-31 15:06:29 -==> Parameters: 2309(String)
2020-03-31 15:06:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-31 15:06:29 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2309 and pos_type='epos' ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2309 and cre_month=202003 and pos_type='epos' 
2020-03-31 15:06:29 -==> Parameters: 
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:29 -<==      Total: 1
2020-03-31 15:06:29 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-31 15:06:29 -==> Parameters: 2309(String)
2020-03-31 15:06:29 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:29 -==> Parameters: 2309(String), 2309(String), 0(String)
2020-03-31 15:06:29 -<==      Total: 1
2020-03-31 15:06:29 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2309 and pos_type='epos' 
2020-03-31 15:06:29 -==> Parameters: 
2020-03-31 15:06:29 -此处进行解密+验签+身份验证
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:29 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:29 -==> Parameters: 2309(String), 2309(String), 1(String)
2020-03-31 15:06:29 -<==      Total: 0
2020-03-31 15:06:29 -<==      Total: 0
2020-03-31 15:06:29 -耗时 : 117
2020-03-31 15:06:29 -耗时 : 93
2020-03-31 15:06:29 -<==      Total: 0
2020-03-31 15:06:29 -耗时 : 78
2020-03-31 15:06:29 -<==      Total: 1
2020-03-31 15:06:29 -耗时 : 164
2020-03-31 15:06:29 -<==      Total: 1
2020-03-31 15:06:29 -耗时 : 166
2020-03-31 15:06:31 -此处进行解密+验签+身份验证
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:31 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:31 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-31 15:06:31 -==> Parameters: 2309(String)
2020-03-31 15:06:31 -<==      Total: 1
2020-03-31 15:06:31 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 15:06:31 -==> Parameters: 2309(String)
2020-03-31 15:06:31 -<==      Total: 1
2020-03-31 15:06:31 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2309 and pos_type='epos' 
2020-03-31 15:06:31 -==> Parameters: 
2020-03-31 15:06:31 -此处进行解密+验签+身份验证
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:31 -此处进行解密+验签+身份验证
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:31 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:31 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:31 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2309 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2309 and cre_month=202003 and pos_type is null 
2020-03-31 15:06:31 -==> Parameters: 
2020-03-31 15:06:31 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:31 -==> Parameters: 2309(String), 2309(String), 1(String)
2020-03-31 15:06:31 -此处进行解密+验签+身份验证
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:31 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:31 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:31 -==> Parameters: 2309(String), 2309(String)
2020-03-31 15:06:31 -此处进行解密+验签+身份验证
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:31 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2309
2020-03-31 15:06:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2309 , return
2020-03-31 15:06:31 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:31 -==> Parameters: 2309(String), 2309(String), 0(String)
2020-03-31 15:06:31 -<==      Total: 1
2020-03-31 15:06:31 -耗时 : 124
2020-03-31 15:06:31 -<==      Total: 0
2020-03-31 15:06:31 -<==      Total: 1
2020-03-31 15:06:31 -<==      Total: 1
2020-03-31 15:06:31 -耗时 : 97
2020-03-31 15:06:31 -耗时 : 114
2020-03-31 15:06:31 -耗时 : 125
2020-03-31 15:06:31 -<==      Total: 1
2020-03-31 15:06:31 -耗时 : 148
2020-03-31 15:06:37 -此处进行解密+验签+身份验证
2020-03-31 15:06:37 -此处进行解密+验签+身份验证
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:37 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-31 15:06:37 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:06:37 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2555 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2555 and cre_month=202003 and pos_type is null 
2020-03-31 15:06:37 -==> Parameters: 
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:06:37 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-31 15:06:37 -==> Parameters: 2555(String)
2020-03-31 15:06:37 -<==      Total: 1
2020-03-31 15:06:37 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 15:06:37 -==> Parameters: 2555(String)
2020-03-31 15:06:37 -<==      Total: 1
2020-03-31 15:06:37 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2555 and pos_type='epos' 
2020-03-31 15:06:37 -==> Parameters: 
2020-03-31 15:06:37 -此处进行解密+验签+身份验证
2020-03-31 15:06:37 -此处进行解密+验签+身份验证
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:37 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:37 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:06:37 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:37 -==> Parameters: 2555(String), 2555(String)
2020-03-31 15:06:37 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:37 -==> Parameters: 2555(String), 2555(String), 0(String)
2020-03-31 15:06:37 -此处进行解密+验签+身份验证
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:06:37 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:06:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:06:37 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:06:37 -==> Parameters: 2555(String), 2555(String), 1(String)
2020-03-31 15:06:37 -<==      Total: 10
2020-03-31 15:06:37 -<==      Total: 10
2020-03-31 15:06:37 -耗时 : 61
2020-03-31 15:06:37 -耗时 : 61
2020-03-31 15:06:37 -<==      Total: 1
2020-03-31 15:06:37 -耗时 : 169
2020-03-31 15:06:37 -<==      Total: 1
2020-03-31 15:06:37 -耗时 : 170
2020-03-31 15:06:37 -<==      Total: 3
2020-03-31 15:06:37 -耗时 : 87
2020-03-31 15:07:31 -此处进行解密+验签+身份验证
2020-03-31 15:07:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:31 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:07:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:31 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.id < ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:07:31 -==> Parameters: 2555(String), 2555(String), 23761(String)
2020-03-31 15:07:31 -<==      Total: 10
2020-03-31 15:07:31 -耗时 : 8
2020-03-31 15:07:36 -此处进行解密+验签+身份验证
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:36 -此处进行解密+验签+身份验证
2020-03-31 15:07:36 -此处进行解密+验签+身份验证
2020-03-31 15:07:36 -此处进行解密+验签+身份验证
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:36 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:36 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadMposInfo
2020-03-31 15:07:36 -此处进行解密+验签+身份验证
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:36 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:07:36 -==> Parameters: 2555(String), 2555(String), 1(String)
2020-03-31 15:07:36 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:36 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMPosTradeAmountAvg
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:36 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_mpos_benefit_all where user_id=2555 ),2) as char),'0') as avg_performance from t_summary_mpos_trans_month where user_id=2555 and cre_month=202003 
2020-03-31 15:07:36 -==> Parameters: 
2020-03-31 15:07:36 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_mpos_benefit_all where user_id = ? 
2020-03-31 15:07:36 -==> Parameters: 2555(String)
2020-03-31 15:07:36 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-03-31 15:07:36 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 15:07:36 -==> Parameters: 2555(String), 2555(String), 0(String)
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:36 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 15:07:36 -==> Parameters: 2555(String), 2555(String)
2020-03-31 15:07:36 -<==      Total: 1
2020-03-31 15:07:36 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-31 15:07:36 -==> Parameters: 2555(String)
2020-03-31 15:07:36 -<==      Total: 1
2020-03-31 15:07:36 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_mpos_trans_all where user_id=2555 
2020-03-31 15:07:36 -==> Parameters: 
2020-03-31 15:07:36 -<==      Total: 0
2020-03-31 15:07:36 -<==      Total: 0
2020-03-31 15:07:36 -<==      Total: 0
2020-03-31 15:07:36 -耗时 : 359
2020-03-31 15:07:36 -耗时 : 361
2020-03-31 15:07:36 -耗时 : 366
2020-03-31 15:07:37 -<==      Total: 1
2020-03-31 15:07:37 -耗时 : 541
2020-03-31 15:07:37 -<==      Total: 1
2020-03-31 15:07:37 -耗时 : 585
2020-03-31 15:07:38 -此处进行解密+验签+身份验证
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:38 -此处进行解密+验签+身份验证
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:38 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-31 15:07:38 -==> Parameters: 2555(String)
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:38 -此处进行解密+验签+身份验证
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:38 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-31 15:07:38 -==> Parameters: 2555(String), 2555(String), 1(String)
2020-03-31 15:07:38 -<==      Total: 1
2020-03-31 15:07:38 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-31 15:07:38 -==> Parameters: 2555(String)
2020-03-31 15:07:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-31 15:07:38 -<==      Total: 1
2020-03-31 15:07:38 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2555 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2555 and cre_month=202003 and pos_type is null 
2020-03-31 15:07:38 -==> Parameters: 
2020-03-31 15:07:38 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2555 and pos_type='epos' 
2020-03-31 15:07:38 -==> Parameters: 
2020-03-31 15:07:38 -此处进行解密+验签+身份验证
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:38 -此处进行解密+验签+身份验证
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-31 15:07:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:07:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2555
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2555 , return
2020-03-31 15:07:38 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-31 15:07:38 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-31 15:07:38 -==> Parameters: 2555(String), 2555(String)
2020-03-31 15:07:38 -==> Parameters: 2555(String), 2555(String), 0(String)
2020-03-31 15:07:38 -<==      Total: 10
2020-03-31 15:07:38 -<==      Total: 10
2020-03-31 15:07:38 -耗时 : 15
2020-03-31 15:07:38 -耗时 : 15
2020-03-31 15:07:38 -<==      Total: 3
2020-03-31 15:07:38 -耗时 : 136
2020-03-31 15:07:38 -<==      Total: 1
2020-03-31 15:07:38 -耗时 : 158
2020-03-31 15:07:38 -<==      Total: 1
2020-03-31 15:07:38 -耗时 : 157
