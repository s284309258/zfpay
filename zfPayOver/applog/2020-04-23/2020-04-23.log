2020-04-23 15:18:56 -Starting LongEcologicalApplication on PC-201905161910 with PID 12524 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-23 15:18:56 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-23 15:18:56 -No active profile set, falling back to default profiles: default
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:18:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-23 15:18:57 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-23 15:18:57 -Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-04-23 15:18:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-23 15:18:57 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-23 15:18:57 -Finished Spring Data repository scanning in 43ms. Found 0 repository interfaces.
2020-04-23 15:18:58 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$2d4812d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-23 15:18:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$27cbf777] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-23 15:18:59 -Tomcat initialized with port(s): 8080 (http)
2020-04-23 15:18:59 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-23 15:18:59 -Starting service [Tomcat]
2020-04-23 15:18:59 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-23 15:18:59 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-23 15:18:59 -Initializing Spring embedded WebApplicationContext
2020-04-23 15:18:59 -Root WebApplicationContext: initialization completed in 2925 ms
2020-04-23 15:18:59 -Filter xssFilter was not registered (disabled)
2020-04-23 15:19:00 -HikariPool-1 - Starting...
2020-04-23 15:19:01 -HikariPool-1 - Start completed.
2020-04-23 15:19:01 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-23 15:19:01 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-23 15:19:01 -HHH000206: hibernate.properties not found
2020-04-23 15:19:01 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-23 15:19:02 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-23 15:19:02 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-23 15:19:02 -Using default implementation for ThreadExecutor
2020-04-23 15:19:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-23 15:19:03 -Quartz Scheduler v.2.3.0 created.
2020-04-23 15:19:03 -RAMJobStore initialized.
2020-04-23 15:19:03 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-23 15:19:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-23 15:19:03 -Quartz scheduler version: 2.3.0
2020-04-23 15:19:03 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1a8b22b5
2020-04-23 15:19:03 -STAET TaskExecutorConfig
2020-04-23 15:19:03 -Initializing ExecutorService
2020-04-23 15:19:03 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-23 15:19:04 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-23 15:19:04 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-23 15:19:04 -Initializing ExecutorService 'taskScheduler'
2020-04-23 15:19:05 -Starting Quartz Scheduler now
2020-04-23 15:19:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-23 15:19:05 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-23 15:19:05 -Using a shared selector for servlet write/read
2020-04-23 15:19:05 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-23 15:19:05 -Started LongEcologicalApplication in 9.379 seconds (JVM running for 11.999)
2020-04-23 15:24:40 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-23 15:24:40 -Initializing Servlet 'dispatcherServlet'
2020-04-23 15:24:40 -Completed initialization in 14 ms
2020-04-23 15:24:40 -此处进行解密+验签+身份验证
2020-04-23 15:24:40 -此处进行解密+验签+身份验证
2020-04-23 15:24:40 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-04-23 15:24:40 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-04-23 15:24:40 -Starting without optional epoll library
2020-04-23 15:24:40 -Starting without optional kqueue library
2020-04-23 15:24:41 -解密：
2020-04-23 15:24:41 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-23 15:24:41 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-23 15:24:41 -==> Parameters: 04(String), 04(String)
2020-04-23 15:24:41 -<==      Total: 1
2020-04-23 15:24:41 -耗时 : 284
2020-04-23 15:24:41 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-04-23 15:24:41 -耗时 : 947
2020-04-23 15:24:41 -此处进行解密+验签+身份验证
2020-04-23 15:24:41 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"7FE96BEA8898A0C8BFE2CABCC88DB066","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"181|7WZ1I5S6I2Y2WDX7PB0Z0WLZEI8MXNQG"}
2020-04-23 15:24:41 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:24:41 -token值=======181|7WZ1I5S6I2Y2WDX7PB0Z0WLZEI8MXNQG
2020-04-23 15:24:41 -耗时 : 7
2020-04-23 15:25:16 -此处进行解密+验签+身份验证
2020-04-23 15:25:16 -解密：{"version_no":"","login_password":"8A6F2805B4515AC12058E79E66539BE9","login_type":"account","sign":"3E72A9D20D793E544591F970E6176C23","device_no":"1.1.4","device_type":"android","sys_user_account":"13322990711"}
2020-04-23 15:25:16 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:25:16 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:25:16 -==> Parameters: 13322990711(String)
2020-04-23 15:25:16 -<==      Total: 1
2020-04-23 15:25:16 -耗时 : 140
2020-04-23 15:25:26 -此处进行解密+验签+身份验证
2020-04-23 15:25:26 -解密：{"version_no":"","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","login_type":"account","sign":"41AB57816D026EC0FB664984B27C4C7C","device_no":"1.1.4","device_type":"android","sys_user_account":"13322990711"}
2020-04-23 15:25:26 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:25:26 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:25:26 -==> Parameters: 13322990711(String)
2020-04-23 15:25:26 -<==      Total: 1
2020-04-23 15:25:26 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-04-23 15:25:26 -==> Parameters: android(String), 1.1.4(String), (String), null, 192.168.191.1(String), 20200423(String), 152526(String), 181(Integer)
2020-04-23 15:25:26 -<==    Updates: 1
2020-04-23 15:25:26 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-23 15:25:26 -==> Parameters: 26(String)
2020-04-23 15:25:26 -<==      Total: 1
2020-04-23 15:25:26 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 15:25:26 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 15:25:26 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 15:25:26 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 15:25:26 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 15:25:26 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 15:25:26 -耗时 : 622
2020-04-23 15:25:26 -此处进行解密+验签+身份验证
2020-04-23 15:25:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:26 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:25:27 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:25:27 -==> Parameters: 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -耗时 : 10
2020-04-23 15:25:27 -此处进行解密+验签+身份验证
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-23 15:25:27 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-23 15:25:27 -==> Parameters: 181(String)
2020-04-23 15:25:27 -此处进行解密+验签+身份验证
2020-04-23 15:25:27 -解密：
2020-04-23 15:25:27 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-23 15:25:27 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-23 15:25:27 -==> Parameters: 01(String), 01(String)
2020-04-23 15:25:27 -此处进行解密+验签+身份验证
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:27 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-23 15:25:27 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-23 15:25:27 -==> Parameters: 
2020-04-23 15:25:27 -此处进行解密+验签+身份验证
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:27 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:25:27 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:25:27 -==> Parameters: 181(String)
2020-04-23 15:25:27 -<==      Total: 4
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -耗时 : 12
2020-04-23 15:25:27 -耗时 : 71
2020-04-23 15:25:27 -此处进行解密+验签+身份验证
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:25:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:25:27 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:27 -此处进行解密+验签+身份验证
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:25:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:25:27 -<==      Total: 3
2020-04-23 15:25:27 -耗时 : 77
2020-04-23 15:25:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:25:27 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 2
2020-04-23 15:25:27 -耗时 : 135
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:25:27 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 2
2020-04-23 15:25:27 -<==      Total: 2
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:25:27 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:25:27 -<==    Updates: 2
2020-04-23 15:25:27 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:25:27 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:27 -<==    Updates: 2
2020-04-23 15:25:27 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:25:27 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:25:27 -<==    Updates: 1
2020-04-23 15:25:27 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:25:27 -==> Parameters: 
2020-04-23 15:25:27 -<==    Updates: 1
2020-04-23 15:25:27 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:25:27 -==> Parameters: 
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:25:27 -<==    Updates: 1
2020-04-23 15:25:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:25:27 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:25:27 -<==    Updates: 1
2020-04-23 15:25:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:25:27 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:27 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:25:27 -<==    Updates: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -耗时 : 193
2020-04-23 15:25:27 -<==    Updates: 1
2020-04-23 15:25:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:27 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:25:27 -<==      Total: 1
2020-04-23 15:25:27 -耗时 : 239
2020-04-23 15:25:31 -此处进行解密+验签+身份验证
2020-04-23 15:25:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:25:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:25:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:25:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:25:31 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:31 -此处进行解密+验签+身份验证
2020-04-23 15:25:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:25:31 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:25:31 -==> Parameters: 181(String)
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -耗时 : 42
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:31 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:25:31 -<==      Total: 2
2020-04-23 15:25:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:31 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:25:31 -<==    Updates: 2
2020-04-23 15:25:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:25:31 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:31 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:31 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:25:31 -<==    Updates: 1
2020-04-23 15:25:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:25:31 -==> Parameters: 
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:31 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:31 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:25:31 -<==    Updates: 1
2020-04-23 15:25:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:25:31 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:31 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:25:31 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:25:31 -<==    Updates: 1
2020-04-23 15:25:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:25:31 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:25:31 -<==      Total: 1
2020-04-23 15:25:31 -耗时 : 126
2020-04-23 15:25:39 -此处进行解密+验签+身份验证
2020-04-23 15:25:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:40 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-04-23 15:25:40 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-23 15:25:40 -==> Parameters: 202004(String), 181(String)
2020-04-23 15:25:40 -此处进行解密+验签+身份验证
2020-04-23 15:25:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:40 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-04-23 15:25:40 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-04-23 15:25:40 -==> Parameters: 181(String)
2020-04-23 15:25:40 -<==      Total: 1
2020-04-23 15:25:40 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-04-23 15:25:40 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:40 -<==      Total: 1
2020-04-23 15:25:40 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-04-23 15:25:40 -==> Parameters: 181(String)
2020-04-23 15:25:40 -<==      Total: 0
2020-04-23 15:25:40 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-23 15:25:40 -==> Parameters: 202004(String), 181(String)
2020-04-23 15:25:40 -<==      Total: 1
2020-04-23 15:25:40 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-04-23 15:25:40 -==> Parameters: 181(String)
2020-04-23 15:25:40 -<==      Total: 0
2020-04-23 15:25:40 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-23 15:25:40 -==> Parameters: 202004(String), 181(String)
2020-04-23 15:25:40 -<==      Total: 1
2020-04-23 15:25:40 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-04-23 15:25:40 -==> Parameters: 181(String)
2020-04-23 15:25:40 -<==      Total: 0
2020-04-23 15:25:40 -耗时 : 168
2020-04-23 15:25:41 -<==      Total: 1
2020-04-23 15:25:41 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-04-23 15:25:41 -==> Parameters: 181(String), 181(String)
2020-04-23 15:25:41 -<==      Total: 1
2020-04-23 15:25:45 -耗时 : 5546
2020-04-23 15:25:52 -此处进行解密+验签+身份验证
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:52 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-04-23 15:25:52 -此处进行解密+验签+身份验证
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:52 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-04-23 15:25:52 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-23 15:25:52 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-23 15:25:52 -==> Parameters: 181(String), 20200423(String)
2020-04-23 15:25:52 -==> Parameters: 181(String), 202004(String)
2020-04-23 15:25:52 -<==      Total: 0
2020-04-23 15:25:52 -耗时 : 31
2020-04-23 15:25:52 -<==      Total: 1
2020-04-23 15:25:52 -耗时 : 87
2020-04-23 15:25:52 -此处进行解密+验签+身份验证
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:52 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-04-23 15:25:52 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-23 15:25:52 -==> Parameters: 181(String), 202004(String)
2020-04-23 15:25:52 -<==      Total: 1
2020-04-23 15:25:52 -耗时 : 2
2020-04-23 15:25:52 -此处进行解密+验签+身份验证
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:52 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-04-23 15:25:52 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-23 15:25:52 -==> Parameters: 181(String), 20200423(String)
2020-04-23 15:25:52 -<==      Total: 0
2020-04-23 15:25:52 -耗时 : 3
2020-04-23 15:25:57 -此处进行解密+验签+身份验证
2020-04-23 15:25:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:25:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:25:57 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosList
2020-04-23 15:26:06 -==>  Preparing: SELECT t1.date, cast(IFNULL(t2.agency_performance,0.00) as char) as performance, cast(IFNULL(t2.agency_act_num,0) as char) as act_num, cast(IFNULL((t2.under_num - t2.refer_num),0) as char) as user_num from ( SELECT @num :=@num - 1, date_format( adddate(str_to_date(?,'%Y%m%d'), INTERVAL @num MONTH), '%Y%m' ) AS date FROM t_sys_assist_query, (SELECT @num := 1) t) t1 left join t_summary_user_traditional_pos_benefit_month t2 on t1.date = t2.cre_month and t2.user_id = ? and t2.pos_type is null order by t1.date 
2020-04-23 15:26:06 -==> Parameters: 20200401(String), 181(String)
2020-04-23 15:26:06 -<==      Total: 7
2020-04-23 15:26:06 -耗时 : 8871
2020-04-23 15:26:45 -此处进行解密+验签+身份验证
2020-04-23 15:26:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:26:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:26:45 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosList
2020-04-23 15:26:48 -==>  Preparing: SELECT t1.date, cast(IFNULL(t2.agency_performance,0.00) as char) as performance, cast(IFNULL(t2.agency_act_num,0) as char) as act_num, cast(IFNULL((t2.under_num - t2.refer_num),0) as char) as user_num from ( SELECT @num :=@num - 1, date_format( adddate(str_to_date(?,'%Y%m%d'), INTERVAL @num MONTH), '%Y%m' ) AS date FROM t_sys_assist_query, (SELECT @num := 1) t) t1 left join t_summary_user_traditional_pos_benefit_month t2 on t1.date = t2.cre_month and t2.user_id = ? and t2.pos_type is null order by t1.date 
2020-04-23 15:26:48 -==> Parameters: 20200401(String), 181(String)
2020-04-23 15:26:48 -<==      Total: 7
2020-04-23 15:26:48 -耗时 : 3010
2020-04-23 15:27:05 -此处进行解密+验签+身份验证
2020-04-23 15:27:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:27:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:27:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:27:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:05 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:05 -此处进行解密+验签+身份验证
2020-04-23 15:27:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:05 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:27:05 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:27:05 -==> Parameters: 181(String)
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -耗时 : 4
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:05 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:27:05 -<==      Total: 2
2020-04-23 15:27:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:05 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:27:05 -<==    Updates: 2
2020-04-23 15:27:05 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:27:05 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:05 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:05 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:27:05 -<==    Updates: 1
2020-04-23 15:27:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:27:05 -==> Parameters: 
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:05 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:05 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:27:05 -<==    Updates: 1
2020-04-23 15:27:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:05 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:05 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:05 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:27:05 -<==    Updates: 1
2020-04-23 15:27:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:05 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:27:05 -<==      Total: 1
2020-04-23 15:27:05 -耗时 : 121
2020-04-23 15:27:06 -此处进行解密+验签+身份验证
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyMposDetail
2020-04-23 15:27:06 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-04-23 15:27:06 -==> Parameters: 181(String), 202004(String)
2020-04-23 15:27:06 -<==      Total: 0
2020-04-23 15:27:06 -耗时 : 11
2020-04-23 15:27:06 -此处进行解密+验签+身份验证
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyMposDetail
2020-04-23 15:27:06 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-04-23 15:27:06 -==> Parameters: 181(String), 20200423(String)
2020-04-23 15:27:06 -<==      Total: 0
2020-04-23 15:27:06 -耗时 : 3
2020-04-23 15:27:06 -此处进行解密+验签+身份验证
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:06 -此处进行解密+验签+身份验证
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantMposDetail
2020-04-23 15:27:06 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-04-23 15:27:06 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantMposDetail
2020-04-23 15:27:06 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-04-23 15:27:06 -==> Parameters: 181(String), 20200423(String)
2020-04-23 15:27:06 -==> Parameters: 181(String), 202004(String)
2020-04-23 15:27:06 -<==      Total: 0
2020-04-23 15:27:06 -耗时 : 1
2020-04-23 15:27:07 -<==      Total: 0
2020-04-23 15:27:07 -耗时 : 18
2020-04-23 15:27:10 -此处进行解密+验签+身份验证
2020-04-23 15:27:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:27:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:27:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:27:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:10 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:10 -此处进行解密+验签+身份验证
2020-04-23 15:27:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:27:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:27:10 -==> Parameters: 181(String)
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -耗时 : 1
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:10 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:27:10 -<==      Total: 2
2020-04-23 15:27:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:10 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:27:10 -<==    Updates: 2
2020-04-23 15:27:10 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:27:10 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:10 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:10 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:27:10 -<==    Updates: 1
2020-04-23 15:27:10 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:27:10 -==> Parameters: 
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:10 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:10 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:27:10 -<==    Updates: 1
2020-04-23 15:27:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:10 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:10 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:10 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:27:10 -<==    Updates: 1
2020-04-23 15:27:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:10 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:27:10 -<==      Total: 1
2020-04-23 15:27:10 -耗时 : 95
2020-04-23 15:27:14 -此处进行解密+验签+身份验证
2020-04-23 15:27:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:14 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:27:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:27:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:27:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:14 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:14 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 2
2020-04-23 15:27:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:14 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:27:14 -<==    Updates: 2
2020-04-23 15:27:14 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:27:14 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:14 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:14 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:27:14 -<==    Updates: 1
2020-04-23 15:27:14 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:27:14 -==> Parameters: 
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:14 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:14 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:27:14 -<==    Updates: 1
2020-04-23 15:27:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:14 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:14 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:14 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:27:14 -<==    Updates: 1
2020-04-23 15:27:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:14 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:27:14 -<==      Total: 1
2020-04-23 15:27:14 -耗时 : 88
2020-04-23 15:27:17 -此处进行解密+验签+身份验证
2020-04-23 15:27:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryMposList
2020-04-23 15:27:17 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND del='0' 
2020-04-23 15:27:17 -==> Parameters: 181(String)
2020-04-23 15:27:17 -此处进行解密+验签+身份验证
2020-04-23 15:27:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:17 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-04-23 15:27:17 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-04-23 15:27:17 -==> Parameters: 181(String)
2020-04-23 15:27:17 -<==      Total: 1
2020-04-23 15:27:17 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-04-23 15:27:17 -==> Parameters: 181(String), 181(String), 202004(String)
2020-04-23 15:27:17 -<==      Total: 1
2020-04-23 15:27:17 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_mpos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-04-23 15:27:17 -==> Parameters: 181(String), 181(String), 202004(String)
2020-04-23 15:27:18 -<==      Total: 1
2020-04-23 15:27:18 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-04-23 15:27:18 -==> Parameters: 181(String), 181(String), 20200324(String), 20200423(String), 181(String)
2020-04-23 15:27:18 -<==      Total: 1
2020-04-23 15:27:18 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-04-23 15:27:18 -==> Parameters: 181(String), 181(String), 20200324(String), 20200423(String), 181(String)
2020-04-23 15:27:19 -<==      Total: 1
2020-04-23 15:27:19 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-04-23 15:27:19 -==> Parameters: 181(String), 20200223(String), 181(String), 20200223(String), 20200423(String), 181(String)
2020-04-23 15:27:20 -<==      Total: 1
2020-04-23 15:27:20 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-04-23 15:27:20 -==> Parameters: 181(String)
2020-04-23 15:27:20 -<==      Total: 1
2020-04-23 15:27:20 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-04-23 15:27:20 -==> Parameters: 181(String), 20200223(String), 181(String), 20200223(String), 20200423(String), 181(String)
2020-04-23 15:27:20 -<==      Total: 1
2020-04-23 15:27:20 -耗时 : 2896
2020-04-23 15:27:21 -<==      Total: 1
2020-04-23 15:27:21 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='02' 
2020-04-23 15:27:21 -==> Parameters: 181(String)
2020-04-23 15:27:21 -<==      Total: 1
2020-04-23 15:27:21 -耗时 : 3960
2020-04-23 15:27:32 -此处进行解密+验签+身份验证
2020-04-23 15:27:32 -此处进行解密+验签+身份验证
2020-04-23 15:27:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:32 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:27:32 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:27:32 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:27:32 -==> Parameters: 181(String)
2020-04-23 15:27:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:27:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:27:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:32 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -耗时 : 23
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:32 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 2
2020-04-23 15:27:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:27:32 -<==    Updates: 2
2020-04-23 15:27:32 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:27:32 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:32 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:32 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:27:32 -<==    Updates: 1
2020-04-23 15:27:32 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:27:32 -==> Parameters: 
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:32 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:32 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:27:32 -<==    Updates: 1
2020-04-23 15:27:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:27:32 -==> Parameters: 181(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:32 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:27:32 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:27:32 -<==    Updates: 1
2020-04-23 15:27:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:27:32 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:27:32 -<==      Total: 1
2020-04-23 15:27:32 -耗时 : 183
2020-04-23 15:27:40 -此处进行解密+验签+身份验证
2020-04-23 15:27:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:40 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-04-23 15:27:40 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-23 15:27:40 -==> Parameters: 181(String), 20200423(String)
2020-04-23 15:27:40 -<==      Total: 0
2020-04-23 15:27:40 -耗时 : 4
2020-04-23 15:27:40 -此处进行解密+验签+身份验证
2020-04-23 15:27:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:40 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-04-23 15:27:40 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-23 15:27:40 -==> Parameters: 181(String), 202004(String)
2020-04-23 15:27:40 -<==      Total: 1
2020-04-23 15:27:40 -耗时 : 4
2020-04-23 15:27:41 -此处进行解密+验签+身份验证
2020-04-23 15:27:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:41 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-04-23 15:27:41 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-23 15:27:41 -==> Parameters: 181(String), 202004(String)
2020-04-23 15:27:41 -<==      Total: 1
2020-04-23 15:27:41 -耗时 : 2
2020-04-23 15:27:41 -此处进行解密+验签+身份验证
2020-04-23 15:27:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:41 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-04-23 15:27:41 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-23 15:27:41 -==> Parameters: 181(String), 20200423(String)
2020-04-23 15:27:41 -<==      Total: 0
2020-04-23 15:27:41 -耗时 : 3
2020-04-23 15:27:50 -此处进行解密+验签+身份验证
2020-04-23 15:27:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:27:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:27:50 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosList
2020-04-23 15:27:50 -==>  Preparing: SELECT t1.date, cast(IFNULL(t2.agency_performance,0.00) as char) as performance, cast(IFNULL(t2.agency_act_num,0) as char) as act_num, cast(IFNULL((t2.under_num - t2.refer_num),0) as char) as user_num from ( SELECT @num :=@num - 1, date_format( adddate(str_to_date(?,'%Y%m%d'), INTERVAL @num MONTH), '%Y%m' ) AS date FROM t_sys_assist_query, (SELECT @num := 1) t) t1 left join t_summary_user_traditional_pos_benefit_month t2 on t1.date = t2.cre_month and t2.user_id = ? and t2.pos_type is null order by t1.date 
2020-04-23 15:27:50 -==> Parameters: 20200401(String), 181(String)
2020-04-23 15:27:50 -<==      Total: 7
2020-04-23 15:27:50 -耗时 : 33
2020-04-23 15:42:12 -此处进行解密+验签+身份验证
2020-04-23 15:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:42:12 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 15:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 15:42:12 -此处进行解密+验签+身份验证
2020-04-23 15:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 15:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 15:42:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:42:12 -==> Parameters: 181(String), 181(String)
2020-04-23 15:42:12 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:42:12 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:42:12 -==> Parameters: 181(String)
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -耗时 : 27
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:42:12 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 15:42:12 -<==      Total: 2
2020-04-23 15:42:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:42:12 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 15:42:12 -<==    Updates: 2
2020-04-23 15:42:12 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:42:12 -==> Parameters: 181(String), 181(String)
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:42:12 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:42:12 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 15:42:12 -<==    Updates: 1
2020-04-23 15:42:12 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:42:12 -==> Parameters: 
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:42:12 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:42:12 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 15:42:12 -<==    Updates: 1
2020-04-23 15:42:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:42:12 -==> Parameters: 181(String), 181(String)
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:42:12 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:42:12 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 15:42:12 -<==    Updates: 1
2020-04-23 15:42:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:42:12 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 15:42:12 -<==      Total: 1
2020-04-23 15:42:12 -耗时 : 107
2020-04-23 15:42:17 -此处进行解密+验签+身份验证
2020-04-23 15:42:17 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-04-23 15:42:17 -token值=======181|XDF1L2CRNL0WF22T34SBEXPOO0AT77B2
2020-04-23 15:42:17 -==>  Preparing: update t_user_info set device_token=? where id=? 
2020-04-23 15:42:17 -==> Parameters: null, 181(String)
2020-04-23 15:42:17 -<==    Updates: 1
2020-04-23 15:42:17 -耗时 : 54
2020-04-23 15:42:32 -此处进行解密+验签+身份验证
2020-04-23 15:42:32 -解密：{"version_no":"","login_password":"8A6F2805B4515AC12058E79E66539BE9","login_type":"account","sign":"496B00FF7A90D01B74F939AB594D6A57","device_no":"1.1.4","device_type":"android","sys_user_account":"18124242084"}
2020-04-23 15:42:32 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:42:32 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:42:32 -==> Parameters: 18124242084(String)
2020-04-23 15:42:32 -<==      Total: 1
2020-04-23 15:42:32 -耗时 : 57
2020-04-23 15:42:42 -此处进行解密+验签+身份验证
2020-04-23 15:42:42 -解密：{"version_no":"","login_password":"8A6F2805B4515AC12058E79E66539BE9","login_type":"account","sign":"496B00FF7A90D01B74F939AB594D6A57","device_no":"1.1.4","device_type":"android","sys_user_account":"18124242084"}
2020-04-23 15:42:42 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:42:42 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:42:42 -==> Parameters: 18124242084(String)
2020-04-23 15:42:42 -<==      Total: 1
2020-04-23 15:42:42 -耗时 : 8
2020-04-23 15:42:50 -此处进行解密+验签+身份验证
2020-04-23 15:42:50 -解密：{"version_no":"","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","login_type":"account","sign":"3785A2BB7DB5ECEA029D81F01D066FAB","device_no":"1.1.4","device_type":"android","sys_user_account":"18124242084"}
2020-04-23 15:42:50 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:42:50 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:42:50 -==> Parameters: 18124242084(String)
2020-04-23 15:42:50 -<==      Total: 1
2020-04-23 15:42:50 -耗时 : 5
2020-04-23 15:42:57 -此处进行解密+验签+身份验证
2020-04-23 15:42:57 -解密：{"version_no":"","login_password":"3A300C48B47B714D9821DC473304AA84","login_type":"account","sign":"F6F8392040DD9FB554D44FDF66F72DDD","device_no":"1.1.4","device_type":"android","sys_user_account":"18124242084"}
2020-04-23 15:42:57 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:42:57 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:42:57 -==> Parameters: 18124242084(String)
2020-04-23 15:42:57 -<==      Total: 1
2020-04-23 15:42:57 -耗时 : 4
2020-04-23 15:43:04 -此处进行解密+验签+身份验证
2020-04-23 15:43:04 -解密：{"version_no":"","login_password":"58CF703F664397EC4F0AC359B84B565C","login_type":"account","sign":"8913E4A01EA464801FECAEC76CE3BC77","device_no":"1.1.4","device_type":"android","sys_user_account":"18124242084"}
2020-04-23 15:43:04 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:43:04 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:43:04 -==> Parameters: 18124242084(String)
2020-04-23 15:43:04 -<==      Total: 1
2020-04-23 15:43:04 -耗时 : 5
2020-04-23 15:43:12 -此处进行解密+验签+身份验证
2020-04-23 15:43:12 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-04-23 15:43:13 -耗时 : 859
2020-04-23 15:43:58 -此处进行解密+验签+身份验证
2020-04-23 15:43:58 -解密：{"bus_type":"FrontRegister","img_code":"R8CU","sign":"118E75F015466CB23CA5825032098F00","img_id":"20200423154312865358797","sys_user_account":"18124242424"}
2020-04-23 15:43:58 -请求地址 : http://192.168.191.1:8080/api/common/smsCode/sendSmsCodeOnly
2020-04-23 15:43:58 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:43:58 -==> Parameters: 18124242424(String)
2020-04-23 15:43:58 -<==      Total: 0
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendHourLimit
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendHourLimit , return
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDayLimit
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDayLimit , return
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDuration
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDuration , return
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifyInvalidDuration
2020-04-23 15:43:58 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifyInvalidDuration , return
2020-04-23 15:43:58 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-04-23 15:43:58 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 18124242424(String)
2020-04-23 15:43:58 -<==      Total: 0
2020-04-23 15:43:58 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-04-23 15:43:58 -==> Parameters: SystemFront(String), 18124242424(String), 2020-04-23 15:43:58(String), 1(Integer)
2020-04-23 15:43:58 -<==      Total: 1
2020-04-23 15:43:58 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-04-23 15:43:58 -==> Parameters: SystemFront(String), 18124242424(String), 2020-04-23 15:43:58(String), 24(Integer)
2020-04-23 15:43:58 -<==      Total: 1
2020-04-23 15:43:58 -==>  Preparing: insert into t_verify_record ( system_type, bus_type, acc_type, account, code, create_time, send_time, invalid_time, msg_template ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-04-23 15:43:58 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 18124242424(String), 838220(String), 2020-04-23 15:43:58(String), 2020-04-23 15:43:58(String), 2020-04-23 15:58:58(String), lcw(String)
2020-04-23 15:43:58 -<==    Updates: 1
2020-04-23 15:43:58 -耗时 : 268
2020-04-23 15:44:18 -此处进行解密+验签+身份验证
2020-04-23 15:44:18 -解密：{"version_no":"1.1.4","login_password":"8A6F2805B4515AC12058E79E66539BE9","sms_code":"838220","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","sign":"42C7103E3E9C8F566412203DE7275037","device_type":"android","invite_code":"13322990711","sys_user_account":"18124242424"}
2020-04-23 15:44:18 -请求地址 : http://192.168.191.1:8080/api/user/login/userRegister
2020-04-23 15:44:18 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:44:18 -==> Parameters: 18124242424(String)
2020-04-23 15:44:18 -<==      Total: 0
2020-04-23 15:44:18 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 15:44:18 -==> Parameters: 13322990711(String)
2020-04-23 15:44:18 -<==      Total: 1
2020-04-23 15:44:18 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-04-23 15:44:18 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 18124242424(String)
2020-04-23 15:44:18 -<==      Total: 1
2020-04-23 15:44:18 -==>  Preparing: update t_verify_record SET `id` = ?, `system_type` = ?, `bus_type` = ?, `acc_type` = ?, `account` = ?, `code` = ?, `status` = ?, `create_time` = ?, `send_time` = ?, `invalid_time` = ?, `verify_time` = ? where id = ? 
2020-04-23 15:44:18 -==> Parameters: 23(Integer), SystemFront(String), FrontRegister(String), 1(String), 18124242424(String), 838220(String), 1(String), 2020-04-23 15:43:58(String), 2020-04-23 15:43:58(String), 2020-04-23 15:58:58(String), 2020-04-23 15:44:18(String), 23(Integer)
2020-04-23 15:44:18 -<==    Updates: 1
2020-04-23 15:44:18 -==>  Preparing: UPDATE t_user_info SET under_num=under_num+1, up_date=?, up_time=? WHERE find_in_set(id,?) 
2020-04-23 15:44:18 -==> Parameters: 20200423(String), 154418(String), 181(String)
2020-04-23 15:44:18 -<==    Updates: 1
2020-04-23 15:44:18 -==>  Preparing: update t_user_info set referer_num=referer_num+1, up_date=?, up_time=? where id=? 
2020-04-23 15:44:18 -==> Parameters: 20200423(String), 154418(String), 181(String)
2020-04-23 15:44:18 -<==    Updates: 1
2020-04-23 15:44:18 -==>  Preparing: insert into t_user_info ( user_tel,login_password,pay_password,head_photo,referer_id,manager_id,algebra,parent_chain,device_type,device_no,version_no,cre_date,cre_time) values ( ?,?,?,?,?,?, ?,?,?,?,?,?,?) 
2020-04-23 15:44:18 -==> Parameters: 18124242424(String), 4d870e33b7526f90c659e0cf58d29e38(String), b9abef104daf1d026e3b555a644c8491(String), defaultHeadPhoto.png(String), 181(String), 26(String), 2(Integer), 181(String), android(String), null, 1.1.4(String), 20200423(String), 154418(String)
2020-04-23 15:44:18 -<==    Updates: 1
2020-04-23 15:44:18 -耗时 : 136
2020-04-23 15:44:18 -此处进行解密+验签+身份验证
2020-04-23 15:44:18 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"59DB493E43C50772249765FFC03D7B36","device_no":"1.1.4","device_type":"android","sys_user_account":"","token":"2717|AEXNKWSAN32SFLMBEFGMJ7OXKDSSMN2D"}
2020-04-23 15:44:18 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 15:44:18 -token值=======2717|AEXNKWSAN32SFLMBEFGMJ7OXKDSSMN2D
2020-04-23 15:44:18 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-04-23 15:44:18 -==> Parameters: 2717(String)
2020-04-23 15:44:18 -<==      Total: 1
2020-04-23 15:44:18 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-23 15:44:18 -==> Parameters: 26(String)
2020-04-23 15:44:18 -<==      Total: 1
2020-04-23 15:44:18 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 15:44:18 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 15:44:18 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 15:44:18 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 15:44:18 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 15:44:18 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 15:44:18 -耗时 : 18
2020-04-23 15:44:19 -此处进行解密+验签+身份验证
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:44:19 -==>  Preparing: select * from t_user_frozen where user_id = ? 
2020-04-23 15:44:19 -==> Parameters: 2717(String)
2020-04-23 15:44:19 -<==      Total: 0
2020-04-23 15:44:19 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) proceed,save result to cache,redisKey:zfpay_user_freeze_2717,save content:null
2020-04-23 15:44:19 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:44:19 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:44:19 -==> Parameters: 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -耗时 : 1
2020-04-23 15:44:19 -此处进行解密+验签+身份验证
2020-04-23 15:44:19 -解密：
2020-04-23 15:44:19 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-23 15:44:19 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-23 15:44:19 -==> Parameters: 01(String), 01(String)
2020-04-23 15:44:19 -<==      Total: 4
2020-04-23 15:44:19 -耗时 : 17
2020-04-23 15:44:19 -此处进行解密+验签+身份验证
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:44:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 15:44:19 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-04-23 15:44:19 -==> Parameters: 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_2717,save content:{referer_id=181, parent_chain=181, user_tel=18124242424, id_card=null, real_name=null, algebra=2, cre_date=20200423, cre_time=154418, login_password=4d870e33b7526f90c659e0cf58d29e38, manager_id=26, pay_password=b9abef104daf1d026e3b555a644c8491, id=2717, auth_status=00, status=0}
2020-04-23 15:44:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:44:19 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: applyRateFlag(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 0
2020-04-23 15:44:19 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-04-23 15:44:19 -==> Parameters: 2717(String), applyRateFlag(String), 0(Integer), 0(Integer), 26(String)
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:44:19 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: recallFlag(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 0
2020-04-23 15:44:19 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-04-23 15:44:19 -==> Parameters: 2717(String), recallFlag(String), 0(Integer), 0(Integer), 26(String)
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:44:19 -==> Parameters: 
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: collegeFlag(String), 2717(String)
2020-04-23 15:44:19 -此处进行解密+验签+身份验证
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:44:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 15:44:19 -<==      Total: 0
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2717 , return
2020-04-23 15:44:19 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-04-23 15:44:19 -==> Parameters: 2717(String), collegeFlag(String), 0(Integer), 25(Integer), 26(String)
2020-04-23 15:44:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:44:19 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:44:19 -==> Parameters: applyRateFlag(String), 2717(String)
2020-04-23 15:44:19 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: cardFlag(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:44:19 -==> Parameters: 0(Integer), 0(Integer), 2717(String), applyRateFlag(String)
2020-04-23 15:44:19 -<==      Total: 0
2020-04-23 15:44:19 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-04-23 15:44:19 -==> Parameters: 2717(String), cardFlag(String), 0(Integer), 0(Integer), 26(String)
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: appImgFlag(String), 2717(String)
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:44:19 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 0
2020-04-23 15:44:19 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-04-23 15:44:19 -==> Parameters: 2717(String), appImgFlag(String), 0(Integer), 0(Integer), 26(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: recallFlag(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:44:19 -==> Parameters: 0(Integer), 0(Integer), 2717(String), recallFlag(String)
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -耗时 : 84
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:44:19 -==> Parameters: 
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: collegeFlag(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:44:19 -==> Parameters: 25(Integer), 25(Integer), 2717(String), collegeFlag(String)
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:44:19 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: cardFlag(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:44:19 -==> Parameters: 0(Integer), 0(Integer), 2717(String), cardFlag(String)
2020-04-23 15:44:19 -<==    Updates: 1
2020-04-23 15:44:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:44:19 -==> Parameters: appImgFlag(String), 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -耗时 : 85
2020-04-23 15:44:19 -此处进行解密+验签+身份验证
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:44:19 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-23 15:44:19 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-23 15:44:19 -==> Parameters: 
2020-04-23 15:44:19 -此处进行解密+验签+身份验证
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:44:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-23 15:44:19 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-23 15:44:19 -==> Parameters: 2717(String)
2020-04-23 15:44:19 -<==      Total: 3
2020-04-23 15:44:19 -耗时 : 20
2020-04-23 15:44:19 -<==      Total: 2
2020-04-23 15:44:19 -耗时 : 8
2020-04-23 15:44:19 -此处进行解密+验签+身份验证
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:44:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:44:19 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:44:19 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:44:19 -==> Parameters: 2717(String)
2020-04-23 15:44:19 -<==      Total: 1
2020-04-23 15:44:19 -耗时 : 1
2020-04-23 15:44:28 -此处进行解密+验签+身份验证
2020-04-23 15:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:44:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:44:28 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-04-23 15:44:28 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-04-23 15:44:28 -==> Parameters: 2717(String)
2020-04-23 15:44:28 -<==      Total: 1
2020-04-23 15:44:28 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-04-23 15:44:28 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:30 -<==      Total: 1
2020-04-23 15:44:30 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-04-23 15:44:30 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:44:30 -<==      Total: 1
2020-04-23 15:44:34 -耗时 : 5724
2020-04-23 15:45:08 -此处进行解密+验签+身份验证
2020-04-23 15:45:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:08 -此处进行解密+验签+身份验证
2020-04-23 15:45:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:08 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:45:08 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:45:08 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:45:08 -==> Parameters: 2717(String)
2020-04-23 15:45:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 15:45:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2717 , return
2020-04-23 15:45:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:45:08 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -耗时 : 6
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:08 -==> Parameters: applyRateFlag(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:08 -==> Parameters: 0(Integer), 0(Integer), 2717(String), applyRateFlag(String)
2020-04-23 15:45:08 -<==    Updates: 1
2020-04-23 15:45:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:45:08 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:08 -==> Parameters: recallFlag(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:08 -==> Parameters: 0(Integer), 0(Integer), 2717(String), recallFlag(String)
2020-04-23 15:45:08 -<==    Updates: 1
2020-04-23 15:45:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:45:08 -==> Parameters: 
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:08 -==> Parameters: collegeFlag(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:08 -==> Parameters: 25(Integer), 25(Integer), 2717(String), collegeFlag(String)
2020-04-23 15:45:08 -<==    Updates: 1
2020-04-23 15:45:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:45:08 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:08 -==> Parameters: cardFlag(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:08 -==> Parameters: 0(Integer), 0(Integer), 2717(String), cardFlag(String)
2020-04-23 15:45:08 -<==    Updates: 1
2020-04-23 15:45:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:08 -==> Parameters: appImgFlag(String), 2717(String)
2020-04-23 15:45:08 -<==      Total: 1
2020-04-23 15:45:08 -耗时 : 123
2020-04-23 15:45:17 -此处进行解密+验签+身份验证
2020-04-23 15:45:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:45:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 15:45:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2717 , return
2020-04-23 15:45:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:45:17 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:17 -==> Parameters: applyRateFlag(String), 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:17 -==> Parameters: 0(Integer), 0(Integer), 2717(String), applyRateFlag(String)
2020-04-23 15:45:17 -<==    Updates: 1
2020-04-23 15:45:17 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:45:17 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:17 -==> Parameters: recallFlag(String), 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:17 -==> Parameters: 0(Integer), 0(Integer), 2717(String), recallFlag(String)
2020-04-23 15:45:17 -此处进行解密+验签+身份验证
2020-04-23 15:45:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:17 -<==    Updates: 1
2020-04-23 15:45:17 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:45:17 -==> Parameters: 
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:17 -==> Parameters: collegeFlag(String), 2717(String)
2020-04-23 15:45:17 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:45:17 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:45:17 -==> Parameters: 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -耗时 : 1
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:17 -==> Parameters: 25(Integer), 25(Integer), 2717(String), collegeFlag(String)
2020-04-23 15:45:17 -<==    Updates: 1
2020-04-23 15:45:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:45:17 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:17 -==> Parameters: cardFlag(String), 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:17 -==> Parameters: 0(Integer), 0(Integer), 2717(String), cardFlag(String)
2020-04-23 15:45:17 -<==    Updates: 1
2020-04-23 15:45:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:17 -==> Parameters: appImgFlag(String), 2717(String)
2020-04-23 15:45:17 -<==      Total: 1
2020-04-23 15:45:17 -耗时 : 65
2020-04-23 15:45:22 -此处进行解密+验签+身份验证
2020-04-23 15:45:22 -请求地址 : http://192.168.191.1:8080/api/common/qiniu/getQiNiuToken
2020-04-23 15:45:22 -耗时 : 32
2020-04-23 15:45:23 -此处进行解密+验签+身份验证
2020-04-23 15:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:23 -请求地址 : http://192.168.191.1:8080/api/user/info/submitUserAuthInfo
2020-04-23 15:45:23 -==>  Preparing: SELECT t1.user_id AS manager_id, t1.auth_isaudit, t1.card_isaudit FROM t_user_info t LEFT JOIN sys_user t1 ON t.manager_id = t1.user_id WHERE t.id = ? AND t1.del_flag='0' AND t1.status='0' 
2020-04-23 15:45:23 -==> Parameters: 2717(String)
2020-04-23 15:45:23 -<==      Total: 1
2020-04-23 15:45:23 -==>  Preparing: update t_user_info set auth_status=?, id_card=?, card_photo=?, real_name=? where id=? and auth_status in (00,08) 
2020-04-23 15:45:23 -==> Parameters: 09(String), 431021198809040023(String), FtqRX9gpF0RGobtpQFAOoffp-T2n,FtqRX9gpF0RGobtpQFAOoffp-T2n,FtqRX9gpF0RGobtpQFAOoffp-T2n(String), thanks(String), 2717(String)
2020-04-23 15:45:23 -<==    Updates: 1
2020-04-23 15:45:23 -耗时 : 33
2020-04-23 15:45:24 -此处进行解密+验签+身份验证
2020-04-23 15:45:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:45:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 15:45:24 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-04-23 15:45:24 -==> Parameters: 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_2717,save content:{referer_id=181, parent_chain=181, user_tel=18124242424, id_card=431021198809040023, real_name=thanks, algebra=2, cre_date=20200423, cre_time=154418, login_password=4d870e33b7526f90c659e0cf58d29e38, manager_id=26, pay_password=b9abef104daf1d026e3b555a644c8491, id=2717, auth_status=09, status=0}
2020-04-23 15:45:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:45:24 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:24 -==> Parameters: applyRateFlag(String), 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:24 -==> Parameters: 0(Integer), 0(Integer), 2717(String), applyRateFlag(String)
2020-04-23 15:45:24 -此处进行解密+验签+身份验证
2020-04-23 15:45:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:24 -<==    Updates: 1
2020-04-23 15:45:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:45:24 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:45:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:45:24 -==> Parameters: 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:24 -==> Parameters: recallFlag(String), 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -耗时 : 2
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:24 -==> Parameters: 0(Integer), 0(Integer), 2717(String), recallFlag(String)
2020-04-23 15:45:24 -<==    Updates: 1
2020-04-23 15:45:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:45:24 -==> Parameters: 
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:24 -==> Parameters: collegeFlag(String), 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:24 -==> Parameters: 25(Integer), 25(Integer), 2717(String), collegeFlag(String)
2020-04-23 15:45:24 -<==    Updates: 1
2020-04-23 15:45:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:45:24 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:24 -==> Parameters: cardFlag(String), 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:45:24 -==> Parameters: 0(Integer), 0(Integer), 2717(String), cardFlag(String)
2020-04-23 15:45:24 -<==    Updates: 1
2020-04-23 15:45:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:45:24 -==> Parameters: appImgFlag(String), 2717(String)
2020-04-23 15:45:24 -<==      Total: 1
2020-04-23 15:45:24 -耗时 : 76
2020-04-23 15:45:28 -此处进行解密+验签+身份验证
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:28 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-04-23 15:45:28 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-04-23 15:45:28 -==> Parameters: 2717(String)
2020-04-23 15:45:28 -<==      Total: 1
2020-04-23 15:45:28 -耗时 : 8
2020-04-23 15:45:28 -此处进行解密+验签+身份验证
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:28 -此处进行解密+验签+身份验证
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:28 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:28 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-04-23 15:45:28 -==> Parameters: 2717(String), 202004(String)
2020-04-23 15:45:28 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-04-23 15:45:28 -<==      Total: 0
2020-04-23 15:45:28 -耗时 : 3
2020-04-23 15:45:28 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-04-23 15:45:28 -==> Parameters: 2717(String), 202004(String)
2020-04-23 15:45:28 -<==      Total: 0
2020-04-23 15:45:28 -耗时 : 4
2020-04-23 15:45:28 -此处进行解密+验签+身份验证
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:28 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-04-23 15:45:28 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-04-23 15:45:28 -==> Parameters: 2717(String), 202004(String)
2020-04-23 15:45:28 -<==      Total: 0
2020-04-23 15:45:28 -耗时 : 5
2020-04-23 15:45:32 -此处进行解密+验签+身份验证
2020-04-23 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:32 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-04-23 15:45:32 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-04-23 15:45:32 -==> Parameters: 1(String), 2717(String), cardFlag(String)
2020-04-23 15:45:32 -<==    Updates: 1
2020-04-23 15:45:32 -耗时 : 12
2020-04-23 15:45:32 -此处进行解密+验签+身份验证
2020-04-23 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:32 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/getUserCardList
2020-04-23 15:45:32 -==>  Preparing: SELECT id AS card_id, user_id, account, account_name, bank_code, bank_name, card_photo, status, is_default, remark FROM t_user_card_info WHERE user_id=? order by is_default desc,id desc 
2020-04-23 15:45:32 -==> Parameters: 2717(String)
2020-04-23 15:45:32 -<==      Total: 0
2020-04-23 15:45:32 -耗时 : 25
2020-04-23 15:45:49 -此处进行解密+验签+身份验证
2020-04-23 15:45:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:49 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:49 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:49 -==> Parameters: c(String)
2020-04-23 15:45:50 -此处进行解密+验签+身份验证
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:50 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:50 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:50 -==> Parameters: ch(String)
2020-04-23 15:45:50 -此处进行解密+验签+身份验证
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:50 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:50 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:50 -==> Parameters: cha(String)
2020-04-23 15:45:50 -<==      Total: 10
2020-04-23 15:45:50 -耗时 : 269
2020-04-23 15:45:50 -此处进行解密+验签+身份验证
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:50 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:50 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:50 -==> Parameters: chan(String)
2020-04-23 15:45:50 -<==      Total: 10
2020-04-23 15:45:50 -耗时 : 425
2020-04-23 15:45:50 -此处进行解密+验签+身份验证
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:50 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:50 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:50 -==> Parameters: chang(String)
2020-04-23 15:45:50 -<==      Total: 1
2020-04-23 15:45:50 -耗时 : 318
2020-04-23 15:45:50 -<==      Total: 3
2020-04-23 15:45:50 -耗时 : 461
2020-04-23 15:45:50 -<==      Total: 1
2020-04-23 15:45:50 -耗时 : 305
2020-04-23 15:45:51 -此处进行解密+验签+身份验证
2020-04-23 15:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:51 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:51 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:51 -==> Parameters: changs(String)
2020-04-23 15:45:51 -<==      Total: 0
2020-04-23 15:45:51 -耗时 : 216
2020-04-23 15:45:52 -此处进行解密+验签+身份验证
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:52 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:52 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:52 -==> Parameters: chang(String)
2020-04-23 15:45:52 -此处进行解密+验签+身份验证
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:52 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:52 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:52 -==> Parameters: chan(String)
2020-04-23 15:45:52 -此处进行解密+验签+身份验证
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:52 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:52 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:52 -==> Parameters: cha(String)
2020-04-23 15:45:52 -<==      Total: 1
2020-04-23 15:45:52 -耗时 : 323
2020-04-23 15:45:52 -此处进行解密+验签+身份验证
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:52 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:52 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:52 -==> Parameters: ch(String)
2020-04-23 15:45:52 -此处进行解密+验签+身份验证
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:52 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:52 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:52 -==> Parameters: c(String)
2020-04-23 15:45:52 -<==      Total: 1
2020-04-23 15:45:52 -耗时 : 612
2020-04-23 15:45:53 -<==      Total: 3
2020-04-23 15:45:53 -耗时 : 676
2020-04-23 15:45:53 -<==      Total: 10
2020-04-23 15:45:53 -耗时 : 419
2020-04-23 15:45:53 -<==      Total: 10
2020-04-23 15:45:53 -耗时 : 555
2020-04-23 15:45:56 -此处进行解密+验签+身份验证
2020-04-23 15:45:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:56 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:56 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:56 -==> Parameters: c(String)
2020-04-23 15:45:56 -此处进行解密+验签+身份验证
2020-04-23 15:45:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:56 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:56 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:56 -==> Parameters: ch(String)
2020-04-23 15:45:56 -此处进行解密+验签+身份验证
2020-04-23 15:45:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:56 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:56 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:56 -==> Parameters: cha(String)
2020-04-23 15:45:56 -<==      Total: 10
2020-04-23 15:45:56 -耗时 : 287
2020-04-23 15:45:57 -<==      Total: 10
2020-04-23 15:45:57 -耗时 : 341
2020-04-23 15:45:57 -<==      Total: 3
2020-04-23 15:45:57 -耗时 : 298
2020-04-23 15:45:57 -此处进行解密+验签+身份验证
2020-04-23 15:45:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:57 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:57 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:57 -==> Parameters: ch(String)
2020-04-23 15:45:57 -此处进行解密+验签+身份验证
2020-04-23 15:45:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:57 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:57 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:57 -==> Parameters: c(String)
2020-04-23 15:45:57 -<==      Total: 10
2020-04-23 15:45:57 -耗时 : 230
2020-04-23 15:45:57 -<==      Total: 10
2020-04-23 15:45:57 -耗时 : 323
2020-04-23 15:45:58 -此处进行解密+验签+身份验证
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:58 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:58 -==> Parameters: c(String)
2020-04-23 15:45:58 -此处进行解密+验签+身份验证
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:58 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:58 -==> Parameters: ch(String)
2020-04-23 15:45:58 -此处进行解密+验签+身份验证
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:58 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:58 -==> Parameters: cha(String)
2020-04-23 15:45:58 -此处进行解密+验签+身份验证
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:58 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:58 -==> Parameters: chan(String)
2020-04-23 15:45:58 -<==      Total: 10
2020-04-23 15:45:58 -耗时 : 267
2020-04-23 15:45:58 -此处进行解密+验签+身份验证
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:58 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:58 -==> Parameters: chang(String)
2020-04-23 15:45:58 -<==      Total: 10
2020-04-23 15:45:58 -耗时 : 277
2020-04-23 15:45:58 -此处进行解密+验签+身份验证
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:58 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:58 -==> Parameters: changs(String)
2020-04-23 15:45:58 -<==      Total: 3
2020-04-23 15:45:58 -耗时 : 455
2020-04-23 15:45:58 -此处进行解密+验签+身份验证
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:58 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:58 -==> Parameters: changsh(String)
2020-04-23 15:45:58 -<==      Total: 1
2020-04-23 15:45:58 -耗时 : 676
2020-04-23 15:45:59 -<==      Total: 0
2020-04-23 15:45:59 -耗时 : 525
2020-04-23 15:45:59 -<==      Total: 1
2020-04-23 15:45:59 -耗时 : 702
2020-04-23 15:45:59 -<==      Total: 0
2020-04-23 15:45:59 -耗时 : 422
2020-04-23 15:45:59 -此处进行解密+验签+身份验证
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:59 -==> Parameters: changs(String)
2020-04-23 15:45:59 -此处进行解密+验签+身份验证
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:59 -==> Parameters: chang(String)
2020-04-23 15:45:59 -<==      Total: 0
2020-04-23 15:45:59 -<==      Total: 1
2020-04-23 15:45:59 -耗时 : 379
2020-04-23 15:45:59 -耗时 : 227
2020-04-23 15:45:59 -此处进行解密+验签+身份验证
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:59 -==> Parameters: changs(String)
2020-04-23 15:45:59 -此处进行解密+验签+身份验证
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:45:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:45:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:45:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:45:59 -==> Parameters: changsh(String)
2020-04-23 15:46:00 -此处进行解密+验签+身份验证
2020-04-23 15:46:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:00 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:00 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:00 -==> Parameters: changsha(String)
2020-04-23 15:46:00 -<==      Total: 0
2020-04-23 15:46:00 -耗时 : 494
2020-04-23 15:46:00 -<==      Total: 0
2020-04-23 15:46:00 -耗时 : 387
2020-04-23 15:46:00 -<==      Total: 0
2020-04-23 15:46:00 -耗时 : 306
2020-04-23 15:46:02 -此处进行解密+验签+身份验证
2020-04-23 15:46:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:02 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:02 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:02 -==> Parameters: changsh(String)
2020-04-23 15:46:02 -此处进行解密+验签+身份验证
2020-04-23 15:46:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:02 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:02 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:02 -==> Parameters: changs(String)
2020-04-23 15:46:03 -此处进行解密+验签+身份验证
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:03 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:03 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:03 -==> Parameters: chang(String)
2020-04-23 15:46:03 -此处进行解密+验签+身份验证
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:03 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:03 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:03 -==> Parameters: chan(String)
2020-04-23 15:46:03 -<==      Total: 0
2020-04-23 15:46:03 -<==      Total: 0
2020-04-23 15:46:03 -耗时 : 290
2020-04-23 15:46:03 -耗时 : 415
2020-04-23 15:46:03 -此处进行解密+验签+身份验证
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:03 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:03 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:03 -==> Parameters: cha(String)
2020-04-23 15:46:03 -此处进行解密+验签+身份验证
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:03 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:03 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:03 -==> Parameters: ch(String)
2020-04-23 15:46:03 -此处进行解密+验签+身份验证
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:03 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:03 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:03 -==> Parameters: c(String)
2020-04-23 15:46:03 -<==      Total: 1
2020-04-23 15:46:03 -耗时 : 404
2020-04-23 15:46:03 -<==      Total: 1
2020-04-23 15:46:03 -耗时 : 532
2020-04-23 15:46:03 -<==      Total: 10
2020-04-23 15:46:03 -耗时 : 329
2020-04-23 15:46:03 -<==      Total: 3
2020-04-23 15:46:03 -耗时 : 560
2020-04-23 15:46:03 -<==      Total: 10
2020-04-23 15:46:03 -耗时 : 433
2020-04-23 15:46:06 -此处进行解密+验签+身份验证
2020-04-23 15:46:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:06 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:06 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:06 -==> Parameters: j(String)
2020-04-23 15:46:06 -<==      Total: 8
2020-04-23 15:46:06 -耗时 : 209
2020-04-23 15:46:07 -此处进行解密+验签+身份验证
2020-04-23 15:46:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:07 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:07 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:07 -==> Parameters: jJ(String)
2020-04-23 15:46:07 -<==      Total: 0
2020-04-23 15:46:07 -耗时 : 210
2020-04-23 15:46:08 -此处进行解密+验签+身份验证
2020-04-23 15:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:08 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:08 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:08 -==> Parameters: jJj(String)
2020-04-23 15:46:08 -<==      Total: 0
2020-04-23 15:46:08 -耗时 : 260
2020-04-23 15:46:08 -此处进行解密+验签+身份验证
2020-04-23 15:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:08 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:08 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:08 -==> Parameters: jJjk(String)
2020-04-23 15:46:08 -<==      Total: 0
2020-04-23 15:46:08 -耗时 : 303
2020-04-23 15:46:09 -此处进行解密+验签+身份验证
2020-04-23 15:46:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:09 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:09 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:09 -==> Parameters: jJjkk(String)
2020-04-23 15:46:09 -<==      Total: 0
2020-04-23 15:46:09 -耗时 : 216
2020-04-23 15:46:10 -此处进行解密+验签+身份验证
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:10 -==> Parameters: jJjk(String)
2020-04-23 15:46:10 -此处进行解密+验签+身份验证
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:10 -==> Parameters: jJj(String)
2020-04-23 15:46:10 -<==      Total: 0
2020-04-23 15:46:10 -耗时 : 275
2020-04-23 15:46:10 -此处进行解密+验签+身份验证
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:10 -==> Parameters: jJ(String)
2020-04-23 15:46:10 -此处进行解密+验签+身份验证
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:46:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:46:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:46:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:46:10 -==> Parameters: j(String)
2020-04-23 15:46:11 -<==      Total: 0
2020-04-23 15:46:11 -耗时 : 526
2020-04-23 15:46:11 -<==      Total: 0
2020-04-23 15:46:11 -耗时 : 452
2020-04-23 15:46:11 -<==      Total: 8
2020-04-23 15:46:11 -耗时 : 326
2020-04-23 15:47:35 -此处进行解密+验签+身份验证
2020-04-23 15:47:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:35 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:35 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:35 -==> Parameters: k(String)
2020-04-23 15:47:35 -<==      Total: 10
2020-04-23 15:47:35 -耗时 : 154
2020-04-23 15:47:35 -此处进行解密+验签+身份验证
2020-04-23 15:47:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:35 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:35 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:35 -==> Parameters: kk(String)
2020-04-23 15:47:36 -<==      Total: 0
2020-04-23 15:47:36 -耗时 : 291
2020-04-23 15:47:36 -此处进行解密+验签+身份验证
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:36 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:36 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:36 -==> Parameters: k(String)
2020-04-23 15:47:36 -此处进行解密+验签+身份验证
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:36 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:36 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:36 -==> Parameters: a(String)
2020-04-23 15:47:36 -<==      Total: 10
2020-04-23 15:47:36 -耗时 : 211
2020-04-23 15:47:36 -此处进行解密+验签+身份验证
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:36 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:36 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:36 -==> Parameters: as(String)
2020-04-23 15:47:36 -<==      Total: 10
2020-04-23 15:47:36 -耗时 : 290
2020-04-23 15:47:36 -此处进行解密+验签+身份验证
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:36 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:36 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:36 -==> Parameters: asd(String)
2020-04-23 15:47:36 -此处进行解密+验签+身份验证
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:36 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:36 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:36 -==> Parameters: asdA(String)
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: asdAD(String)
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: asdADS(String)
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: asdADSF(String)
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -<==      Total: 6
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -耗时 : 655
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: asdADS(String)
2020-04-23 15:47:37 -<==      Total: 0
2020-04-23 15:47:37 -耗时 : 603
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: asdAD(String)
2020-04-23 15:47:37 -<==      Total: 0
2020-04-23 15:47:37 -耗时 : 714
2020-04-23 15:47:37 -<==      Total: 0
2020-04-23 15:47:37 -<==      Total: 0
2020-04-23 15:47:37 -耗时 : 549
2020-04-23 15:47:37 -耗时 : 625
2020-04-23 15:47:37 -<==      Total: 0
2020-04-23 15:47:37 -耗时 : 490
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: asdA(String)
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: asd(String)
2020-04-23 15:47:37 -此处进行解密+验签+身份验证
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:37 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:37 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:37 -==> Parameters: as(String)
2020-04-23 15:47:38 -<==      Total: 0
2020-04-23 15:47:38 -耗时 : 705
2020-04-23 15:47:38 -此处进行解密+验签+身份验证
2020-04-23 15:47:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:38 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:38 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:38 -==> Parameters: a(String)
2020-04-23 15:47:38 -<==      Total: 0
2020-04-23 15:47:38 -<==      Total: 0
2020-04-23 15:47:38 -耗时 : 646
2020-04-23 15:47:38 -耗时 : 494
2020-04-23 15:47:38 -<==      Total: 0
2020-04-23 15:47:38 -耗时 : 538
2020-04-23 15:47:38 -<==      Total: 6
2020-04-23 15:47:38 -耗时 : 595
2020-04-23 15:47:38 -<==      Total: 10
2020-04-23 15:47:38 -耗时 : 394
2020-04-23 15:47:43 -此处进行解密+验签+身份验证
2020-04-23 15:47:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:43 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:43 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:43 -==> Parameters: K(String)
2020-04-23 15:47:43 -此处进行解密+验签+身份验证
2020-04-23 15:47:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:43 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:43 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:43 -==> Parameters: KS(String)
2020-04-23 15:47:43 -<==      Total: 10
2020-04-23 15:47:43 -耗时 : 198
2020-04-23 15:47:43 -<==      Total: 0
2020-04-23 15:47:43 -耗时 : 169
2020-04-23 15:47:44 -此处进行解密+验签+身份验证
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:44 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:44 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:44 -==> Parameters: KSD(String)
2020-04-23 15:47:44 -此处进行解密+验签+身份验证
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:44 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:44 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:44 -==> Parameters: KSDF(String)
2020-04-23 15:47:44 -<==      Total: 0
2020-04-23 15:47:44 -耗时 : 172
2020-04-23 15:47:44 -<==      Total: 0
2020-04-23 15:47:44 -耗时 : 262
2020-04-23 15:47:44 -此处进行解密+验签+身份验证
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:44 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:44 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:44 -==> Parameters: KSD(String)
2020-04-23 15:47:44 -此处进行解密+验签+身份验证
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:44 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:44 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:44 -==> Parameters: KS(String)
2020-04-23 15:47:44 -此处进行解密+验签+身份验证
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:44 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:44 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:44 -==> Parameters: K(String)
2020-04-23 15:47:44 -<==      Total: 0
2020-04-23 15:47:44 -耗时 : 363
2020-04-23 15:47:44 -<==      Total: 10
2020-04-23 15:47:44 -耗时 : 170
2020-04-23 15:47:44 -<==      Total: 0
2020-04-23 15:47:44 -耗时 : 424
2020-04-23 15:47:46 -此处进行解密+验签+身份验证
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:46 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:46 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:46 -==> Parameters: k(String)
2020-04-23 15:47:46 -此处进行解密+验签+身份验证
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:46 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:46 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:46 -==> Parameters: kl(String)
2020-04-23 15:47:46 -<==      Total: 10
2020-04-23 15:47:46 -耗时 : 177
2020-04-23 15:47:46 -<==      Total: 0
2020-04-23 15:47:46 -耗时 : 257
2020-04-23 15:47:46 -此处进行解密+验签+身份验证
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:46 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:46 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:46 -==> Parameters: kla(String)
2020-04-23 15:47:46 -此处进行解密+验签+身份验证
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:46 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:46 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:46 -==> Parameters: klas(String)
2020-04-23 15:47:46 -此处进行解密+验签+身份验证
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:46 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:46 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:46 -==> Parameters: klasd(String)
2020-04-23 15:47:47 -此处进行解密+验签+身份验证
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:47 -==> Parameters: klasdf(String)
2020-04-23 15:47:47 -此处进行解密+验签+身份验证
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:47 -==> Parameters: klasd(String)
2020-04-23 15:47:47 -此处进行解密+验签+身份验证
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:47 -==> Parameters: klas(String)
2020-04-23 15:47:47 -此处进行解密+验签+身份验证
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:47 -==> Parameters: kla(String)
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -耗时 : 536
2020-04-23 15:47:47 -耗时 : 469
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -耗时 : 514
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -耗时 : 396
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -耗时 : 330
2020-04-23 15:47:47 -此处进行解密+验签+身份验证
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:47 -==> Parameters: kl(String)
2020-04-23 15:47:47 -此处进行解密+验签+身份验证
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:47 -==> Parameters: k(String)
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -耗时 : 530
2020-04-23 15:47:47 -耗时 : 352
2020-04-23 15:47:47 -<==      Total: 0
2020-04-23 15:47:47 -耗时 : 451
2020-04-23 15:47:48 -<==      Total: 10
2020-04-23 15:47:48 -耗时 : 367
2020-04-23 15:47:49 -此处进行解密+验签+身份验证
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:49 -此处进行解密+验签+身份验证
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:49 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:49 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:49 -==> Parameters: sj(String)
2020-04-23 15:47:49 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:49 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:49 -==> Parameters: s(String)
2020-04-23 15:47:49 -此处进行解密+验签+身份验证
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:49 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:49 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:49 -==> Parameters: sjj(String)
2020-04-23 15:47:49 -<==      Total: 10
2020-04-23 15:47:49 -耗时 : 225
2020-04-23 15:47:49 -此处进行解密+验签+身份验证
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:49 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:49 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:49 -==> Parameters: sjjj(String)
2020-04-23 15:47:49 -<==      Total: 0
2020-04-23 15:47:49 -耗时 : 338
2020-04-23 15:47:49 -<==      Total: 0
2020-04-23 15:47:49 -<==      Total: 0
2020-04-23 15:47:49 -耗时 : 256
2020-04-23 15:47:49 -耗时 : 409
2020-04-23 15:47:49 -此处进行解密+验签+身份验证
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:49 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:49 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:49 -==> Parameters: sjj(String)
2020-04-23 15:47:50 -此处进行解密+验签+身份验证
2020-04-23 15:47:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:50 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:50 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:50 -==> Parameters: sj(String)
2020-04-23 15:47:50 -此处进行解密+验签+身份验证
2020-04-23 15:47:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:50 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:50 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:50 -==> Parameters: s(String)
2020-04-23 15:47:50 -<==      Total: 0
2020-04-23 15:47:50 -耗时 : 197
2020-04-23 15:47:50 -<==      Total: 0
2020-04-23 15:47:50 -耗时 : 320
2020-04-23 15:47:50 -<==      Total: 10
2020-04-23 15:47:50 -耗时 : 233
2020-04-23 15:47:51 -此处进行解密+验签+身份验证
2020-04-23 15:47:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:51 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:51 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:51 -==> Parameters: h(String)
2020-04-23 15:47:51 -<==      Total: 10
2020-04-23 15:47:51 -耗时 : 172
2020-04-23 15:47:51 -此处进行解密+验签+身份验证
2020-04-23 15:47:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:51 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:51 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:51 -==> Parameters: hh(String)
2020-04-23 15:47:52 -<==      Total: 0
2020-04-23 15:47:52 -耗时 : 215
2020-04-23 15:47:52 -此处进行解密+验签+身份验证
2020-04-23 15:47:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:52 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:52 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:52 -==> Parameters: hhH(String)
2020-04-23 15:47:52 -此处进行解密+验签+身份验证
2020-04-23 15:47:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:52 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:52 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:52 -==> Parameters: hhHh(String)
2020-04-23 15:47:52 -<==      Total: 0
2020-04-23 15:47:52 -耗时 : 250
2020-04-23 15:47:52 -<==      Total: 0
2020-04-23 15:47:52 -耗时 : 263
2020-04-23 15:47:53 -此处进行解密+验签+身份验证
2020-04-23 15:47:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:53 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:53 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:53 -==> Parameters: hhH(String)
2020-04-23 15:47:53 -此处进行解密+验签+身份验证
2020-04-23 15:47:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:53 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:53 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:53 -==> Parameters: hh(String)
2020-04-23 15:47:53 -此处进行解密+验签+身份验证
2020-04-23 15:47:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:53 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:53 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:53 -==> Parameters: h(String)
2020-04-23 15:47:53 -<==      Total: 0
2020-04-23 15:47:53 -耗时 : 305
2020-04-23 15:47:53 -<==      Total: 0
2020-04-23 15:47:53 -耗时 : 187
2020-04-23 15:47:53 -<==      Total: 10
2020-04-23 15:47:53 -耗时 : 199
2020-04-23 15:47:59 -此处进行解密+验签+身份验证
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:59 -==> Parameters: c(String)
2020-04-23 15:47:59 -<==      Total: 10
2020-04-23 15:47:59 -耗时 : 155
2020-04-23 15:47:59 -此处进行解密+验签+身份验证
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:59 -==> Parameters: ch(String)
2020-04-23 15:47:59 -此处进行解密+验签+身份验证
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:59 -==> Parameters: cha(String)
2020-04-23 15:47:59 -此处进行解密+验签+身份验证
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:59 -==> Parameters: chan(String)
2020-04-23 15:47:59 -<==      Total: 10
2020-04-23 15:47:59 -耗时 : 209
2020-04-23 15:47:59 -此处进行解密+验签+身份验证
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:47:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:47:59 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:47:59 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:47:59 -==> Parameters: chang(String)
2020-04-23 15:47:59 -<==      Total: 3
2020-04-23 15:47:59 -耗时 : 218
2020-04-23 15:47:59 -<==      Total: 1
2020-04-23 15:47:59 -<==      Total: 1
2020-04-23 15:47:59 -耗时 : 300
2020-04-23 15:47:59 -耗时 : 240
2020-04-23 15:49:10 -此处进行解密+验签+身份验证
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:10 -==> Parameters: chan(String)
2020-04-23 15:49:10 -此处进行解密+验签+身份验证
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:10 -==> Parameters: cha(String)
2020-04-23 15:49:10 -<==      Total: 1
2020-04-23 15:49:10 -耗时 : 248
2020-04-23 15:49:10 -此处进行解密+验签+身份验证
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:10 -==> Parameters: ch(String)
2020-04-23 15:49:10 -此处进行解密+验签+身份验证
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:10 -==> Parameters: c(String)
2020-04-23 15:49:10 -<==      Total: 3
2020-04-23 15:49:10 -耗时 : 340
2020-04-23 15:49:11 -<==      Total: 10
2020-04-23 15:49:11 -耗时 : 250
2020-04-23 15:49:11 -<==      Total: 10
2020-04-23 15:49:11 -耗时 : 351
2020-04-23 15:49:40 -此处进行解密+验签+身份验证
2020-04-23 15:49:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:40 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:40 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:40 -==> Parameters: 3(String)
2020-04-23 15:49:40 -<==      Total: 10
2020-04-23 15:49:40 -耗时 : 184
2020-04-23 15:49:41 -此处进行解密+验签+身份验证
2020-04-23 15:49:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:41 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:41 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:41 -==> Parameters: 31(String)
2020-04-23 15:49:41 -<==      Total: 1
2020-04-23 15:49:41 -耗时 : 231
2020-04-23 15:49:41 -此处进行解密+验签+身份验证
2020-04-23 15:49:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:41 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:41 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:41 -==> Parameters: 313(String)
2020-04-23 15:49:42 -<==      Total: 0
2020-04-23 15:49:42 -耗时 : 223
2020-04-23 15:49:42 -此处进行解密+验签+身份验证
2020-04-23 15:49:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:42 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:42 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:42 -==> Parameters: 3135(String)
2020-04-23 15:49:42 -此处进行解密+验签+身份验证
2020-04-23 15:49:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:42 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:42 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:42 -==> Parameters: 31356(String)
2020-04-23 15:49:42 -<==      Total: 0
2020-04-23 15:49:42 -耗时 : 301
2020-04-23 15:49:42 -<==      Total: 0
2020-04-23 15:49:42 -耗时 : 296
2020-04-23 15:49:43 -此处进行解密+验签+身份验证
2020-04-23 15:49:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:43 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:43 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:43 -==> Parameters: 313561(String)
2020-04-23 15:49:43 -<==      Total: 0
2020-04-23 15:49:43 -耗时 : 204
2020-04-23 15:49:43 -此处进行解密+验签+身份验证
2020-04-23 15:49:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:43 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:43 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:43 -==> Parameters: 3135610(String)
2020-04-23 15:49:43 -<==      Total: 0
2020-04-23 15:49:43 -耗时 : 200
2020-04-23 15:49:47 -此处进行解密+验签+身份验证
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:47 -==> Parameters: 313561(String)
2020-04-23 15:49:47 -此处进行解密+验签+身份验证
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:47 -==> Parameters: 31356(String)
2020-04-23 15:49:47 -<==      Total: 0
2020-04-23 15:49:47 -耗时 : 221
2020-04-23 15:49:47 -此处进行解密+验签+身份验证
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:47 -==> Parameters: 3135(String)
2020-04-23 15:49:47 -<==      Total: 0
2020-04-23 15:49:47 -耗时 : 254
2020-04-23 15:49:47 -此处进行解密+验签+身份验证
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:47 -==> Parameters: 313(String)
2020-04-23 15:49:47 -此处进行解密+验签+身份验证
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:47 -==> Parameters: 31(String)
2020-04-23 15:49:47 -<==      Total: 0
2020-04-23 15:49:47 -耗时 : 389
2020-04-23 15:49:47 -此处进行解密+验签+身份验证
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:49:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:49:47 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:49:47 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:49:47 -==> Parameters: 3(String)
2020-04-23 15:49:48 -<==      Total: 0
2020-04-23 15:49:48 -耗时 : 546
2020-04-23 15:49:48 -<==      Total: 10
2020-04-23 15:49:48 -耗时 : 256
2020-04-23 15:49:48 -<==      Total: 1
2020-04-23 15:49:48 -耗时 : 462
2020-04-23 15:50:06 -此处进行解密+验签+身份验证
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:06 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:06 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:06 -==> Parameters: d(String)
2020-04-23 15:50:06 -此处进行解密+验签+身份验证
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:06 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:06 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:06 -==> Parameters: da(String)
2020-04-23 15:50:06 -<==      Total: 10
2020-04-23 15:50:06 -耗时 : 224
2020-04-23 15:50:06 -此处进行解密+验签+身份验证
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:06 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:06 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:06 -==> Parameters: das(String)
2020-04-23 15:50:06 -此处进行解密+验签+身份验证
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:06 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:06 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:06 -==> Parameters: dasd(String)
2020-04-23 15:50:06 -<==      Total: 9
2020-04-23 15:50:06 -耗时 : 267
2020-04-23 15:50:07 -此处进行解密+验签+身份验证
2020-04-23 15:50:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:07 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:07 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:07 -==> Parameters: dasdf(String)
2020-04-23 15:50:07 -<==      Total: 0
2020-04-23 15:50:07 -<==      Total: 0
2020-04-23 15:50:07 -耗时 : 398
2020-04-23 15:50:07 -耗时 : 358
2020-04-23 15:50:07 -<==      Total: 0
2020-04-23 15:50:07 -耗时 : 364
2020-04-23 15:50:08 -此处进行解密+验签+身份验证
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:08 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:08 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:08 -==> Parameters: dasd(String)
2020-04-23 15:50:08 -此处进行解密+验签+身份验证
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:08 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:08 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:08 -==> Parameters: das(String)
2020-04-23 15:50:08 -<==      Total: 0
2020-04-23 15:50:08 -耗时 : 243
2020-04-23 15:50:08 -此处进行解密+验签+身份验证
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:08 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:08 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:08 -==> Parameters: da(String)
2020-04-23 15:50:08 -此处进行解密+验签+身份验证
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:08 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:08 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:08 -==> Parameters: d(String)
2020-04-23 15:50:08 -<==      Total: 0
2020-04-23 15:50:08 -耗时 : 384
2020-04-23 15:50:08 -<==      Total: 10
2020-04-23 15:50:08 -耗时 : 228
2020-04-23 15:50:08 -<==      Total: 9
2020-04-23 15:50:08 -耗时 : 371
2020-04-23 15:50:10 -此处进行解密+验签+身份验证
2020-04-23 15:50:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:10 -==> Parameters: y(String)
2020-04-23 15:50:10 -<==      Total: 10
2020-04-23 15:50:10 -耗时 : 198
2020-04-23 15:50:10 -此处进行解密+验签+身份验证
2020-04-23 15:50:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:10 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:10 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:10 -==> Parameters: yi(String)
2020-04-23 15:50:11 -<==      Total: 0
2020-04-23 15:50:11 -耗时 : 200
2020-04-23 15:50:11 -此处进行解密+验签+身份验证
2020-04-23 15:50:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:11 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:11 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:11 -==> Parameters: yiy(String)
2020-04-23 15:50:12 -此处进行解密+验签+身份验证
2020-04-23 15:50:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:12 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:12 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:12 -==> Parameters: yiya(String)
2020-04-23 15:50:12 -此处进行解密+验签+身份验证
2020-04-23 15:50:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:12 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:12 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:12 -==> Parameters: yiyan(String)
2020-04-23 15:50:12 -<==      Total: 0
2020-04-23 15:50:12 -耗时 : 297
2020-04-23 15:50:12 -此处进行解密+验签+身份验证
2020-04-23 15:50:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:12 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:12 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:12 -==> Parameters: yiyang(String)
2020-04-23 15:50:12 -<==      Total: 0
2020-04-23 15:50:12 -<==      Total: 0
2020-04-23 15:50:12 -耗时 : 373
2020-04-23 15:50:12 -耗时 : 278
2020-04-23 15:50:12 -<==      Total: 0
2020-04-23 15:50:12 -耗时 : 280
2020-04-23 15:50:16 -此处进行解密+验签+身份验证
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:16 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:16 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:16 -==> Parameters: yiyan(String)
2020-04-23 15:50:16 -此处进行解密+验签+身份验证
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:16 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:16 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:16 -==> Parameters: yiya(String)
2020-04-23 15:50:16 -<==      Total: 0
2020-04-23 15:50:16 -耗时 : 244
2020-04-23 15:50:16 -此处进行解密+验签+身份验证
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:16 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:16 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:16 -==> Parameters: yiy(String)
2020-04-23 15:50:16 -此处进行解密+验签+身份验证
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:16 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:16 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:16 -==> Parameters: yi(String)
2020-04-23 15:50:16 -<==      Total: 0
2020-04-23 15:50:16 -耗时 : 360
2020-04-23 15:50:17 -<==      Total: 0
2020-04-23 15:50:17 -耗时 : 475
2020-04-23 15:50:17 -<==      Total: 0
2020-04-23 15:50:17 -耗时 : 430
2020-04-23 15:50:17 -此处进行解密+验签+身份验证
2020-04-23 15:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:17 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:17 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:17 -==> Parameters: y(String)
2020-04-23 15:50:17 -<==      Total: 10
2020-04-23 15:50:17 -耗时 : 163
2020-04-23 15:50:22 -此处进行解密+验签+身份验证
2020-04-23 15:50:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:22 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:22 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:22 -==> Parameters: a(String)
2020-04-23 15:50:22 -<==      Total: 10
2020-04-23 15:50:22 -耗时 : 171
2020-04-23 15:50:26 -此处进行解密+验签+身份验证
2020-04-23 15:50:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:26 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:26 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:26 -==> Parameters: 3(String)
2020-04-23 15:50:27 -<==      Total: 10
2020-04-23 15:50:27 -耗时 : 137
2020-04-23 15:50:27 -此处进行解密+验签+身份验证
2020-04-23 15:50:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:27 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:27 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:27 -==> Parameters: 31(String)
2020-04-23 15:50:27 -此处进行解密+验签+身份验证
2020-04-23 15:50:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:27 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:27 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:27 -==> Parameters: 313(String)
2020-04-23 15:50:27 -<==      Total: 1
2020-04-23 15:50:27 -耗时 : 248
2020-04-23 15:50:27 -<==      Total: 0
2020-04-23 15:50:27 -耗时 : 311
2020-04-23 15:50:29 -此处进行解密+验签+身份验证
2020-04-23 15:50:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:50:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:50:29 -请求地址 : http://192.168.191.1:8080/api/sys/bankInfo/searchLikeBank
2020-04-23 15:50:29 -==>  Preparing: SELECT id, bank_code, bank_name FROM t_sys_bank_info WHERE bank_name LIKE CONCAT( '%', ?,'%') AND STATUS = '1' LIMIT 0, 10 
2020-04-23 15:50:29 -==> Parameters: 31(String)
2020-04-23 15:50:29 -<==      Total: 1
2020-04-23 15:50:29 -耗时 : 213
2020-04-23 15:51:02 -此处进行解密+验签+身份验证
2020-04-23 15:51:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:51:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:51:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 15:51:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 15:51:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2717 , return
2020-04-23 15:51:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:51:02 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:51:02 -此处进行解密+验签+身份验证
2020-04-23 15:51:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:51:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:51:02 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 15:51:02 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==> Parameters: 2717(String)
2020-04-23 15:51:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:51:02 -==> Parameters: applyRateFlag(String), 2717(String)
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -耗时 : 10
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:51:02 -==> Parameters: 0(Integer), 0(Integer), 2717(String), applyRateFlag(String)
2020-04-23 15:51:02 -<==    Updates: 1
2020-04-23 15:51:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 15:51:02 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:51:02 -==> Parameters: recallFlag(String), 2717(String)
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:51:02 -==> Parameters: 0(Integer), 0(Integer), 2717(String), recallFlag(String)
2020-04-23 15:51:02 -<==    Updates: 1
2020-04-23 15:51:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 15:51:02 -==> Parameters: 
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:51:02 -==> Parameters: collegeFlag(String), 2717(String)
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:51:02 -==> Parameters: 25(Integer), 25(Integer), 2717(String), collegeFlag(String)
2020-04-23 15:51:02 -<==    Updates: 1
2020-04-23 15:51:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 15:51:02 -==> Parameters: 2717(String), 2717(String)
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:51:02 -==> Parameters: cardFlag(String), 2717(String)
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 15:51:02 -==> Parameters: 0(Integer), 0(Integer), 2717(String), cardFlag(String)
2020-04-23 15:51:02 -<==    Updates: 1
2020-04-23 15:51:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 15:51:02 -==> Parameters: appImgFlag(String), 2717(String)
2020-04-23 15:51:02 -<==      Total: 1
2020-04-23 15:51:02 -耗时 : 125
2020-04-23 15:51:27 -此处进行解密+验签+身份验证
2020-04-23 15:51:27 -请求地址 : http://192.168.191.1:8080/api/common/qiniu/getQiNiuToken
2020-04-23 15:51:27 -耗时 : 1
2020-04-23 15:51:27 -此处进行解密+验签+身份验证
2020-04-23 15:51:27 -解密：{"bank_code":"103888376812","card_photo":"FtqRX9gpF0RGobtpQFAOoffp-T2n,FtqRX9gpF0RGobtpQFAOoffp-T2n","user_card_oper":"user_card_add","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","bank_name":"中国农业银行股份有限公司尉犁英库勒镇（31团）支行","sign":"B7BB224FD7E15B2E59E311062D6CD8D6","is_default":"0","account":"800258762609018","token":"2717|AEXNKWSAN32SFLMBEFGMJ7OXKDSSMN2D"}
2020-04-23 15:51:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:51:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:51:27 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/updateUserCard
2020-04-23 15:51:27 -耗时 : 1
2020-04-23 15:52:35 -此处进行解密+验签+身份验证
2020-04-23 15:52:35 -请求地址 : http://192.168.191.1:8080/api/common/qiniu/getQiNiuToken
2020-04-23 15:52:35 -耗时 : 1
2020-04-23 15:52:36 -此处进行解密+验签+身份验证
2020-04-23 15:52:36 -解密：{"bank_code":"103888376812","card_photo":"FtqRX9gpF0RGobtpQFAOoffp-T2n,FtqRX9gpF0RGobtpQFAOoffp-T2n","user_card_oper":"user_card_add","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","bank_name":"中国农业银行股份有限公司尉犁英库勒镇（31团）支行","sign":"B7BB224FD7E15B2E59E311062D6CD8D6","is_default":"0","account":"800258762609018","token":"2717|AEXNKWSAN32SFLMBEFGMJ7OXKDSSMN2D"}
2020-04-23 15:52:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:52:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:52:36 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/updateUserCard
2020-04-23 15:58:48 -HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m9s227ms1µs237ns).
2020-04-23 15:58:48 -耗时 : 372146
2020-04-23 15:58:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-04-23 15:58:48 -Shutting down ExecutorService 'taskScheduler'
2020-04-23 15:58:48 -Shutting down ExecutorService 'getAsyncExecutor'
2020-04-23 15:58:48 -Shutting down Quartz Scheduler
2020-04-23 15:58:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-04-23 15:58:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-04-23 15:58:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-04-23 15:58:48 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-04-23 15:58:48 -HikariPool-1 - Shutdown initiated...
2020-04-23 15:58:48 -HikariPool-1 - Shutdown completed.
2020-04-23 15:59:02 -Starting LongEcologicalApplication on PC-201905161910 with PID 352 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-04-23 15:59:02 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-04-23 15:59:02 -No active profile set, falling back to default profiles: default
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-04-23 15:59:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-23 15:59:03 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-23 15:59:03 -Finished Spring Data repository scanning in 36ms. Found 0 repository interfaces.
2020-04-23 15:59:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-23 15:59:03 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-04-23 15:59:03 -Finished Spring Data repository scanning in 17ms. Found 0 repository interfaces.
2020-04-23 15:59:04 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$ab9abc29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-23 15:59:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a61ea0c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-23 15:59:04 -Tomcat initialized with port(s): 8080 (http)
2020-04-23 15:59:04 -Initializing ProtocolHandler ["http-nio-8080"]
2020-04-23 15:59:04 -Starting service [Tomcat]
2020-04-23 15:59:04 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-04-23 15:59:04 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-04-23 15:59:04 -Initializing Spring embedded WebApplicationContext
2020-04-23 15:59:04 -Root WebApplicationContext: initialization completed in 2048 ms
2020-04-23 15:59:04 -Filter xssFilter was not registered (disabled)
2020-04-23 15:59:05 -HikariPool-1 - Starting...
2020-04-23 15:59:05 -HikariPool-1 - Start completed.
2020-04-23 15:59:05 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-23 15:59:05 -HHH000412: Hibernate Core {5.3.7.Final}
2020-04-23 15:59:05 -HHH000206: hibernate.properties not found
2020-04-23 15:59:05 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-04-23 15:59:05 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-04-23 15:59:06 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-23 15:59:06 -Using default implementation for ThreadExecutor
2020-04-23 15:59:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-23 15:59:06 -Quartz Scheduler v.2.3.0 created.
2020-04-23 15:59:06 -RAMJobStore initialized.
2020-04-23 15:59:06 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-23 15:59:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-23 15:59:06 -Quartz scheduler version: 2.3.0
2020-04-23 15:59:06 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5f82209e
2020-04-23 15:59:07 -STAET TaskExecutorConfig
2020-04-23 15:59:07 -Initializing ExecutorService
2020-04-23 15:59:07 -Initializing ExecutorService 'getAsyncExecutor'
2020-04-23 15:59:07 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-23 15:59:07 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-23 15:59:08 -Initializing ExecutorService 'taskScheduler'
2020-04-23 15:59:08 -Starting Quartz Scheduler now
2020-04-23 15:59:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-23 15:59:09 -Starting ProtocolHandler ["http-nio-8080"]
2020-04-23 15:59:09 -Using a shared selector for servlet write/read
2020-04-23 15:59:09 -Tomcat started on port(s): 8080 (http) with context path ''
2020-04-23 15:59:09 -Started LongEcologicalApplication in 7.086 seconds (JVM running for 8.406)
2020-04-23 15:59:37 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-23 15:59:37 -Initializing Servlet 'dispatcherServlet'
2020-04-23 15:59:37 -Completed initialization in 20 ms
2020-04-23 15:59:37 -此处进行解密+验签+身份验证
2020-04-23 15:59:37 -请求地址 : http://192.168.191.1:8080/api/common/qiniu/getQiNiuToken
2020-04-23 15:59:37 -Starting without optional epoll library
2020-04-23 15:59:37 -Starting without optional kqueue library
2020-04-23 15:59:38 -耗时 : 563
2020-04-23 15:59:38 -此处进行解密+验签+身份验证
2020-04-23 15:59:38 -解密：{"bank_code":"103888376812","card_photo":"FtqRX9gpF0RGobtpQFAOoffp-T2n,FtqRX9gpF0RGobtpQFAOoffp-T2n","user_card_oper":"user_card_add","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","bank_name":"中国农业银行股份有限公司尉犁英库勒镇（31团）支行","sign":"B7BB224FD7E15B2E59E311062D6CD8D6","is_default":"0","account":"800258762609018","token":"2717|AEXNKWSAN32SFLMBEFGMJ7OXKDSSMN2D"}
2020-04-23 15:59:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:59:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:59:38 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/updateUserCard
2020-04-23 15:59:51 -==>  Preparing: select count(*) FROM t_user_card_info where user_id=? 
2020-04-23 15:59:52 -==> Parameters: 2717(String)
2020-04-23 15:59:52 -<==      Total: 1
2020-04-23 15:59:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 15:59:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2717 , return
2020-04-23 15:59:55 -==>  Preparing: SELECT t1.user_id AS manager_id, t1.auth_isaudit, t1.card_isaudit FROM t_user_info t LEFT JOIN sys_user t1 ON t.manager_id = t1.user_id WHERE t.id = ? AND t1.del_flag='0' AND t1.status='0' 
2020-04-23 15:59:55 -==> Parameters: 2717(String)
2020-04-23 15:59:55 -<==      Total: 1
2020-04-23 15:59:55 -==>  Preparing: select count(*) FROM t_user_card_info where user_id=? AND is_default='1' 
2020-04-23 15:59:55 -==> Parameters: 2717(String)
2020-04-23 15:59:55 -<==      Total: 1
2020-04-23 15:59:55 -==>  Preparing: insert into t_user_card_info ( user_id, account, account_name, id_card, bank_code, bank_name, card_photo, status, is_default, cre_date, cre_time) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2020-04-23 15:59:55 -==> Parameters: 2717(String), 800258762609018(String), thanks(String), 431021198809040023(String), 103888376812(String), 中国农业银行股份有限公司尉犁英库勒镇（31团）支行(String), FtqRX9gpF0RGobtpQFAOoffp-T2n,FtqRX9gpF0RGobtpQFAOoffp-T2n(String), 00(String), 1(String), 20200423(String), 155941(String)
2020-04-23 15:59:55 -<==    Updates: 1
2020-04-23 15:59:55 -耗时 : 16193
2020-04-23 15:59:55 -此处进行解密+验签+身份验证
2020-04-23 15:59:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 15:59:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 15:59:55 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/getUserCardList
2020-04-23 15:59:55 -==>  Preparing: SELECT id AS card_id, user_id, account, account_name, bank_code, bank_name, card_photo, status, is_default, remark FROM t_user_card_info WHERE user_id=? order by is_default desc,id desc 
2020-04-23 15:59:55 -==> Parameters: 2717(String)
2020-04-23 15:59:55 -<==      Total: 1
2020-04-23 15:59:55 -耗时 : 29
2020-04-23 16:04:10 -此处进行解密+验签+身份验证
2020-04-23 16:04:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 16:04:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 16:04:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 16:04:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 16:04:10 -==> Parameters: 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -耗时 : 10
2020-04-23 16:04:10 -此处进行解密+验签+身份验证
2020-04-23 16:04:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2717
2020-04-23 16:04:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2717 , return
2020-04-23 16:04:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 16:04:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2717
2020-04-23 16:04:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2717 , return
2020-04-23 16:04:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 16:04:10 -==> Parameters: 2717(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:04:10 -==> Parameters: applyRateFlag(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:04:10 -==> Parameters: 0(Integer), 0(Integer), 2717(String), applyRateFlag(String)
2020-04-23 16:04:10 -<==    Updates: 1
2020-04-23 16:04:10 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 16:04:10 -==> Parameters: 2717(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:04:10 -==> Parameters: recallFlag(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:04:10 -==> Parameters: 0(Integer), 0(Integer), 2717(String), recallFlag(String)
2020-04-23 16:04:10 -<==    Updates: 1
2020-04-23 16:04:10 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 16:04:10 -==> Parameters: 
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:04:10 -==> Parameters: collegeFlag(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:04:10 -==> Parameters: 25(Integer), 25(Integer), 2717(String), collegeFlag(String)
2020-04-23 16:04:10 -<==    Updates: 1
2020-04-23 16:04:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 16:04:10 -==> Parameters: 2717(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:04:10 -==> Parameters: cardFlag(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:04:10 -==> Parameters: 0(Integer), 0(Integer), 2717(String), cardFlag(String)
2020-04-23 16:04:10 -<==    Updates: 1
2020-04-23 16:04:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:04:10 -==> Parameters: appImgFlag(String), 2717(String)
2020-04-23 16:04:10 -<==      Total: 1
2020-04-23 16:04:10 -耗时 : 86
2020-04-23 16:32:14 -此处进行解密+验签+身份验证
2020-04-23 16:32:14 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-04-23 16:32:14 -token值=======2717|AEXNKWSAN32SFLMBEFGMJ7OXKDSSMN2D
2020-04-23 16:32:14 -==>  Preparing: update t_user_info set device_token=? where id=? 
2020-04-23 16:32:14 -==> Parameters: null, 2717(String)
2020-04-23 16:32:14 -<==    Updates: 1
2020-04-23 16:32:14 -耗时 : 89
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -解密：{"version_no":"","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","login_type":"account","sign":"41AB57816D026EC0FB664984B27C4C7C","device_no":"1.1.4","device_type":"android","sys_user_account":"13322990711"}
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-04-23 16:32:25 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-04-23 16:32:25 -==> Parameters: 13322990711(String)
2020-04-23 16:32:25 -<==      Total: 1
2020-04-23 16:32:25 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-04-23 16:32:25 -==> Parameters: android(String), 1.1.4(String), (String), null, 192.168.191.1(String), 20200423(String), 163225(String), 181(Integer)
2020-04-23 16:32:25 -<==    Updates: 1
2020-04-23 16:32:25 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-04-23 16:32:25 -==> Parameters: 26(String)
2020-04-23 16:32:25 -<==      Total: 1
2020-04-23 16:32:25 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 16:32:25 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 16:32:25 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 16:32:25 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 16:32:25 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-04-23 16:32:25 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-04-23 16:32:25 -耗时 : 53
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 16:32:25 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 16:32:25 -==> Parameters: 181(String)
2020-04-23 16:32:25 -<==      Total: 1
2020-04-23 16:32:25 -耗时 : 3
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -解密：
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-04-23 16:32:25 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-04-23 16:32:25 -==> Parameters: 01(String), 01(String)
2020-04-23 16:32:25 -<==      Total: 4
2020-04-23 16:32:25 -耗时 : 16
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-04-23 16:32:25 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-04-23 16:32:25 -==> Parameters: 181(String)
2020-04-23 16:32:25 -<==      Total: 1
2020-04-23 16:32:25 -耗时 : 2
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 16:32:25 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 16:32:25 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:25 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-04-23 16:32:25 -==> Parameters: 
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-04-23 16:32:25 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-04-23 16:32:25 -==> Parameters: 181(String)
2020-04-23 16:32:25 -<==      Total: 2
2020-04-23 16:32:25 -此处进行解密+验签+身份验证
2020-04-23 16:32:25 -耗时 : 13
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:25 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-04-23 16:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-04-23 16:32:25 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 16:32:25 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:25 -<==      Total: 1
2020-04-23 16:32:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:25 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 16:32:25 -<==      Total: 2
2020-04-23 16:32:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:25 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 16:32:26 -<==    Updates: 2
2020-04-23 16:32:26 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 16:32:26 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: applyRateFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 3
2020-04-23 16:32:26 -耗时 : 100
2020-04-23 16:32:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:26 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 16:32:26 -<==    Updates: 1
2020-04-23 16:32:26 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 16:32:26 -==> Parameters: 
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:26 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 16:32:26 -<==      Total: 2
2020-04-23 16:32:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:26 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-04-23 16:32:26 -<==    Updates: 1
2020-04-23 16:32:26 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 16:32:26 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:26 -<==    Updates: 2
2020-04-23 16:32:26 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-04-23 16:32:26 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:26 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: recallFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:26 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-04-23 16:32:26 -<==    Updates: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 16:32:26 -<==    Updates: 1
2020-04-23 16:32:26 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-04-23 16:32:26 -==> Parameters: 
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -耗时 : 112
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: collegeFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:26 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-04-23 16:32:26 -<==    Updates: 1
2020-04-23 16:32:26 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-04-23 16:32:26 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: cardFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-04-23 16:32:26 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-04-23 16:32:26 -<==    Updates: 1
2020-04-23 16:32:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-04-23 16:32:26 -==> Parameters: appImgFlag(String), 181(String)
2020-04-23 16:32:26 -<==      Total: 1
2020-04-23 16:32:26 -耗时 : 201
2020-04-23 16:32:29 -此处进行解密+验签+身份验证
2020-04-23 16:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:29 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-04-23 16:32:29 -此处进行解密+验签+身份验证
2020-04-23 16:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:29 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-04-23 16:32:29 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-23 16:32:29 -==> Parameters: 202004(String), 181(String)
2020-04-23 16:32:29 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-04-23 16:32:29 -==> Parameters: 181(String)
2020-04-23 16:32:29 -<==      Total: 1
2020-04-23 16:32:29 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-04-23 16:32:29 -==> Parameters: 181(String)
2020-04-23 16:32:29 -<==      Total: 1
2020-04-23 16:32:29 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-04-23 16:32:29 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:29 -<==      Total: 1
2020-04-23 16:32:29 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-23 16:32:29 -==> Parameters: 202004(String), 181(String)
2020-04-23 16:32:29 -<==      Total: 1
2020-04-23 16:32:29 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-04-23 16:32:29 -==> Parameters: 181(String)
2020-04-23 16:32:29 -<==      Total: 1
2020-04-23 16:32:29 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-04-23 16:32:29 -==> Parameters: 202004(String), 181(String)
2020-04-23 16:32:29 -<==      Total: 1
2020-04-23 16:32:29 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-04-23 16:32:29 -==> Parameters: 181(String)
2020-04-23 16:32:29 -<==      Total: 1
2020-04-23 16:32:29 -耗时 : 42
2020-04-23 16:32:30 -<==      Total: 1
2020-04-23 16:32:30 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-04-23 16:32:30 -==> Parameters: 181(String), 181(String)
2020-04-23 16:32:30 -<==      Total: 1
2020-04-23 16:32:30 -耗时 : 1374
2020-04-23 16:32:34 -此处进行解密+验签+身份验证
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-04-23 16:32:34 -此处进行解密+验签+身份验证
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:34 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-23 16:32:34 -==> Parameters: 181(String), 20200423(String)
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-04-23 16:32:34 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-23 16:32:34 -==> Parameters: 181(String), 202004(String)
2020-04-23 16:32:34 -<==      Total: 1
2020-04-23 16:32:34 -耗时 : 7
2020-04-23 16:32:34 -<==      Total: 1
2020-04-23 16:32:34 -耗时 : 7
2020-04-23 16:32:34 -此处进行解密+验签+身份验证
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-04-23 16:32:34 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-04-23 16:32:34 -==> Parameters: 181(String), 202004(String)
2020-04-23 16:32:34 -<==      Total: 1
2020-04-23 16:32:34 -耗时 : 5
2020-04-23 16:32:34 -此处进行解密+验签+身份验证
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-04-23 16:32:34 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-04-23 16:32:34 -==> Parameters: 181(String), 20200423(String)
2020-04-23 16:32:34 -<==      Total: 1
2020-04-23 16:32:34 -耗时 : 3
2020-04-23 16:32:37 -此处进行解密+验签+身份验证
2020-04-23 16:32:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-04-23 16:32:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-04-23 16:32:37 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosList
2020-04-23 16:32:37 -==>  Preparing: SELECT t1.date, cast(IFNULL(t2.agency_performance,0.00) as char) as performance, cast(IFNULL(t2.agency_act_num,0) as char) as act_num, cast(IFNULL((t2.under_num - t2.refer_num),0) as char) as user_num from ( SELECT @num :=@num - 1, date_format( adddate(str_to_date(?,'%Y%m%d'), INTERVAL @num MONTH), '%Y%m' ) AS date FROM t_sys_assist_query, (SELECT @num := 1) t) t1 left join t_summary_user_traditional_pos_benefit_month t2 on t1.date = t2.cre_month and t2.user_id = ? and t2.pos_type is null order by t1.date 
2020-04-23 16:32:37 -==> Parameters: 20200401(String), 181(String)
2020-04-23 16:32:37 -<==      Total: 7
2020-04-23 16:32:37 -耗时 : 28
