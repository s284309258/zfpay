2020-03-19 11:36:00 -Starting LongEcologicalApplication on PC-201905161910 with PID 15844 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-19 11:36:00 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-19 11:36:00 -No active profile set, falling back to default profiles: default
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:01 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 11:36:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-19 11:36:02 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-19 11:36:02 -Finished Spring Data repository scanning in 87ms. Found 0 repository interfaces.
2020-03-19 11:36:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-19 11:36:02 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-19 11:36:02 -Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-03-19 11:36:02 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$82764c65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-19 11:36:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7cfa3105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-19 11:36:03 -Tomcat initialized with port(s): 8080 (http)
2020-03-19 11:36:03 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-19 11:36:03 -Starting service [Tomcat]
2020-03-19 11:36:03 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-19 11:36:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-19 11:36:03 -Initializing Spring embedded WebApplicationContext
2020-03-19 11:36:03 -Root WebApplicationContext: initialization completed in 3029 ms
2020-03-19 11:36:03 -Filter xssFilter was not registered (disabled)
2020-03-19 11:36:04 -HikariPool-1 - Starting...
2020-03-19 11:36:04 -HikariPool-1 - Start completed.
2020-03-19 11:36:04 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-19 11:36:04 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-19 11:36:04 -HHH000206: hibernate.properties not found
2020-03-19 11:36:05 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-19 11:36:05 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-19 11:36:05 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-19 11:36:05 -Using default implementation for ThreadExecutor
2020-03-19 11:36:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-19 11:36:05 -Quartz Scheduler v.2.3.0 created.
2020-03-19 11:36:05 -RAMJobStore initialized.
2020-03-19 11:36:05 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-19 11:36:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-19 11:36:05 -Quartz scheduler version: 2.3.0
2020-03-19 11:36:05 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1aedf08d
2020-03-19 11:36:06 -STAET TaskExecutorConfig
2020-03-19 11:36:06 -Initializing ExecutorService
2020-03-19 11:36:06 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-19 11:36:06 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-19 11:36:06 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-19 11:36:07 -Initializing ExecutorService 'taskScheduler'
2020-03-19 11:36:07 -Starting Quartz Scheduler now
2020-03-19 11:36:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-19 11:36:07 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-19 11:36:07 -Using a shared selector for servlet write/read
2020-03-19 11:36:07 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-19 11:36:07 -Started LongEcologicalApplication in 7.237 seconds (JVM running for 9.012)
2020-03-19 11:37:00 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-19 11:37:00 -Initializing Servlet 'dispatcherServlet'
2020-03-19 11:37:00 -Completed initialization in 11 ms
2020-03-19 11:37:00 -此处进行解密+验签+身份验证
2020-03-19 11:37:00 -此处进行解密+验签+身份验证
2020-03-19 11:37:00 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-19 11:37:00 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-19 11:37:00 -Starting without optional epoll library
2020-03-19 11:37:00 -Starting without optional kqueue library
2020-03-19 11:37:00 -解密：
2020-03-19 11:37:00 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 11:37:00 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 11:37:00 -==> Parameters: 04(String), 04(String)
2020-03-19 11:37:00 -<==      Total: 1
2020-03-19 11:37:00 -耗时 : 47
2020-03-19 11:37:00 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-19 11:37:00 -耗时 : 630
2020-03-19 11:37:00 -此处进行解密+验签+身份验证
2020-03-19 11:37:00 -解密：{"login_password":"","device_type":"android","device_no":"1.0.9","sign":"297C8A00EE00B654AF60204BC6E3C68C","version_no":"450000000145206","login_type":"token","token":"181|JXTN0XDRXFSKABL8LAZA9GMXEKI4837T","sys_user_account":""}
2020-03-19 11:37:00 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 11:37:00 -token值=======181|JXTN0XDRXFSKABL8LAZA9GMXEKI4837T
2020-03-19 11:37:00 -耗时 : 10
2020-03-19 11:37:01 -此处进行解密+验签+身份验证
2020-03-19 11:37:01 -解密：
2020-03-19 11:37:01 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 11:37:01 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 11:37:01 -==> Parameters: 04(String), 04(String)
2020-03-19 11:37:01 -此处进行解密+验签+身份验证
2020-03-19 11:37:01 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-19 11:37:01 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-19 11:37:01 -<==      Total: 1
2020-03-19 11:37:01 -耗时 : 13
2020-03-19 11:37:01 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-19 11:37:01 -耗时 : 13
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -解密：{"sys_user_account":"15019499979","login_password":"8A6F2805B4515AC12058E79E66539BE9","device_type":"android","device_no":"1.0.9","sign":"F1380DC96310DB3B2158845351AD5A96","version_no":"450000000145206","login_type":"account"}
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 11:37:34 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 11:37:34 -==> Parameters: 15019499979(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-19 11:37:34 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), null, 192.168.191.1(String), 20200319(String), 113734(String), 469(Integer)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 11:37:34 -==> Parameters: 25(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:37:34 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:37:34 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:37:34 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:37:34 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:37:34 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:37:34 -耗时 : 98
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:37:34 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:37:34 -==> Parameters: 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -耗时 : 12
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -解密：
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 11:37:34 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 11:37:34 -==> Parameters: 01(String), 01(String)
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:34 -<==      Total: 4
2020-03-19 11:37:34 -耗时 : 7
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 11:37:34 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 11:37:34 -==> Parameters: 469(String)
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 11:37:34 -<==      Total: 2
2020-03-19 11:37:34 -耗时 : 11
2020-03-19 11:37:34 -此处进行解密+验签+身份验证
2020-03-19 11:37:34 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:34 -==> Parameters: 
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:37:34 -<==      Total: 3
2020-03-19 11:37:34 -耗时 : 11
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:34 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:37:34 -==> Parameters: 469(String)
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:37:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -耗时 : 23
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:37:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:37:34 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:37:34 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:37:34 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:37:34 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:37:34 -==> Parameters: 
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:37:34 -==> Parameters: 
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:37:34 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:37:34 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -耗时 : 144
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:37:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:37:34 -<==    Updates: 1
2020-03-19 11:37:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:37:34 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:37:34 -<==      Total: 1
2020-03-19 11:37:34 -耗时 : 212
2020-03-19 11:37:46 -此处进行解密+验签+身份验证
2020-03-19 11:37:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:46 -此处进行解密+验签+身份验证
2020-03-19 11:37:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 11:37:46 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 11:37:46 -==> Parameters: 469(String)
2020-03-19 11:37:46 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 11:37:46 -<==      Total: 1
2020-03-19 11:37:46 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 11:37:46 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:46 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 11:37:46 -==> Parameters: 202003(String), 469(String)
2020-03-19 11:37:46 -<==      Total: 1
2020-03-19 11:37:46 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 11:37:46 -==> Parameters: 469(String)
2020-03-19 11:37:46 -<==      Total: 0
2020-03-19 11:37:46 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 11:37:46 -==> Parameters: 202003(String), 469(String)
2020-03-19 11:37:46 -<==      Total: 1
2020-03-19 11:37:46 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 11:37:46 -==> Parameters: 469(String)
2020-03-19 11:37:46 -<==      Total: 1
2020-03-19 11:37:46 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 11:37:46 -==> Parameters: 202003(String), 469(String)
2020-03-19 11:37:46 -<==      Total: 1
2020-03-19 11:37:46 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 11:37:46 -==> Parameters: 469(String)
2020-03-19 11:37:46 -<==      Total: 0
2020-03-19 11:37:46 -耗时 : 92
2020-03-19 11:37:46 -<==      Total: 1
2020-03-19 11:37:46 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 11:37:46 -==> Parameters: 469(String), 469(String)
2020-03-19 11:37:46 -<==      Total: 1
2020-03-19 11:37:46 -耗时 : 209
2020-03-19 11:37:58 -此处进行解密+验签+身份验证
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:58 -此处进行解密+验签+身份验证
2020-03-19 11:37:58 -此处进行解密+验签+身份验证
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:58 -此处进行解密+验签+身份验证
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:37:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 11:37:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 11:37:58 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 11:37:58 -==> Parameters: 469(String)
2020-03-19 11:37:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 11:37:58 -<==      Total: 1
2020-03-19 11:37:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 11:37:58 -耗时 : 13
2020-03-19 11:37:58 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 11:37:58 -==> Parameters: 469(String), 202003(String)
2020-03-19 11:37:58 -<==      Total: 1
2020-03-19 11:37:58 -耗时 : 8
2020-03-19 11:37:58 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 11:37:58 -==> Parameters: 469(String), 202003(String)
2020-03-19 11:37:58 -<==      Total: 0
2020-03-19 11:37:58 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 11:37:58 -==> Parameters: 469(String), 202003(String)
2020-03-19 11:37:58 -耗时 : 24
2020-03-19 11:37:58 -<==      Total: 1
2020-03-19 11:37:58 -耗时 : 41
2020-03-19 11:38:05 -此处进行解密+验签+身份验证
2020-03-19 11:38:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:05 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-03-19 11:38:05 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-19 11:38:05 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-19 11:38:05 -<==      Total: 0
2020-03-19 11:38:05 -耗时 : 414
2020-03-19 11:38:07 -此处进行解密+验签+身份验证
2020-03-19 11:38:07 -此处进行解密+验签+身份验证
2020-03-19 11:38:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:07 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:38:07 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:38:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:38:07 -==> Parameters: 469(String)
2020-03-19 11:38:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:38:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -耗时 : 12
2020-03-19 11:38:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:07 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:07 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:07 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:38:07 -<==    Updates: 1
2020-03-19 11:38:07 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:38:07 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:07 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:07 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:38:07 -<==    Updates: 1
2020-03-19 11:38:07 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:38:07 -==> Parameters: 
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:07 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:07 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:38:07 -<==    Updates: 1
2020-03-19 11:38:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:07 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:07 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:07 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:38:07 -<==    Updates: 1
2020-03-19 11:38:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:07 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:38:07 -<==      Total: 1
2020-03-19 11:38:07 -耗时 : 221
2020-03-19 11:38:11 -此处进行解密+验签+身份验证
2020-03-19 11:38:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:11 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-03-19 11:38:11 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-19 11:38:11 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-19 11:38:11 -<==      Total: 0
2020-03-19 11:38:11 -耗时 : 20
2020-03-19 11:38:18 -此处进行解密+验签+身份验证
2020-03-19 11:38:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:18 -此处进行解密+验签+身份验证
2020-03-19 11:38:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:18 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:38:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:38:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:38:18 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:38:18 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:38:18 -==> Parameters: 469(String)
2020-03-19 11:38:18 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:18 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -耗时 : 10
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:18 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:18 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:38:18 -<==    Updates: 1
2020-03-19 11:38:18 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:38:18 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:18 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:18 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:38:18 -<==    Updates: 1
2020-03-19 11:38:18 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:38:18 -==> Parameters: 
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:18 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:18 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:38:18 -<==    Updates: 1
2020-03-19 11:38:18 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:18 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:18 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:18 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:38:18 -<==    Updates: 1
2020-03-19 11:38:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:18 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:38:18 -<==      Total: 1
2020-03-19 11:38:18 -耗时 : 222
2020-03-19 11:38:26 -此处进行解密+验签+身份验证
2020-03-19 11:38:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:26 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getDeductEposList
2020-03-19 11:38:26 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.assess_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_deduct_record t INNER JOIN t_user_trapos_assess_info t1 on t.assess_id = t1.id WHERE t.user_id = ? and t.pos_type='03' and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date,t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_deduct_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id where t.user_id=? and t.pos_type='03' and t.cre_date between ? and ? ) tt,(SELECT @rownum:=0) r order by tt.order_id desc ) t limit 0,10 
2020-03-19 11:38:26 -==> Parameters: 469(String), 20200301(String), 20200331(String), 469(String), 20200301(String), 20200331(String)
2020-03-19 11:38:26 -<==      Total: 0
2020-03-19 11:38:26 -耗时 : 10
2020-03-19 11:38:37 -此处进行解密+验签+身份验证
2020-03-19 11:38:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:37 -此处进行解密+验签+身份验证
2020-03-19 11:38:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:37 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:38:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:38:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:38:37 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:38:37 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:38:37 -==> Parameters: 469(String)
2020-03-19 11:38:37 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:37 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:37 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -耗时 : 20
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:37 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:38:37 -<==    Updates: 1
2020-03-19 11:38:37 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:38:37 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:37 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:37 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:38:37 -<==    Updates: 1
2020-03-19 11:38:37 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:38:37 -==> Parameters: 
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:37 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:37 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:38:37 -<==    Updates: 1
2020-03-19 11:38:37 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:37 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:37 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:37 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:38:37 -<==    Updates: 1
2020-03-19 11:38:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:37 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:38:37 -<==      Total: 1
2020-03-19 11:38:37 -耗时 : 131
2020-03-19 11:38:39 -此处进行解密+验签+身份验证
2020-03-19 11:38:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:39 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:38:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:38:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:38:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:39 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:39 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:39 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:38:39 -<==    Updates: 1
2020-03-19 11:38:39 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:38:39 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:39 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:39 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:38:39 -<==    Updates: 1
2020-03-19 11:38:39 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:38:39 -==> Parameters: 
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:39 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:39 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:38:39 -<==    Updates: 1
2020-03-19 11:38:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:38:39 -==> Parameters: 469(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:39 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:38:39 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:38:39 -<==    Updates: 1
2020-03-19 11:38:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:38:39 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:38:39 -<==      Total: 1
2020-03-19 11:38:39 -耗时 : 123
2020-03-19 11:38:48 -此处进行解密+验签+身份验证
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:48 -此处进行解密+验签+身份验证
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:48 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 11:38:48 -此处进行解密+验签+身份验证
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:48 -此处进行解密+验签+身份验证
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:38:48 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:38:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:38:48 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-19 11:38:48 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:38:48 -==> Parameters: 25(String), 20200319(String)
2020-03-19 11:38:48 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:38:48 -==> Parameters: 469(String)
2020-03-19 11:38:48 -<==      Total: 0
2020-03-19 11:38:48 -耗时 : 30
2020-03-19 11:38:48 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-19 11:38:48 -==> Parameters: 25(String), 20200319(String)
2020-03-19 11:38:48 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:38:48 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:38:48 -==> Parameters: 469(String)
2020-03-19 11:38:48 -<==      Total: 0
2020-03-19 11:38:48 -耗时 : 27
2020-03-19 11:38:48 -<==      Total: 0
2020-03-19 11:38:48 -耗时 : 9
2020-03-19 11:38:48 -<==      Total: 0
2020-03-19 11:38:48 -耗时 : 20
2020-03-19 11:39:05 -此处进行解密+验签+身份验证
2020-03-19 11:39:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-19 11:39:05 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:39:05 -==> Parameters: 469(String)
2020-03-19 11:39:05 -<==      Total: 0
2020-03-19 11:39:05 -耗时 : 18
2020-03-19 11:39:11 -此处进行解密+验签+身份验证
2020-03-19 11:39:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:11 -此处进行解密+验签+身份验证
2020-03-19 11:39:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:11 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:39:11 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:11 -==> Parameters: 469(String)
2020-03-19 11:39:11 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:39:11 -<==      Total: 0
2020-03-19 11:39:11 -耗时 : 11
2020-03-19 11:39:11 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:39:11 -==> Parameters: 469(String)
2020-03-19 11:39:11 -<==      Total: 0
2020-03-19 11:39:11 -耗时 : 20
2020-03-19 11:39:12 -此处进行解密+验签+身份验证
2020-03-19 11:39:12 -此处进行解密+验签+身份验证
2020-03-19 11:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:12 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:39:12 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:39:12 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:39:12 -==> Parameters: 469(String)
2020-03-19 11:39:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -耗时 : 10
2020-03-19 11:39:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:39:12 -==> Parameters: 469(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:39:12 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:39:12 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:39:12 -<==    Updates: 1
2020-03-19 11:39:12 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:39:12 -==> Parameters: 469(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:39:12 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:39:12 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:39:12 -<==    Updates: 1
2020-03-19 11:39:12 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:39:12 -==> Parameters: 
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:39:12 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:39:12 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:39:12 -<==    Updates: 1
2020-03-19 11:39:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:39:12 -==> Parameters: 469(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:39:12 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:39:12 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:39:12 -<==    Updates: 1
2020-03-19 11:39:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:39:12 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:39:12 -<==      Total: 1
2020-03-19 11:39:12 -耗时 : 217
2020-03-19 11:39:15 -此处进行解密+验签+身份验证
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:15 -此处进行解密+验签+身份验证
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:15 -此处进行解密+验签+身份验证
2020-03-19 11:39:15 -此处进行解密+验签+身份验证
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:15 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:39:15 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:39:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:39:15 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:39:15 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:39:16 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:39:16 -==> Parameters: 469(String)
2020-03-19 11:39:16 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:16 -==> Parameters: 469(String)
2020-03-19 11:39:16 -<==      Total: 0
2020-03-19 11:39:16 -耗时 : 9
2020-03-19 11:39:16 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-19 11:39:16 -==> Parameters: 25(String), 20200319(String)
2020-03-19 11:39:16 -<==      Total: 0
2020-03-19 11:39:16 -耗时 : 10
2020-03-19 11:39:16 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-19 11:39:16 -==> Parameters: 25(String), 20200319(String)
2020-03-19 11:39:16 -<==      Total: 0
2020-03-19 11:39:16 -耗时 : 36
2020-03-19 11:39:16 -<==      Total: 0
2020-03-19 11:39:16 -耗时 : 35
2020-03-19 11:39:20 -此处进行解密+验签+身份验证
2020-03-19 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:20 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-19 11:39:20 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:39:20 -==> Parameters: 469(String)
2020-03-19 11:39:20 -<==      Total: 0
2020-03-19 11:39:20 -耗时 : 18
2020-03-19 11:39:26 -此处进行解密+验签+身份验证
2020-03-19 11:39:26 -此处进行解密+验签+身份验证
2020-03-19 11:39:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:26 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:39:26 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:26 -==> Parameters: 469(String)
2020-03-19 11:39:26 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:39:26 -<==      Total: 0
2020-03-19 11:39:26 -耗时 : 9
2020-03-19 11:39:26 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:39:26 -==> Parameters: 469(String)
2020-03-19 11:39:26 -<==      Total: 0
2020-03-19 11:39:26 -耗时 : 20
2020-03-19 11:39:28 -此处进行解密+验签+身份验证
2020-03-19 11:39:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:28 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 11:39:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:39:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:39:28 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type='epos' and ? between start_date and end_date 
2020-03-19 11:39:28 -==> Parameters: 25(String), 20200319(String)
2020-03-19 11:39:28 -<==      Total: 0
2020-03-19 11:39:28 -耗时 : 29
2020-03-19 11:39:32 -此处进行解密+验签+身份验证
2020-03-19 11:39:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:32 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-19 11:39:32 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:32 -==> Parameters: 469(String)
2020-03-19 11:39:32 -<==      Total: 0
2020-03-19 11:39:32 -耗时 : 10
2020-03-19 11:39:38 -此处进行解密+验签+身份验证
2020-03-19 11:39:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:38 -此处进行解密+验签+身份验证
2020-03-19 11:39:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:38 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:39:38 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:38 -==> Parameters: 469(String)
2020-03-19 11:39:38 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:39:38 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:39:38 -==> Parameters: 469(String)
2020-03-19 11:39:38 -<==      Total: 0
2020-03-19 11:39:38 -<==      Total: 0
2020-03-19 11:39:38 -耗时 : 10
2020-03-19 11:39:38 -耗时 : 18
2020-03-19 11:39:43 -此处进行解密+验签+身份验证
2020-03-19 11:39:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:43 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-19 11:39:43 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:43 -==> Parameters: 469(String)
2020-03-19 11:39:43 -<==      Total: 0
2020-03-19 11:39:43 -耗时 : 10
2020-03-19 11:39:49 -此处进行解密+验签+身份验证
2020-03-19 11:39:49 -此处进行解密+验签+身份验证
2020-03-19 11:39:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:49 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:39:49 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:39:49 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:39:49 -==> Parameters: 469(String)
2020-03-19 11:39:49 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:49 -==> Parameters: 469(String)
2020-03-19 11:39:49 -<==      Total: 0
2020-03-19 11:39:49 -耗时 : 19
2020-03-19 11:39:49 -<==      Total: 0
2020-03-19 11:39:49 -耗时 : 20
2020-03-19 11:39:55 -此处进行解密+验签+身份验证
2020-03-19 11:39:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:39:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:39:55 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-19 11:39:55 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:39:55 -==> Parameters: 469(String)
2020-03-19 11:39:55 -<==      Total: 0
2020-03-19 11:39:55 -耗时 : 20
2020-03-19 11:40:05 -此处进行解密+验签+身份验证
2020-03-19 11:40:05 -此处进行解密+验签+身份验证
2020-03-19 11:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:40:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:40:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:40:05 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:40:05 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:40:05 -==> Parameters: 469(String)
2020-03-19 11:40:05 -==> Parameters: 469(String)
2020-03-19 11:40:05 -<==      Total: 0
2020-03-19 11:40:05 -耗时 : 10
2020-03-19 11:40:05 -<==      Total: 0
2020-03-19 11:40:05 -耗时 : 20
2020-03-19 11:40:09 -此处进行解密+验签+身份验证
2020-03-19 11:40:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:40:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:40:09 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-19 11:40:09 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:40:09 -==> Parameters: 469(String)
2020-03-19 11:40:09 -<==      Total: 0
2020-03-19 11:40:09 -耗时 : 18
2020-03-19 11:40:14 -此处进行解密+验签+身份验证
2020-03-19 11:40:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:40:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:40:14 -此处进行解密+验签+身份验证
2020-03-19 11:40:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:40:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:40:14 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:40:14 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:40:14 -==> Parameters: 469(String)
2020-03-19 11:40:14 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:40:14 -<==      Total: 0
2020-03-19 11:40:14 -耗时 : 9
2020-03-19 11:40:14 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:40:14 -==> Parameters: 469(String)
2020-03-19 11:40:14 -<==      Total: 0
2020-03-19 11:40:14 -耗时 : 19
2020-03-19 11:40:20 -此处进行解密+验签+身份验证
2020-03-19 11:40:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:40:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:40:20 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 11:40:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:40:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:40:21 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type='epos' and ? between start_date and end_date 
2020-03-19 11:40:21 -==> Parameters: 25(String), 20200319(String)
2020-03-19 11:40:21 -<==      Total: 0
2020-03-19 11:40:21 -耗时 : 30
2020-03-19 11:40:27 -此处进行解密+验签+身份验证
2020-03-19 11:40:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:40:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:40:27 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-19 11:40:27 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:40:27 -==> Parameters: 469(String)
2020-03-19 11:40:27 -<==      Total: 0
2020-03-19 11:40:27 -耗时 : 19
2020-03-19 11:41:05 -此处进行解密+验签+身份验证
2020-03-19 11:41:05 -此处进行解密+验签+身份验证
2020-03-19 11:41:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:41:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:41:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:41:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:41:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:41:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:41:05 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:41:05 -==> Parameters: 469(String)
2020-03-19 11:41:05 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:41:05 -==> Parameters: 469(String)
2020-03-19 11:41:05 -<==      Total: 0
2020-03-19 11:41:05 -耗时 : 10
2020-03-19 11:41:05 -<==      Total: 0
2020-03-19 11:41:05 -耗时 : 19
2020-03-19 11:41:19 -此处进行解密+验签+身份验证
2020-03-19 11:41:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:41:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:41:19 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-19 11:41:19 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:41:19 -==> Parameters: 469(String)
2020-03-19 11:41:19 -<==      Total: 0
2020-03-19 11:41:19 -耗时 : 19
2020-03-19 11:41:35 -此处进行解密+验签+身份验证
2020-03-19 11:41:35 -此处进行解密+验签+身份验证
2020-03-19 11:41:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:41:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:41:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:41:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:41:36 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:41:36 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:41:36 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:41:36 -==> Parameters: 469(String)
2020-03-19 11:41:36 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:41:36 -==> Parameters: 469(String)
2020-03-19 11:41:36 -<==      Total: 0
2020-03-19 11:41:36 -耗时 : 10
2020-03-19 11:41:36 -<==      Total: 0
2020-03-19 11:41:36 -耗时 : 19
2020-03-19 11:41:45 -此处进行解密+验签+身份验证
2020-03-19 11:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:41:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:41:45 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:41:45 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type='epos' order by t.id desc limit 0,10 
2020-03-19 11:41:45 -==> Parameters: 469(String)
2020-03-19 11:41:45 -<==      Total: 0
2020-03-19 11:41:45 -耗时 : 18
2020-03-19 11:41:56 -此处进行解密+验签+身份验证
2020-03-19 11:41:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:41:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:41:56 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:41:56 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:41:56 -==> Parameters: 469(String)
2020-03-19 11:41:56 -<==      Total: 0
2020-03-19 11:41:56 -耗时 : 15
2020-03-19 11:43:14 -此处进行解密+验签+身份验证
2020-03-19 11:43:14 -此处进行解密+验签+身份验证
2020-03-19 11:43:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:43:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:43:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:43:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:43:14 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:43:14 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:43:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:43:14 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:43:14 -==> Parameters: 469(String)
2020-03-19 11:43:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:43:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:43:14 -==> Parameters: 469(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -耗时 : 20
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:14 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:14 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:43:14 -<==    Updates: 1
2020-03-19 11:43:14 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:43:14 -==> Parameters: 469(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:14 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:14 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:43:14 -<==    Updates: 1
2020-03-19 11:43:14 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:43:14 -==> Parameters: 
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:14 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:14 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:43:14 -<==    Updates: 1
2020-03-19 11:43:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:43:14 -==> Parameters: 469(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:14 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:14 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:43:14 -<==    Updates: 1
2020-03-19 11:43:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:14 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:43:14 -<==      Total: 1
2020-03-19 11:43:14 -耗时 : 122
2020-03-19 11:43:31 -此处进行解密+验签+身份验证
2020-03-19 11:43:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:43:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:43:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:43:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:43:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:43:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:43:31 -==> Parameters: 469(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:31 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:31 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:43:31 -<==    Updates: 1
2020-03-19 11:43:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:43:31 -==> Parameters: 469(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:31 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:31 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:43:31 -<==    Updates: 1
2020-03-19 11:43:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:43:31 -==> Parameters: 
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:31 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:31 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:43:31 -<==    Updates: 1
2020-03-19 11:43:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:43:31 -==> Parameters: 469(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:31 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:43:31 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:43:31 -<==    Updates: 1
2020-03-19 11:43:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:43:31 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:43:31 -<==      Total: 1
2020-03-19 11:43:31 -耗时 : 208
2020-03-19 11:43:38 -此处进行解密+验签+身份验证
2020-03-19 11:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:43:38 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-19 11:43:38 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-19 11:43:38 -==> Parameters: 1(String), 469(String), collegeFlag(String)
2020-03-19 11:43:38 -<==    Updates: 1
2020-03-19 11:43:38 -耗时 : 25
2020-03-19 11:43:38 -此处进行解密+验签+身份验证
2020-03-19 11:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:43:38 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeList
2020-03-19 11:43:38 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_list_0
2020-03-19 11:43:38 -List com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeList(Map) enable cache service,has cacheKey:zfpay_sys_money_locker_college_list_0 , return
2020-03-19 11:43:38 -耗时 : 14
2020-03-19 11:43:47 -此处进行解密+验签+身份验证
2020-03-19 11:43:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:43:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:43:47 -请求地址 : http://192.168.191.1:8080/api/sys/moneylockercollege/getMoneyLockerCollegeDetail
2020-03-19 11:43:47 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,cacheKey:zfpay_sys_money_locker_college_26
2020-03-19 11:43:47 -Map com.example.longecological.service.moneylocker.impl.MoneyLockerCollegeCacheServiceImpl.getMoneyLockerCollegeDetail(Map) enable cache service,has cacheKey:zfpay_sys_money_locker_college_26 , return
2020-03-19 11:43:47 -耗时 : 8
2020-03-19 11:44:02 -此处进行解密+验签+身份验证
2020-03-19 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:44:02 -此处进行解密+验签+身份验证
2020-03-19 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 11:44:02 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:44:02 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:44:02 -==> Parameters: 469(String)
2020-03-19 11:44:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 11:44:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -耗时 : 19
2020-03-19 11:44:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:44:02 -==> Parameters: 469(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:44:02 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:44:02 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 11:44:02 -<==    Updates: 1
2020-03-19 11:44:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:44:02 -==> Parameters: 469(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:44:02 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:44:02 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 11:44:02 -<==    Updates: 1
2020-03-19 11:44:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:44:02 -==> Parameters: 
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:44:02 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:44:02 -==> Parameters: 0(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 11:44:02 -<==    Updates: 1
2020-03-19 11:44:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:44:02 -==> Parameters: 469(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:44:02 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:44:02 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 11:44:02 -<==    Updates: 1
2020-03-19 11:44:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:44:02 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 11:44:02 -<==      Total: 1
2020-03-19 11:44:02 -耗时 : 133
2020-03-19 11:45:23 -此处进行解密+验签+身份验证
2020-03-19 11:45:23 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-03-19 11:45:23 -token值=======469|S0R3QLVZGYZA4C9SVTZNAHH7VTSLVE6X
2020-03-19 11:45:23 -==>  Preparing: update t_user_info set device_token=? where id=? 
2020-03-19 11:45:23 -==> Parameters: null, 469(String)
2020-03-19 11:45:24 -<==    Updates: 1
2020-03-19 11:45:24 -耗时 : 40
2020-03-19 11:45:30 -此处进行解密+验签+身份验证
2020-03-19 11:45:30 -解密：{"sys_user_account":"13322990711","login_password":"8A6F2805B4515AC12058E79E66539BE9","device_type":"android","device_no":"1.0.9","sign":"D8C941101DA33D1D3D1FE861A1D9D6A8","version_no":"450000000145206","login_type":"account"}
2020-03-19 11:45:30 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 11:45:30 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 11:45:30 -==> Parameters: 13322990711(String)
2020-03-19 11:45:30 -<==      Total: 1
2020-03-19 11:45:30 -耗时 : 12
2020-03-19 11:45:38 -此处进行解密+验签+身份验证
2020-03-19 11:45:38 -解密：{"sys_user_account":"13322990711","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","device_type":"android","device_no":"1.0.9","sign":"EFF4553AA97C43A56716153EB440498E","version_no":"450000000145206","login_type":"account"}
2020-03-19 11:45:38 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 11:45:38 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 11:45:38 -==> Parameters: 13322990711(String)
2020-03-19 11:45:38 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-19 11:45:39 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), null, 192.168.191.1(String), 20200319(String), 114539(String), 181(Integer)
2020-03-19 11:45:39 -<==    Updates: 1
2020-03-19 11:45:39 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 11:45:39 -==> Parameters: 26(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:45:39 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:45:39 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:45:39 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:45:39 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:45:39 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:45:39 -耗时 : 93
2020-03-19 11:45:39 -此处进行解密+验签+身份验证
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:45:39 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:45:39 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:45:39 -==> Parameters: 181(String)
2020-03-19 11:45:39 -此处进行解密+验签+身份验证
2020-03-19 11:45:39 -解密：
2020-03-19 11:45:39 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 11:45:39 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 11:45:39 -==> Parameters: 01(String), 01(String)
2020-03-19 11:45:39 -<==      Total: 4
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -耗时 : 10
2020-03-19 11:45:39 -耗时 : 13
2020-03-19 11:45:39 -此处进行解密+验签+身份验证
2020-03-19 11:45:39 -此处进行解密+验签+身份验证
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:45:39 -此处进行解密+验签+身份验证
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:45:39 -此处进行解密+验签+身份验证
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:45:39 -此处进行解密+验签+身份验证
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:45:39 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 11:45:39 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 11:45:39 -==> Parameters: 181(String)
2020-03-19 11:45:39 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 11:45:39 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:45:39 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:45:39 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 11:45:39 -==> Parameters: 
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 11:45:39 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 11:45:39 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:45:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 11:45:39 -<==      Total: 3
2020-03-19 11:45:39 -==> Parameters: 181(String)
2020-03-19 11:45:39 -耗时 : 7
2020-03-19 11:45:39 -<==      Total: 2
2020-03-19 11:45:39 -耗时 : 14
2020-03-19 11:45:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:45:39 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -耗时 : 12
2020-03-19 11:45:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:45:39 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 2
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 11:45:39 -<==    Updates: 2
2020-03-19 11:45:39 -<==      Total: 2
2020-03-19 11:45:39 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:45:39 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 11:45:39 -<==    Updates: 2
2020-03-19 11:45:39 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:45:39 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:39 -<==    Updates: 1
2020-03-19 11:45:39 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:45:39 -==> Parameters: 
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 11:45:39 -<==    Updates: 1
2020-03-19 11:45:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:45:39 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 11:45:39 -<==    Updates: 1
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 
2020-03-19 11:45:39 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 11:45:39 -<==    Updates: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -耗时 : 123
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 11:45:39 -<==    Updates: 1
2020-03-19 11:45:39 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:45:39 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:39 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 11:45:39 -<==    Updates: 1
2020-03-19 11:45:39 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:39 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 11:45:39 -<==      Total: 1
2020-03-19 11:45:39 -耗时 : 206
2020-03-19 11:45:58 -此处进行解密+验签+身份验证
2020-03-19 11:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 11:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 11:45:58 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:45:58 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:58 -<==      Total: 1
2020-03-19 11:45:58 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:58 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 11:45:58 -<==      Total: 2
2020-03-19 11:45:58 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:58 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 11:45:58 -<==    Updates: 2
2020-03-19 11:45:58 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:45:58 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:59 -<==      Total: 1
2020-03-19 11:45:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:59 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 11:45:59 -<==      Total: 1
2020-03-19 11:45:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:59 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 11:45:59 -<==    Updates: 1
2020-03-19 11:45:59 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:45:59 -==> Parameters: 
2020-03-19 11:45:59 -<==      Total: 1
2020-03-19 11:45:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:59 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 11:45:59 -<==      Total: 1
2020-03-19 11:45:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:59 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 11:45:59 -<==    Updates: 1
2020-03-19 11:45:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:45:59 -==> Parameters: 181(String), 181(String)
2020-03-19 11:45:59 -<==      Total: 1
2020-03-19 11:45:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:59 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 11:45:59 -<==      Total: 1
2020-03-19 11:45:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:45:59 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 11:45:59 -<==    Updates: 1
2020-03-19 11:45:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:45:59 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 11:45:59 -<==      Total: 1
2020-03-19 11:45:59 -耗时 : 206
2020-03-19 11:46:13 -此处进行解密+验签+身份验证
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:46:13 -此处进行解密+验签+身份验证
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:46:13 -此处进行解密+验签+身份验证
2020-03-19 11:46:13 -此处进行解密+验签+身份验证
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:46:13 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 11:46:13 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 11:46:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 11:46:13 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:46:13 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:46:13 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-19 11:46:13 -==> Parameters: 26(String), 20200319(String)
2020-03-19 11:46:13 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 11:46:13 -==> Parameters: 181(String)
2020-03-19 11:46:13 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:46:13 -==> Parameters: 181(String)
2020-03-19 11:46:13 -<==      Total: 0
2020-03-19 11:46:13 -耗时 : 24
2020-03-19 11:46:13 -<==      Total: 0
2020-03-19 11:46:13 -耗时 : 11
2020-03-19 11:46:13 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-19 11:46:13 -==> Parameters: 26(String), 20200319(String)
2020-03-19 11:46:13 -<==      Total: 0
2020-03-19 11:46:13 -耗时 : 19
2020-03-19 11:46:13 -<==      Total: 0
2020-03-19 11:46:13 -耗时 : 37
2020-03-19 11:46:19 -此处进行解密+验签+身份验证
2020-03-19 11:46:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:46:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:46:19 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-19 11:46:19 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 11:46:19 -==> Parameters: 181(String)
2020-03-19 11:46:19 -<==      Total: 2
2020-03-19 11:46:19 -耗时 : 10
2020-03-19 11:59:40 -此处进行解密+验签+身份验证
2020-03-19 11:59:40 -此处进行解密+验签+身份验证
2020-03-19 11:59:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:40 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 11:59:40 -耗时 : 0
2020-03-19 11:59:40 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 11:59:40 -耗时 : 0
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -解密：{"sys_user_account":"13322990711","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","device_type":"android","device_no":"1.0.9","sign":"EFF4553AA97C43A56716153EB440498E","version_no":"450000000145206","login_type":"account"}
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1f71c8a0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@20aaa6e2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@318f5e9f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@78a3b15e (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@42218d09 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@37c9be19 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7cf975d9 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@19350259 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@57b28db3 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2d71d82a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 11:59:56 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 11:59:56 -==> Parameters: 13322990711(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-19 11:59:56 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), null, 192.168.191.1(String), 20200319(String), 115956(String), 181(Integer)
2020-03-19 11:59:56 -<==    Updates: 1
2020-03-19 11:59:56 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 11:59:56 -==> Parameters: 26(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:59:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:59:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:59:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:59:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 11:59:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 11:59:56 -耗时 : 134
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -解密：
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 11:59:56 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 11:59:56 -==> Parameters: 01(String), 01(String)
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:59:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:59:56 -==> Parameters: 181(String)
2020-03-19 11:59:56 -<==      Total: 4
2020-03-19 11:59:56 -耗时 : 7
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -耗时 : 13
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:56 -此处进行解密+验签+身份验证
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 11:59:56 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 11:59:56 -==> Parameters: 181(String)
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 11:59:56 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 11:59:56 -==> Parameters: 
2020-03-19 11:59:56 -<==      Total: 2
2020-03-19 11:59:56 -耗时 : 7
2020-03-19 11:59:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 11:59:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 11:59:56 -==> Parameters: 181(String)
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 11:59:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -耗时 : 7
2020-03-19 11:59:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:59:56 -==> Parameters: 181(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 3
2020-03-19 11:59:56 -耗时 : 14
2020-03-19 11:59:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:59:56 -==> Parameters: 181(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 2
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 11:59:56 -<==    Updates: 2
2020-03-19 11:59:56 -<==      Total: 2
2020-03-19 11:59:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 181(String), 181(String)
2020-03-19 11:59:56 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 11:59:56 -<==    Updates: 2
2020-03-19 11:59:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 11:59:56 -==> Parameters: 181(String), 181(String)
2020-03-19 11:59:56 -<==    Updates: 1
2020-03-19 11:59:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:59:56 -==> Parameters: 
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 11:59:56 -<==    Updates: 1
2020-03-19 11:59:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:59:56 -==> Parameters: 181(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 11:59:56 -<==    Updates: 1
2020-03-19 11:59:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 11:59:56 -==> Parameters: 
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 11:59:56 -<==    Updates: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -耗时 : 127
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 11:59:56 -<==    Updates: 1
2020-03-19 11:59:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 11:59:56 -==> Parameters: 181(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 11:59:56 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 11:59:56 -<==    Updates: 1
2020-03-19 11:59:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 11:59:56 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 11:59:56 -<==      Total: 1
2020-03-19 11:59:56 -耗时 : 207
2020-03-19 12:00:00 -此处进行解密+验签+身份验证
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:00:00 -此处进行解密+验签+身份验证
2020-03-19 12:00:00 -此处进行解密+验签+身份验证
2020-03-19 12:00:00 -此处进行解密+验签+身份验证
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:00:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:00:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 12:00:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 12:00:00 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 12:00:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 12:00:00 -==> Parameters: 181(String)
2020-03-19 12:00:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 12:00:00 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 12:00:00 -==> Parameters: 181(String), 202003(String)
2020-03-19 12:00:00 -<==      Total: 1
2020-03-19 12:00:00 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 12:00:00 -耗时 : 10
2020-03-19 12:00:00 -==> Parameters: 181(String), 202003(String)
2020-03-19 12:00:00 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 12:00:00 -==> Parameters: 181(String), 202003(String)
2020-03-19 12:00:00 -<==      Total: 1
2020-03-19 12:00:00 -耗时 : 12
2020-03-19 12:00:00 -<==      Total: 1
2020-03-19 12:00:00 -耗时 : 19
2020-03-19 12:00:00 -<==      Total: 1
2020-03-19 12:00:00 -耗时 : 21
2020-03-19 12:00:01 -此处进行解密+验签+身份验证
2020-03-19 12:00:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:00:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:00:01 -此处进行解密+验签+身份验证
2020-03-19 12:00:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:00:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:00:01 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 12:00:01 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 12:00:01 -==> Parameters: 202003(String), 181(String)
2020-03-19 12:00:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 12:00:01 -==> Parameters: 181(String)
2020-03-19 12:00:01 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 12:00:01 -==> Parameters: 181(String)
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 12:00:01 -==> Parameters: 202003(String), 181(String)
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 12:00:01 -==> Parameters: 181(String)
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 12:00:01 -==> Parameters: 181(String), 181(String)
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 12:00:01 -==> Parameters: 202003(String), 181(String)
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 12:00:01 -==> Parameters: 181(String)
2020-03-19 12:00:01 -<==      Total: 0
2020-03-19 12:00:01 -耗时 : 49
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 12:00:01 -==> Parameters: 181(String), 181(String)
2020-03-19 12:00:01 -<==      Total: 1
2020-03-19 12:00:01 -耗时 : 254
2020-03-19 12:00:04 -此处进行解密+验签+身份验证
2020-03-19 12:00:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:00:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:00:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 12:00:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 12:00:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 12:00:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 12:00:04 -==> Parameters: 181(String), 181(String)
2020-03-19 12:00:04 -<==      Total: 1
2020-03-19 12:00:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:00:04 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 12:00:04 -<==      Total: 2
2020-03-19 12:00:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:00:04 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 12:00:04 -<==    Updates: 2
2020-03-19 12:00:04 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 12:00:04 -==> Parameters: 181(String), 181(String)
2020-03-19 12:00:05 -<==      Total: 1
2020-03-19 12:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:00:05 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 12:00:05 -<==      Total: 1
2020-03-19 12:00:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:00:05 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 12:00:05 -<==    Updates: 1
2020-03-19 12:00:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 12:00:05 -==> Parameters: 
2020-03-19 12:00:05 -<==      Total: 1
2020-03-19 12:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:00:05 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 12:00:05 -<==      Total: 1
2020-03-19 12:00:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:00:05 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 12:00:05 -<==    Updates: 1
2020-03-19 12:00:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 12:00:05 -==> Parameters: 181(String), 181(String)
2020-03-19 12:00:05 -<==      Total: 1
2020-03-19 12:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:00:05 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 12:00:05 -<==      Total: 1
2020-03-19 12:00:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:00:05 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 12:00:05 -<==    Updates: 1
2020-03-19 12:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:00:05 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 12:00:05 -<==      Total: 1
2020-03-19 12:00:05 -耗时 : 215
2020-03-19 12:01:19 -此处进行解密+验签+身份验证
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:19 -此处进行解密+验签+身份验证
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:19 -此处进行解密+验签+身份验证
2020-03-19 12:01:19 -此处进行解密+验签+身份验证
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:19 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 12:01:19 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 12:01:19 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 12:01:19 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 12:01:19 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 12:01:19 -==> Parameters: 181(String)
2020-03-19 12:01:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 12:01:19 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 12:01:19 -==> Parameters: 181(String)
2020-03-19 12:01:19 -<==      Total: 0
2020-03-19 12:01:19 -耗时 : 11
2020-03-19 12:01:19 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-19 12:01:19 -==> Parameters: 26(String), 20200319(String)
2020-03-19 12:01:19 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-19 12:01:19 -==> Parameters: 26(String), 20200319(String)
2020-03-19 12:01:19 -<==      Total: 0
2020-03-19 12:01:19 -耗时 : 19
2020-03-19 12:01:19 -<==      Total: 0
2020-03-19 12:01:19 -耗时 : 25
2020-03-19 12:01:19 -<==      Total: 0
2020-03-19 12:01:19 -耗时 : 38
2020-03-19 12:01:22 -此处进行解密+验签+身份验证
2020-03-19 12:01:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:22 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 12:01:22 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type='epos' order by t.id desc limit 0,10 
2020-03-19 12:01:22 -==> Parameters: 181(String)
2020-03-19 12:01:22 -<==      Total: 2
2020-03-19 12:01:22 -耗时 : 19
2020-03-19 12:01:31 -此处进行解密+验签+身份验证
2020-03-19 12:01:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:31 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 12:01:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 12:01:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 12:01:31 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type='epos' and ? between start_date and end_date 
2020-03-19 12:01:31 -==> Parameters: 26(String), 20200319(String)
2020-03-19 12:01:31 -<==      Total: 1
2020-03-19 12:01:31 -耗时 : 22
2020-03-19 12:01:42 -此处进行解密+验签+身份验证
2020-03-19 12:01:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:42 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyDetail
2020-03-19 12:01:42 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t.sn_list, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.id = ? 
2020-03-19 12:01:42 -==> Parameters: 88(String)
2020-03-19 12:01:42 -<==      Total: 1
2020-03-19 12:01:42 -耗时 : 22
2020-03-19 12:01:46 -此处进行解密+验签+身份验证
2020-03-19 12:01:46 -此处进行解密+验签+身份验证
2020-03-19 12:01:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:01:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:01:46 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 12:01:46 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 12:01:46 -==> Parameters: 181(String)
2020-03-19 12:01:46 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 12:01:46 -<==      Total: 0
2020-03-19 12:01:46 -耗时 : 11
2020-03-19 12:01:46 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 12:01:46 -==> Parameters: 181(String)
2020-03-19 12:01:46 -<==      Total: 0
2020-03-19 12:01:46 -耗时 : 19
2020-03-19 12:02:04 -此处进行解密+验签+身份验证
2020-03-19 12:02:04 -此处进行解密+验签+身份验证
2020-03-19 12:02:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:04 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 12:02:04 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 12:02:04 -==> Parameters: 181(String)
2020-03-19 12:02:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 12:02:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -耗时 : 10
2020-03-19 12:02:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 12:02:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 12:02:04 -==> Parameters: 181(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:02:04 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 2
2020-03-19 12:02:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:02:04 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 12:02:04 -<==    Updates: 2
2020-03-19 12:02:04 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 12:02:04 -==> Parameters: 181(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:02:04 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:02:04 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 12:02:04 -<==    Updates: 1
2020-03-19 12:02:04 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 12:02:04 -==> Parameters: 
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:02:04 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:02:04 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 12:02:04 -<==    Updates: 1
2020-03-19 12:02:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 12:02:04 -==> Parameters: 181(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:02:04 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 12:02:04 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 12:02:04 -<==    Updates: 1
2020-03-19 12:02:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 12:02:04 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 12:02:04 -<==      Total: 1
2020-03-19 12:02:04 -耗时 : 128
2020-03-19 12:02:05 -此处进行解密+验签+身份验证
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:05 -此处进行解密+验签+身份验证
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:05 -此处进行解密+验签+身份验证
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:05 -此处进行解密+验签+身份验证
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 12:02:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 12:02:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 12:02:05 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 12:02:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 12:02:05 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 12:02:05 -==> Parameters: 181(String)
2020-03-19 12:02:05 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 12:02:05 -==> Parameters: 181(String)
2020-03-19 12:02:05 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-19 12:02:05 -==> Parameters: 26(String), 20200319(String)
2020-03-19 12:02:05 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-19 12:02:05 -==> Parameters: 26(String), 20200319(String)
2020-03-19 12:02:05 -<==      Total: 0
2020-03-19 12:02:05 -耗时 : 25
2020-03-19 12:02:05 -<==      Total: 0
2020-03-19 12:02:05 -耗时 : 19
2020-03-19 12:02:05 -<==      Total: 0
2020-03-19 12:02:05 -耗时 : 26
2020-03-19 12:02:05 -<==      Total: 0
2020-03-19 12:02:05 -耗时 : 23
2020-03-19 12:02:07 -此处进行解密+验签+身份验证
2020-03-19 12:02:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:07 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-19 12:02:07 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 12:02:07 -==> Parameters: 181(String)
2020-03-19 12:02:07 -<==      Total: 2
2020-03-19 12:02:07 -耗时 : 14
2020-03-19 12:02:13 -此处进行解密+验签+身份验证
2020-03-19 12:02:13 -此处进行解密+验签+身份验证
2020-03-19 12:02:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:13 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-19 12:02:13 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 12:02:13 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-19 12:02:13 -==> Parameters: 181(String)
2020-03-19 12:02:13 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-19 12:02:13 -==> Parameters: 181(String)
2020-03-19 12:02:13 -<==      Total: 0
2020-03-19 12:02:13 -耗时 : 10
2020-03-19 12:02:13 -<==      Total: 0
2020-03-19 12:02:13 -耗时 : 19
2020-03-19 12:02:16 -此处进行解密+验签+身份验证
2020-03-19 12:02:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:02:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:02:16 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 12:02:16 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type='epos' order by t.id desc limit 0,10 
2020-03-19 12:02:16 -==> Parameters: 181(String)
2020-03-19 12:02:16 -<==      Total: 2
2020-03-19 12:02:16 -耗时 : 18
2020-03-19 12:03:01 -此处进行解密+验签+身份验证
2020-03-19 12:03:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 12:03:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 12:03:01 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-19 12:03:01 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type='epos' order by t.id desc limit 0,10 
2020-03-19 12:03:01 -==> Parameters: 181(String)
2020-03-19 12:03:01 -<==      Total: 2
2020-03-19 12:03:01 -耗时 : 11
2020-03-19 14:28:55 -此处进行解密+验签+身份验证
2020-03-19 14:28:55 -此处进行解密+验签+身份验证
2020-03-19 14:28:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 14:28:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 14:28:55 -解密异常：{token=181|B4LQAXYNPB6AIOGUJ67VOIQUYLO1U87J, sign=6E733A4A54D1F51189E7F490C59EA755}
2020-03-19 14:28:55 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:28:55 -耗时 : 0
2020-03-19 14:28:55 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-19 14:28:55 -Reconnected to 120.25.164.176:10379
2020-03-19 14:28:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 14:28:55 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:28:55 -耗时 : 0
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -解密：{"sys_user_account":"15019499979","login_password":"8A6F2805B4515AC12058E79E66539BE9","device_type":"android","device_no":"1.0.9","sign":"F1380DC96310DB3B2158845351AD5A96","version_no":"450000000145206","login_type":"account"}
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 14:29:17 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 14:29:17 -==> Parameters: 15019499979(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-19 14:29:17 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), null, 192.168.191.1(String), 20200319(String), 142917(String), 469(Integer)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 14:29:17 -==> Parameters: 25(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 14:29:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 14:29:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 14:29:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 14:29:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 14:29:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 14:29:17 -耗时 : 63
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:29:17 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:29:17 -==> Parameters: 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -耗时 : 7
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -解密：
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:29:17 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:29:17 -==> Parameters: 01(String), 01(String)
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:17 -<==      Total: 4
2020-03-19 14:29:17 -耗时 : 6
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:29:17 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -==> Parameters: 
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:17 -此处进行解密+验签+身份验证
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:17 -<==      Total: 3
2020-03-19 14:29:17 -耗时 : 6
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:29:17 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:29:17 -==> Parameters: 469(String)
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:29:17 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:29:17 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:29:17 -==> Parameters: 469(String)
2020-03-19 14:29:17 -<==      Total: 2
2020-03-19 14:29:17 -耗时 : 7
2020-03-19 14:29:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:29:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:29:17 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -耗时 : 12
2020-03-19 14:29:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:29:17 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:29:17 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:29:17 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:29:17 -==> Parameters: 
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:29:17 -==> Parameters: 
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:29:17 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:29:17 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:17 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:29:17 -<==    Updates: 1
2020-03-19 14:29:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:17 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -耗时 : 137
2020-03-19 14:29:17 -<==      Total: 1
2020-03-19 14:29:17 -耗时 : 141
2020-03-19 14:29:23 -此处进行解密+验签+身份验证
2020-03-19 14:29:23 -此处进行解密+验签+身份验证
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:23 -此处进行解密+验签+身份验证
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:23 -此处进行解密+验签+身份验证
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:29:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:29:23 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:29:23 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:29:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:29:23 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:29:23 -==> Parameters: 469(String)
2020-03-19 14:29:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:29:23 -<==      Total: 0
2020-03-19 14:29:23 -耗时 : 9
2020-03-19 14:29:23 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:29:23 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:29:23 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:29:23 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:29:23 -<==      Total: 1
2020-03-19 14:29:23 -耗时 : 10
2020-03-19 14:29:23 -<==      Total: 1
2020-03-19 14:29:23 -耗时 : 11
2020-03-19 14:29:23 -<==      Total: 1
2020-03-19 14:29:23 -耗时 : 11
2020-03-19 14:29:34 -此处进行解密+验签+身份验证
2020-03-19 14:29:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:34 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getDeductEposList
2020-03-19 14:29:34 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.assess_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_deduct_record t INNER JOIN t_user_trapos_assess_info t1 on t.assess_id = t1.id WHERE t.user_id = ? and t.pos_type='03' and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date,t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_deduct_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id where t.user_id=? and t.pos_type='03' and t.cre_date between ? and ? ) tt,(SELECT @rownum:=0) r order by tt.order_id desc ) t limit 0,10 
2020-03-19 14:29:34 -==> Parameters: 469(String), 20200301(String), 20200331(String), 469(String), 20200301(String), 20200331(String)
2020-03-19 14:29:34 -<==      Total: 0
2020-03-19 14:29:34 -耗时 : 10
2020-03-19 14:29:51 -此处进行解密+验签+身份验证
2020-03-19 14:29:51 -此处进行解密+验签+身份验证
2020-03-19 14:29:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:29:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:29:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:29:51 -==> Parameters: 469(String)
2020-03-19 14:29:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:29:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -耗时 : 9
2020-03-19 14:29:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:29:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:51 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:29:51 -<==    Updates: 1
2020-03-19 14:29:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:29:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:51 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:51 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:29:51 -<==    Updates: 1
2020-03-19 14:29:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:29:51 -==> Parameters: 
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:51 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:51 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:29:51 -<==    Updates: 1
2020-03-19 14:29:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:29:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:51 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:29:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:29:51 -<==    Updates: 1
2020-03-19 14:29:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:29:51 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:29:51 -<==      Total: 1
2020-03-19 14:29:51 -耗时 : 128
2020-03-19 14:29:55 -此处进行解密+验签+身份验证
2020-03-19 14:29:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:29:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:29:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardEposList
2020-03-19 14:29:55 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type='epos' and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type='03' and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-03-19 14:29:55 -==> Parameters: 469(String), 20200301(String), 20200331(String), 469(String), 20200301(String), 20200331(String)
2020-03-19 14:29:55 -<==      Total: 0
2020-03-19 14:29:55 -耗时 : 11
2020-03-19 14:30:06 -此处进行解密+验签+身份验证
2020-03-19 14:30:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:06 -此处进行解密+验签+身份验证
2020-03-19 14:30:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:06 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:30:06 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:30:06 -==> Parameters: 469(String)
2020-03-19 14:30:06 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:30:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:30:06 -<==      Total: 1
2020-03-19 14:30:06 -耗时 : 10
2020-03-19 14:30:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:30:06 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:06 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:06 -<==      Total: 1
2020-03-19 14:30:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:06 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:30:06 -<==      Total: 1
2020-03-19 14:30:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:06 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:30:06 -<==    Updates: 1
2020-03-19 14:30:06 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:30:06 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:06 -<==      Total: 1
2020-03-19 14:30:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:06 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:30:06 -<==      Total: 1
2020-03-19 14:30:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:06 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:30:06 -<==    Updates: 1
2020-03-19 14:30:06 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:30:06 -==> Parameters: 
2020-03-19 14:30:06 -<==      Total: 1
2020-03-19 14:30:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:06 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:30:07 -<==      Total: 1
2020-03-19 14:30:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:07 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:30:07 -<==    Updates: 1
2020-03-19 14:30:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:07 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:07 -<==      Total: 1
2020-03-19 14:30:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:07 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:30:07 -<==      Total: 1
2020-03-19 14:30:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:07 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:30:07 -<==    Updates: 1
2020-03-19 14:30:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:07 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:30:07 -<==      Total: 1
2020-03-19 14:30:07 -耗时 : 127
2020-03-19 14:30:12 -此处进行解密+验签+身份验证
2020-03-19 14:30:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-19 14:30:12 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-19 14:30:12 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-19 14:30:12 -<==      Total: 0
2020-03-19 14:30:12 -耗时 : 10
2020-03-19 14:30:19 -此处进行解密+验签+身份验证
2020-03-19 14:30:19 -此处进行解密+验签+身份验证
2020-03-19 14:30:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:30:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:30:19 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:30:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:30:19 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:30:19 -==> Parameters: 469(String)
2020-03-19 14:30:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:19 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -耗时 : 12
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:19 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:19 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:30:19 -<==    Updates: 1
2020-03-19 14:30:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:30:19 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:19 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:19 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:30:19 -<==    Updates: 1
2020-03-19 14:30:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:30:19 -==> Parameters: 
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:19 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:19 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:30:19 -<==    Updates: 1
2020-03-19 14:30:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:19 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:19 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:19 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:30:19 -<==    Updates: 1
2020-03-19 14:30:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:19 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:30:19 -<==      Total: 1
2020-03-19 14:30:19 -耗时 : 131
2020-03-19 14:30:23 -此处进行解密+验签+身份验证
2020-03-19 14:30:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-03-19 14:30:23 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-19 14:30:23 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-19 14:30:24 -<==      Total: 0
2020-03-19 14:30:24 -耗时 : 416
2020-03-19 14:30:33 -此处进行解密+验签+身份验证
2020-03-19 14:30:33 -此处进行解密+验签+身份验证
2020-03-19 14:30:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:30:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:30:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:30:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:30:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:30:33 -==> Parameters: 469(String)
2020-03-19 14:30:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:33 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -耗时 : 10
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:33 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:33 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:30:33 -<==    Updates: 1
2020-03-19 14:30:33 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:30:33 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:33 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:33 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:30:33 -<==    Updates: 1
2020-03-19 14:30:33 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:30:33 -==> Parameters: 
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:33 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:33 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:30:33 -<==    Updates: 1
2020-03-19 14:30:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:33 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:33 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:33 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:30:33 -<==    Updates: 1
2020-03-19 14:30:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:33 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:30:33 -<==      Total: 1
2020-03-19 14:30:33 -耗时 : 121
2020-03-19 14:30:43 -此处进行解密+验签+身份验证
2020-03-19 14:30:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:43 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-03-19 14:30:43 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-03-19 14:30:43 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-19 14:30:43 -<==      Total: 0
2020-03-19 14:30:43 -耗时 : 411
2020-03-19 14:30:51 -此处进行解密+验签+身份验证
2020-03-19 14:30:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:51 -此处进行解密+验签+身份验证
2020-03-19 14:30:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:30:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:30:51 -==> Parameters: 469(String)
2020-03-19 14:30:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:30:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -耗时 : 9
2020-03-19 14:30:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:30:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:51 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:30:51 -<==    Updates: 1
2020-03-19 14:30:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:30:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:51 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:51 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:30:51 -<==    Updates: 1
2020-03-19 14:30:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:30:51 -==> Parameters: 
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:51 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:51 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:30:51 -<==    Updates: 1
2020-03-19 14:30:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:30:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:51 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:30:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:30:51 -<==    Updates: 1
2020-03-19 14:30:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:30:51 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:30:51 -<==      Total: 1
2020-03-19 14:30:51 -耗时 : 126
2020-03-19 14:30:57 -此处进行解密+验签+身份验证
2020-03-19 14:30:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:30:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:30:57 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-03-19 14:30:57 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-03-19 14:30:57 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-19 14:30:57 -<==      Total: 0
2020-03-19 14:30:57 -耗时 : 13
2020-03-19 14:31:05 -此处进行解密+验签+身份验证
2020-03-19 14:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:05 -此处进行解密+验签+身份验证
2020-03-19 14:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:05 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:31:05 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:31:05 -==> Parameters: 469(String)
2020-03-19 14:31:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:31:05 -<==      Total: 1
2020-03-19 14:31:05 -耗时 : 11
2020-03-19 14:31:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:31:05 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:05 -<==      Total: 1
2020-03-19 14:31:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:05 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:31:05 -<==      Total: 1
2020-03-19 14:31:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:05 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:31:05 -<==    Updates: 1
2020-03-19 14:31:05 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:31:05 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:05 -<==      Total: 1
2020-03-19 14:31:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:05 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:31:05 -<==      Total: 1
2020-03-19 14:31:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:05 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:31:05 -<==    Updates: 1
2020-03-19 14:31:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:31:05 -==> Parameters: 
2020-03-19 14:31:05 -<==      Total: 1
2020-03-19 14:31:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:05 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:31:05 -<==      Total: 1
2020-03-19 14:31:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:05 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:31:05 -<==    Updates: 1
2020-03-19 14:31:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:31:05 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:06 -<==      Total: 1
2020-03-19 14:31:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:06 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:31:06 -<==      Total: 1
2020-03-19 14:31:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:06 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:31:06 -<==    Updates: 1
2020-03-19 14:31:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:06 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:31:06 -<==      Total: 1
2020-03-19 14:31:06 -耗时 : 116
2020-03-19 14:31:11 -此处进行解密+验签+身份验证
2020-03-19 14:31:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:11 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardTraditionalPosList
2020-03-19 14:31:11 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type is null and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-03-19 14:31:11 -==> Parameters: 469(String), 20200301(String), 20200331(String), 469(String), 20200301(String), 20200331(String)
2020-03-19 14:31:11 -<==      Total: 0
2020-03-19 14:31:11 -耗时 : 12
2020-03-19 14:31:21 -此处进行解密+验签+身份验证
2020-03-19 14:31:21 -此处进行解密+验签+身份验证
2020-03-19 14:31:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:31:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:31:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:31:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:31:21 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:31:21 -==> Parameters: 469(String)
2020-03-19 14:31:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:31:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -耗时 : 11
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:21 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:31:21 -<==    Updates: 1
2020-03-19 14:31:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:31:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:21 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:21 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:31:21 -<==    Updates: 1
2020-03-19 14:31:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:31:21 -==> Parameters: 
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:21 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:21 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:31:21 -<==    Updates: 1
2020-03-19 14:31:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:31:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:21 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:31:21 -<==    Updates: 1
2020-03-19 14:31:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:21 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:31:21 -<==      Total: 1
2020-03-19 14:31:21 -耗时 : 117
2020-03-19 14:31:26 -此处进行解密+验签+身份验证
2020-03-19 14:31:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:26 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getDeductTraditionalPosList
2020-03-19 14:31:26 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.assess_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_deduct_record t INNER JOIN t_user_trapos_assess_info t1 on t.assess_id = t1.id WHERE t.user_id = ? and t.pos_type is null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date,t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_deduct_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id where t.user_id=? and t.pos_type is null and t.cre_date between ? and ? ) tt,(SELECT @rownum:=0) r order by tt.order_id desc ) t limit 0,10 
2020-03-19 14:31:26 -==> Parameters: 469(String), 20200301(String), 20200331(String), 469(String), 20200301(String), 20200331(String)
2020-03-19 14:31:26 -<==      Total: 0
2020-03-19 14:31:26 -耗时 : 10
2020-03-19 14:31:37 -此处进行解密+验签+身份验证
2020-03-19 14:31:37 -此处进行解密+验签+身份验证
2020-03-19 14:31:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:31:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:31:37 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:31:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:31:37 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:31:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:31:37 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:31:37 -==> Parameters: 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:31:37 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:37 -耗时 : 10
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:37 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:37 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:31:37 -<==    Updates: 1
2020-03-19 14:31:37 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:31:37 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:37 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:37 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:31:37 -<==    Updates: 1
2020-03-19 14:31:37 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:31:37 -==> Parameters: 
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:37 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:37 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:31:37 -<==    Updates: 1
2020-03-19 14:31:37 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:31:37 -==> Parameters: 469(String), 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:37 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:31:37 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:31:37 -<==    Updates: 1
2020-03-19 14:31:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:31:37 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:31:37 -<==      Total: 1
2020-03-19 14:31:37 -耗时 : 123
2020-03-19 14:32:02 -此处进行解密+验签+身份验证
2020-03-19 14:32:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:32:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:32:02 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-03-19 14:32:02 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-19 14:32:02 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-19 14:32:02 -<==      Total: 1
2020-03-19 14:32:02 -耗时 : 31
2020-03-19 14:32:16 -此处进行解密+验签+身份验证
2020-03-19 14:32:16 -此处进行解密+验签+身份验证
2020-03-19 14:32:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:32:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:32:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:32:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:32:16 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:32:16 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:32:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:32:16 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:32:16 -==> Parameters: 469(String)
2020-03-19 14:32:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -耗时 : 11
2020-03-19 14:32:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:32:16 -==> Parameters: 469(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:32:16 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:32:16 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:32:16 -<==    Updates: 1
2020-03-19 14:32:16 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:32:16 -==> Parameters: 469(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:32:16 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:32:16 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:32:16 -<==    Updates: 1
2020-03-19 14:32:16 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:32:16 -==> Parameters: 
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:32:16 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:32:16 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:32:16 -<==    Updates: 1
2020-03-19 14:32:16 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:32:16 -==> Parameters: 469(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:32:16 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:32:16 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:32:16 -<==    Updates: 1
2020-03-19 14:32:16 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:32:16 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:32:16 -<==      Total: 1
2020-03-19 14:32:16 -耗时 : 147
2020-03-19 14:32:49 -此处进行解密+验签+身份验证
2020-03-19 14:32:49 -此处进行解密+验签+身份验证
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:32:49 -此处进行解密+验签+身份验证
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:32:49 -此处进行解密+验签+身份验证
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:32:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:32:49 -请求地址 : http://192.168.191.1:8080/api/user/cashRecord/getCashInfo
2020-03-19 14:32:49 -请求地址 : http://192.168.191.1:8080/api/user/cashRecord/getCashInfo
2020-03-19 14:32:49 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/getUserValidCardList
2020-03-19 14:32:49 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/getUserValidCardList
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_cashSingleFeet
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_cashSingleFeet
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_cashSingleFeet , return
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_cashSingleFeet , return
2020-03-19 14:32:49 -==>  Preparing: SELECT id AS card_id, user_id, account, account_name, bank_code, bank_name, card_photo, status, is_default, remark FROM t_user_card_info WHERE user_id=? AND status=? order by is_default desc,id desc 
2020-03-19 14:32:49 -==> Parameters: 469(String), 09(String)
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_cashMinNum
2020-03-19 14:32:49 -==>  Preparing: SELECT id AS card_id, user_id, account, account_name, bank_code, bank_name, card_photo, status, is_default, remark FROM t_user_card_info WHERE user_id=? AND status=? order by is_default desc,id desc 
2020-03-19 14:32:49 -==> Parameters: 469(String), 09(String)
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_cashMinNum
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_cashMinNum , return
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_cashMinNum , return
2020-03-19 14:32:49 -<==      Total: 1
2020-03-19 14:32:49 -耗时 : 20
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_cashFeetRate
2020-03-19 14:32:49 -<==      Total: 1
2020-03-19 14:32:49 -耗时 : 21
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_cashFeetRate
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_cashFeetRate , return
2020-03-19 14:32:49 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_cashFeetRate , return
2020-03-19 14:32:49 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:32:49 -==> Parameters: 469(String)
2020-03-19 14:32:49 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:32:49 -==> Parameters: 469(String)
2020-03-19 14:32:49 -<==      Total: 1
2020-03-19 14:32:49 -<==      Total: 1
2020-03-19 14:32:49 -耗时 : 54
2020-03-19 14:32:49 -耗时 : 60
2020-03-19 14:33:08 -此处进行解密+验签+身份验证
2020-03-19 14:33:08 -此处进行解密+验签+身份验证
2020-03-19 14:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:33:08 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:33:08 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:33:08 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:33:08 -==> Parameters: 469(String)
2020-03-19 14:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:33:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -耗时 : 10
2020-03-19 14:33:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:33:08 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:08 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:08 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:33:08 -<==    Updates: 1
2020-03-19 14:33:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:33:08 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:08 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:08 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:33:08 -<==    Updates: 1
2020-03-19 14:33:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:33:08 -==> Parameters: 
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:08 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:08 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:33:08 -<==    Updates: 1
2020-03-19 14:33:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:33:08 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:08 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:08 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:33:08 -<==    Updates: 1
2020-03-19 14:33:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:08 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:33:08 -<==      Total: 1
2020-03-19 14:33:08 -耗时 : 117
2020-03-19 14:33:23 -此处进行解密+验签+身份验证
2020-03-19 14:33:23 -此处进行解密+验签+身份验证
2020-03-19 14:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:33:23 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:33:23 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:33:23 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:33:23 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:33:23 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:33:23 -==> Parameters: 469(String)
2020-03-19 14:33:23 -<==      Total: 1
2020-03-19 14:33:23 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:33:23 -==> Parameters: 469(String)
2020-03-19 14:33:23 -<==      Total: 1
2020-03-19 14:33:23 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:33:23 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:24 -<==      Total: 0
2020-03-19 14:33:24 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:33:24 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:33:24 -<==      Total: 1
2020-03-19 14:33:24 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:33:24 -==> Parameters: 469(String)
2020-03-19 14:33:24 -<==      Total: 1
2020-03-19 14:33:24 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:33:24 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:33:24 -<==      Total: 1
2020-03-19 14:33:24 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:33:24 -==> Parameters: 469(String)
2020-03-19 14:33:24 -<==      Total: 0
2020-03-19 14:33:24 -耗时 : 45
2020-03-19 14:33:24 -<==      Total: 1
2020-03-19 14:33:24 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:33:24 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:24 -<==      Total: 1
2020-03-19 14:33:24 -耗时 : 215
2020-03-19 14:33:43 -此处进行解密+验签+身份验证
2020-03-19 14:33:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:33:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:33:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:33:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:33:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:33:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:33:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:43 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:43 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:33:43 -<==    Updates: 1
2020-03-19 14:33:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:33:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:43 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:33:43 -<==    Updates: 1
2020-03-19 14:33:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:33:43 -==> Parameters: 
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:43 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:43 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:33:43 -<==    Updates: 1
2020-03-19 14:33:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:33:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:43 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:33:43 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:33:43 -<==    Updates: 1
2020-03-19 14:33:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:33:43 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:33:43 -<==      Total: 1
2020-03-19 14:33:43 -耗时 : 137
2020-03-19 14:33:51 -此处进行解密+验签+身份验证
2020-03-19 14:33:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:33:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:33:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-19 14:33:51 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-19 14:33:51 -==> Parameters: 1(String), 469(String), appImgFlag(String)
2020-03-19 14:33:51 -<==    Updates: 1
2020-03-19 14:33:51 -耗时 : 16
2020-03-19 14:33:51 -此处进行解密+验签+身份验证
2020-03-19 14:33:51 -解密：
2020-03-19 14:33:51 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:33:51 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:33:51 -==> Parameters: 02(String), 02(String)
2020-03-19 14:33:51 -此处进行解密+验签+身份验证
2020-03-19 14:33:51 -解密：
2020-03-19 14:33:51 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:33:51 -<==      Total: 7
2020-03-19 14:33:51 -耗时 : 8
2020-03-19 14:33:51 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:33:51 -==> Parameters: 03(String), 03(String)
2020-03-19 14:33:51 -<==      Total: 3
2020-03-19 14:33:51 -耗时 : 10
2020-03-19 14:34:07 -此处进行解密+验签+身份验证
2020-03-19 14:34:07 -解密：
2020-03-19 14:34:07 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:34:07 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:34:07 -==> Parameters: 04(String), 04(String)
2020-03-19 14:34:07 -<==      Total: 1
2020-03-19 14:34:07 -耗时 : 8
2020-03-19 14:34:45 -此处进行解密+验签+身份验证
2020-03-19 14:34:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:34:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:34:45 -此处进行解密+验签+身份验证
2020-03-19 14:34:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:34:45 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:34:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:34:45 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:34:45 -==> Parameters: 469(String)
2020-03-19 14:34:45 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:34:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -耗时 : 9
2020-03-19 14:34:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:34:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:34:45 -==> Parameters: 469(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:34:45 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:34:45 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:34:45 -<==    Updates: 1
2020-03-19 14:34:45 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:34:45 -==> Parameters: 469(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:34:45 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:34:45 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:34:45 -<==    Updates: 1
2020-03-19 14:34:45 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:34:45 -==> Parameters: 
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:34:45 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:34:45 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:34:45 -<==    Updates: 1
2020-03-19 14:34:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:34:45 -==> Parameters: 469(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:34:45 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:34:45 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:34:45 -<==    Updates: 1
2020-03-19 14:34:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:34:45 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:34:45 -<==      Total: 1
2020-03-19 14:34:45 -耗时 : 134
2020-03-19 14:35:27 -此处进行解密+验签+身份验证
2020-03-19 14:35:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:35:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:35:27 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewsDetail
2020-03-19 14:35:27 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_nav, news_content, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where id=? 
2020-03-19 14:35:27 -==> Parameters: 10(String)
2020-03-19 14:35:27 -<==      Total: 1
2020-03-19 14:35:27 -==>  Preparing: update t_sys_news_info set browse_num = browse_num + 1 where id=? 
2020-03-19 14:35:27 -==> Parameters: 10(String)
2020-03-19 14:35:27 -<==    Updates: 1
2020-03-19 14:35:27 -耗时 : 19
2020-03-19 14:35:38 -此处进行解密+验签+身份验证
2020-03-19 14:35:38 -此处进行解密+验签+身份验证
2020-03-19 14:35:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:35:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:35:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:35:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:35:38 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:35:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:35:38 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:35:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:35:38 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:35:38 -==> Parameters: 469(String)
2020-03-19 14:35:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:35:38 -==> Parameters: 469(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -耗时 : 11
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:38 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:38 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:35:38 -<==    Updates: 1
2020-03-19 14:35:38 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:35:38 -==> Parameters: 469(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:38 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:38 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:35:38 -<==    Updates: 1
2020-03-19 14:35:38 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:35:38 -==> Parameters: 
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:38 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:38 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:35:38 -<==    Updates: 1
2020-03-19 14:35:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:35:38 -==> Parameters: 469(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:38 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:38 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:35:38 -<==    Updates: 1
2020-03-19 14:35:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:38 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:35:38 -<==      Total: 1
2020-03-19 14:35:38 -耗时 : 130
2020-03-19 14:35:42 -此处进行解密+验签+身份验证
2020-03-19 14:35:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:35:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:35:42 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewsDetail
2020-03-19 14:35:42 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_nav, news_content, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where id=? 
2020-03-19 14:35:42 -==> Parameters: 12(String)
2020-03-19 14:35:42 -<==      Total: 1
2020-03-19 14:35:42 -==>  Preparing: update t_sys_news_info set browse_num = browse_num + 1 where id=? 
2020-03-19 14:35:42 -==> Parameters: 12(String)
2020-03-19 14:35:42 -<==    Updates: 1
2020-03-19 14:35:42 -耗时 : 19
2020-03-19 14:35:50 -此处进行解密+验签+身份验证
2020-03-19 14:35:50 -此处进行解密+验签+身份验证
2020-03-19 14:35:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:35:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:35:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:35:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:35:50 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:35:50 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:35:50 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:35:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:35:50 -==> Parameters: 469(String)
2020-03-19 14:35:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -耗时 : 10
2020-03-19 14:35:50 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:35:50 -==> Parameters: 469(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:50 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:50 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:35:50 -<==    Updates: 1
2020-03-19 14:35:50 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:35:50 -==> Parameters: 469(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:50 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:50 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:35:50 -<==    Updates: 1
2020-03-19 14:35:50 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:35:50 -==> Parameters: 
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:50 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:50 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:35:50 -<==    Updates: 1
2020-03-19 14:35:50 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:35:50 -==> Parameters: 469(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:50 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:35:50 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:35:50 -<==    Updates: 1
2020-03-19 14:35:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:35:50 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:35:50 -<==      Total: 1
2020-03-19 14:35:50 -耗时 : 113
2020-03-19 14:40:41 -此处进行解密+验签+身份验证
2020-03-19 14:40:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:41 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:40:41 -此处进行解密+验签+身份验证
2020-03-19 14:40:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:41 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:40:41 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:40:41 -==> Parameters: 469(String)
2020-03-19 14:40:41 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:40:41 -==> Parameters: 469(String), 469(String)
2020-03-19 14:40:41 -<==      Total: 82
2020-03-19 14:40:41 -耗时 : 48
2020-03-19 14:40:44 -此处进行解密+验签+身份验证
2020-03-19 14:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:44 -此处进行解密+验签+身份验证
2020-03-19 14:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:44 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:40:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:40:44 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:40:44 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:40:44 -==> Parameters: 469(String)
2020-03-19 14:40:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:40:44 -==> Parameters: 469(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -耗时 : 12
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:40:44 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:40:44 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:40:44 -<==    Updates: 1
2020-03-19 14:40:44 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:40:44 -==> Parameters: 469(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:40:44 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:40:44 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:40:44 -<==    Updates: 1
2020-03-19 14:40:44 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:40:44 -==> Parameters: 
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:40:44 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:40:44 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:40:44 -<==    Updates: 1
2020-03-19 14:40:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:40:44 -==> Parameters: 469(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:40:44 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:40:44 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:40:44 -<==    Updates: 1
2020-03-19 14:40:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:40:44 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:40:44 -<==      Total: 1
2020-03-19 14:40:44 -耗时 : 121
2020-03-19 14:40:47 -此处进行解密+验签+身份验证
2020-03-19 14:40:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:47 -此处进行解密+验签+身份验证
2020-03-19 14:40:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:47 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:40:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:47 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:40:47 -==> Parameters: 469(String)
2020-03-19 14:40:47 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:40:47 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:40:47 -==> Parameters: 469(String), 469(String)
2020-03-19 14:40:47 -<==      Total: 82
2020-03-19 14:40:47 -耗时 : 40
2020-03-19 14:40:49 -此处进行解密+验签+身份验证
2020-03-19 14:40:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:49 -此处进行解密+验签+身份验证
2020-03-19 14:40:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:49 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:40:49 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:40:49 -==> Parameters: 469(String), MPOS(String)
2020-03-19 14:40:49 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:40:49 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:40:49 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 14:40:49 -<==      Total: 0
2020-03-19 14:40:49 -耗时 : 21
2020-03-19 14:40:49 -<==      Total: 1
2020-03-19 14:40:49 -耗时 : 28
2020-03-19 14:40:50 -此处进行解密+验签+身份验证
2020-03-19 14:40:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:50 -此处进行解密+验签+身份验证
2020-03-19 14:40:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:40:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:50 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:40:50 -==> Parameters: 469(String), epos(String)
2020-03-19 14:40:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:40:50 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:40:50 -==> Parameters: 469(String), TrafficCard(String)
2020-03-19 14:40:50 -<==      Total: 1
2020-03-19 14:40:50 -耗时 : 28
2020-03-19 14:40:50 -<==      Total: 0
2020-03-19 14:40:50 -耗时 : 21
2020-03-19 14:40:51 -此处进行解密+验签+身份验证
2020-03-19 14:40:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:51 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 14:40:51 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:40:51 -==> Parameters: 691(String), EPOS20200318041(String)
2020-03-19 14:40:52 -<==      Total: 1
2020-03-19 14:40:52 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 14:40:52 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:40:52 -<==      Total: 1
2020-03-19 14:40:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-19 14:40:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-19 14:40:52 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 14:40:52 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:40:52 -<==      Total: 1
2020-03-19 14:40:52 -耗时 : 99
2020-03-19 14:40:52 -此处进行解密+验签+身份验证
2020-03-19 14:40:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:40:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:40:52 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosSysParamRateList
2020-03-19 14:40:52 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:40:52 -==> Parameters: 469(String), EPOS20200318041(String)
2020-03-19 14:40:52 -<==      Total: 1
2020-03-19 14:40:52 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 14:40:52 -==> Parameters: 
2020-03-19 14:40:52 -<==      Total: 101
2020-03-19 14:40:52 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 14:40:52 -==> Parameters: EPOS20200318041(String)
2020-03-19 14:40:52 -<==      Total: 0
2020-03-19 14:40:52 -耗时 : 66
2020-03-19 14:41:08 -<==      Total: 7
2020-03-19 14:41:08 -耗时 : 27004
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:09 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -耗时 : 13
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -解密：
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:41:09 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:41:09 -==> Parameters: 01(String), 01(String)
2020-03-19 14:41:09 -<==      Total: 4
2020-03-19 14:41:09 -耗时 : 13
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:41:09 -==> Parameters: 
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -<==      Total: 3
2020-03-19 14:41:09 -耗时 : 8
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:09 -<==      Total: 2
2020-03-19 14:41:09 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:09 -耗时 : 7
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:09 -<==    Updates: 1
2020-03-19 14:41:09 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:09 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -耗时 : 10
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:41:09 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:09 -<==    Updates: 1
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:41:09 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:09 -==> Parameters: 
2020-03-19 14:41:09 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:41:09 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:09 -<==      Total: 0
2020-03-19 14:41:09 -耗时 : 8
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -耗时 : 12
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -耗时 : 11
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:09 -<==    Updates: 1
2020-03-19 14:41:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:09 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -此处进行解密+验签+身份验证
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:41:09 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:09 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:09 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:41:09 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:09 -<==    Updates: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:09 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -耗时 : 8
2020-03-19 14:41:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:09 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -耗时 : 133
2020-03-19 14:41:09 -<==      Total: 0
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:09 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:09 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:41:09 -==> Parameters: 469(String)
2020-03-19 14:41:09 -<==    Updates: 1
2020-03-19 14:41:09 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:09 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -<==      Total: 0
2020-03-19 14:41:09 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:09 -耗时 : 48
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:09 -<==    Updates: 1
2020-03-19 14:41:09 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:09 -==> Parameters: 
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:09 -<==    Updates: 1
2020-03-19 14:41:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:09 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:09 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:09 -<==      Total: 1
2020-03-19 14:41:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:09 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:10 -<==    Updates: 1
2020-03-19 14:41:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:10 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 137
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:41:10 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 218
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 10
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -解密：
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:41:10 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:41:10 -==> Parameters: 01(String), 01(String)
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -<==      Total: 4
2020-03-19 14:41:10 -耗时 : 11
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:10 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:41:10 -<==      Total: 2
2020-03-19 14:41:10 -耗时 : 8
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:41:10 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:10 -==> Parameters: 
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:10 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:10 -<==      Total: 3
2020-03-19 14:41:10 -耗时 : 12
2020-03-19 14:41:10 -<==    Updates: 1
2020-03-19 14:41:10 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:10 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:10 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:10 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:41:10 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:10 -<==    Updates: 1
2020-03-19 14:41:10 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:10 -==> Parameters: 
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:41:10 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 7
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:10 -<==      Total: 0
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:41:10 -耗时 : 7
2020-03-19 14:41:10 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:10 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 8
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 7
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:10 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -<==    Updates: 1
2020-03-19 14:41:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:10 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:10 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:10 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:10 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:10 -<==      Total: 0
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:10 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 8
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:10 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:10 -<==    Updates: 1
2020-03-19 14:41:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:10 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:10 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:10 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -耗时 : 139
2020-03-19 14:41:10 -此处进行解密+验签+身份验证
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -<==      Total: 1
2020-03-19 14:41:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:10 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:41:10 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:41:10 -==> Parameters: 469(String)
2020-03-19 14:41:10 -<==      Total: 0
2020-03-19 14:41:10 -耗时 : 45
2020-03-19 14:41:11 -<==    Updates: 1
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:11 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:41:11 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:11 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:11 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:11 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:11 -<==    Updates: 1
2020-03-19 14:41:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:11 -==> Parameters: 
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:11 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:11 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:11 -<==    Updates: 1
2020-03-19 14:41:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:11 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:11 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:11 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:11 -<==    Updates: 1
2020-03-19 14:41:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:11 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -耗时 : 123
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:41:11 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:11 -<==      Total: 1
2020-03-19 14:41:11 -耗时 : 193
2020-03-19 14:41:14 -<==      Total: 7
2020-03-19 14:41:14 -耗时 : 26549
2020-03-19 14:41:32 -此处进行解密+验签+身份验证
2020-03-19 14:41:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:32 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:41:32 -此处进行解密+验签+身份验证
2020-03-19 14:41:32 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:41:32 -==> Parameters: 469(String)
2020-03-19 14:41:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:32 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:41:32 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:41:32 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:32 -<==      Total: 82
2020-03-19 14:41:32 -耗时 : 39
2020-03-19 14:41:39 -此处进行解密+验签+身份验证
2020-03-19 14:41:39 -此处进行解密+验签+身份验证
2020-03-19 14:41:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:39 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:41:39 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:41:39 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:41:39 -==> Parameters: 469(String), MPOS(String)
2020-03-19 14:41:39 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:41:39 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 14:41:39 -<==      Total: 0
2020-03-19 14:41:39 -耗时 : 27
2020-03-19 14:41:39 -<==      Total: 1
2020-03-19 14:41:39 -耗时 : 29
2020-03-19 14:41:44 -此处进行解密+验签+身份验证
2020-03-19 14:41:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:44 -此处进行解密+验签+身份验证
2020-03-19 14:41:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:44 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:41:44 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:41:44 -==> Parameters: 469(String), epos(String)
2020-03-19 14:41:44 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:41:44 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:41:44 -==> Parameters: 469(String), TrafficCard(String)
2020-03-19 14:41:44 -<==      Total: 1
2020-03-19 14:41:44 -耗时 : 25
2020-03-19 14:41:44 -<==      Total: 0
2020-03-19 14:41:44 -耗时 : 20
2020-03-19 14:41:50 -此处进行解密+验签+身份验证
2020-03-19 14:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 14:41:50 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:41:50 -==> Parameters: 691(String), EPOS20200318041(String)
2020-03-19 14:41:50 -<==      Total: 1
2020-03-19 14:41:50 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 14:41:50 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:41:50 -<==      Total: 1
2020-03-19 14:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-19 14:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-19 14:41:50 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 14:41:50 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:41:50 -<==      Total: 1
2020-03-19 14:41:50 -耗时 : 32
2020-03-19 14:41:50 -此处进行解密+验签+身份验证
2020-03-19 14:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosSysParamRateList
2020-03-19 14:41:50 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:41:50 -==> Parameters: 469(String), EPOS20200318041(String)
2020-03-19 14:41:50 -<==      Total: 1
2020-03-19 14:41:50 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 14:41:50 -==> Parameters: 
2020-03-19 14:41:50 -<==      Total: 101
2020-03-19 14:41:50 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 14:41:50 -==> Parameters: EPOS20200318041(String)
2020-03-19 14:41:50 -<==      Total: 0
2020-03-19 14:41:50 -耗时 : 27
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:53 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:53 -==> Parameters: 469(String)
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -耗时 : 12
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -解密：
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:41:53 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:41:53 -==> Parameters: 01(String), 01(String)
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -<==      Total: 4
2020-03-19 14:41:53 -耗时 : 58
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:41:53 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:41:53 -==> Parameters: 469(String)
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:53 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:41:53 -==> Parameters: 
2020-03-19 14:41:53 -<==      Total: 2
2020-03-19 14:41:53 -耗时 : 7
2020-03-19 14:41:53 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:53 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:53 -<==      Total: 3
2020-03-19 14:41:53 -耗时 : 12
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:53 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:53 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:53 -<==    Updates: 1
2020-03-19 14:41:53 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:53 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:53 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:53 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -此处进行解密+验签+身份验证
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:41:53 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:41:53 -==> Parameters: 469(String)
2020-03-19 14:41:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:53 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:41:53 -<==    Updates: 1
2020-03-19 14:41:53 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:53 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:53 -==> Parameters: 
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:53 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:53 -耗时 : 6
2020-03-19 14:41:53 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:41:53 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:41:53 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:53 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:53 -<==      Total: 0
2020-03-19 14:41:53 -耗时 : 9
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -耗时 : 7
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -<==      Total: 1
2020-03-19 14:41:53 -耗时 : 7
2020-03-19 14:41:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:53 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:54 -<==    Updates: 1
2020-03-19 14:41:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:54 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:54 -此处进行解密+验签+身份验证
2020-03-19 14:41:54 -此处进行解密+验签+身份验证
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:54 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:54 -此处进行解密+验签+身份验证
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:54 -此处进行解密+验签+身份验证
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:54 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:54 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:41:54 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:41:54 -==> Parameters: 469(String)
2020-03-19 14:41:54 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:41:54 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:54 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:54 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:54 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:54 -==> Parameters: 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:41:54 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -<==    Updates: 1
2020-03-19 14:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:54 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:41:54 -==> Parameters: 469(String)
2020-03-19 14:41:54 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -耗时 : 7
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:54 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 0
2020-03-19 14:41:54 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:54 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -耗时 : 133
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:54 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:41:54 -==> Parameters: 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:54 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:54 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:41:54 -==> Parameters: 469(String)
2020-03-19 14:41:54 -<==    Updates: 1
2020-03-19 14:41:54 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:54 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 0
2020-03-19 14:41:54 -耗时 : 40
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:54 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:54 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:54 -<==    Updates: 1
2020-03-19 14:41:54 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:54 -==> Parameters: 
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:54 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:54 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:54 -<==    Updates: 1
2020-03-19 14:41:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:54 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:54 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:54 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:54 -<==    Updates: 1
2020-03-19 14:41:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:54 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -耗时 : 132
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:41:54 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -耗时 : 227
2020-03-19 14:41:54 -此处进行解密+验签+身份验证
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:54 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:54 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:54 -==> Parameters: 469(String)
2020-03-19 14:41:54 -<==      Total: 1
2020-03-19 14:41:54 -耗时 : 9
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -解密：
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:41:55 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:41:55 -==> Parameters: 01(String), 01(String)
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -<==      Total: 4
2020-03-19 14:41:55 -耗时 : 10
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:41:55 -==> Parameters: 469(String)
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -<==      Total: 2
2020-03-19 14:41:55 -耗时 : 10
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:41:55 -==> Parameters: 
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -<==      Total: 3
2020-03-19 14:41:55 -耗时 : 8
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:55 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:41:55 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:41:55 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:41:55 -==> Parameters: 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -耗时 : 8
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:55 -==> Parameters: 
2020-03-19 14:41:55 -<==      Total: 0
2020-03-19 14:41:55 -耗时 : 8
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -耗时 : 7
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:41:55 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -耗时 : 7
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -此处进行解密+验签+身份验证
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:41:55 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:41:55 -==> Parameters: 469(String)
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:55 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:41:55 -==> Parameters: 469(String)
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:41:55 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:55 -==> Parameters: 469(String)
2020-03-19 14:41:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:41:55 -<==      Total: 0
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:55 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -耗时 : 133
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -耗时 : 7
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:41:55 -==> Parameters: 469(String)
2020-03-19 14:41:55 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:41:55 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:41:55 -==> Parameters: 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 0
2020-03-19 14:41:55 -耗时 : 48
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:41:55 -==> Parameters: 
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:41:55 -==> Parameters: 469(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -耗时 : 195
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:41:55 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:41:55 -<==    Updates: 1
2020-03-19 14:41:55 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:41:55 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:41:55 -<==      Total: 1
2020-03-19 14:41:55 -耗时 : 244
2020-03-19 14:41:59 -<==      Total: 7
2020-03-19 14:41:59 -耗时 : 26964
2020-03-19 14:42:00 -此处进行解密+验签+身份验证
2020-03-19 14:42:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:00 -此处进行解密+验签+身份验证
2020-03-19 14:42:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:00 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:42:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:00 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:42:00 -==> Parameters: 469(String)
2020-03-19 14:42:00 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:42:00 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:42:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:00 -<==      Total: 82
2020-03-19 14:42:00 -耗时 : 37
2020-03-19 14:42:01 -此处进行解密+验签+身份验证
2020-03-19 14:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:01 -此处进行解密+验签+身份验证
2020-03-19 14:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:42:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:01 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:42:01 -==> Parameters: 469(String), MPOS(String)
2020-03-19 14:42:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:42:01 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:42:01 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 14:42:01 -<==      Total: 1
2020-03-19 14:42:01 -耗时 : 21
2020-03-19 14:42:01 -<==      Total: 0
2020-03-19 14:42:01 -耗时 : 19
2020-03-19 14:42:06 -此处进行解密+验签+身份验证
2020-03-19 14:42:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:06 -此处进行解密+验签+身份验证
2020-03-19 14:42:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:06 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:42:06 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:42:06 -==> Parameters: 469(String), epos(String)
2020-03-19 14:42:06 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:42:06 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:42:06 -==> Parameters: 469(String), TrafficCard(String)
2020-03-19 14:42:06 -<==      Total: 1
2020-03-19 14:42:06 -耗时 : 21
2020-03-19 14:42:06 -<==      Total: 0
2020-03-19 14:42:06 -耗时 : 17
2020-03-19 14:42:12 -此处进行解密+验签+身份验证
2020-03-19 14:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 14:42:12 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:42:12 -==> Parameters: 691(String), EPOS20200318041(String)
2020-03-19 14:42:12 -<==      Total: 1
2020-03-19 14:42:12 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 14:42:12 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:42:12 -<==      Total: 1
2020-03-19 14:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-19 14:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-19 14:42:12 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 14:42:12 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:42:12 -<==      Total: 1
2020-03-19 14:42:12 -耗时 : 30
2020-03-19 14:42:12 -此处进行解密+验签+身份验证
2020-03-19 14:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosSysParamRateList
2020-03-19 14:42:12 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:42:12 -==> Parameters: 469(String), EPOS20200318041(String)
2020-03-19 14:42:12 -<==      Total: 1
2020-03-19 14:42:12 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 14:42:12 -==> Parameters: 
2020-03-19 14:42:12 -<==      Total: 101
2020-03-19 14:42:12 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 14:42:12 -==> Parameters: EPOS20200318041(String)
2020-03-19 14:42:12 -<==      Total: 0
2020-03-19 14:42:12 -耗时 : 26
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:42:21 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 9
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -解密：
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:42:21 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:42:21 -==> Parameters: 01(String), 01(String)
2020-03-19 14:42:21 -<==      Total: 4
2020-03-19 14:42:21 -耗时 : 10
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -<==      Total: 2
2020-03-19 14:42:21 -耗时 : 6
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:42:21 -==> Parameters: 
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:42:21 -<==      Total: 3
2020-03-19 14:42:21 -耗时 : 5
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:42:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:42:21 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 7
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:42:21 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:42:21 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:42:21 -==> Parameters: 
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 11
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 7
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 0
2020-03-19 14:42:21 -耗时 : 24
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:42:21 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:42:21 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -此处进行解密+验签+身份验证
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:21 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 0
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:42:21 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 126
2020-03-19 14:42:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:42:21 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:42:21 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:42:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 8
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:42:21 -==> Parameters: 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 0
2020-03-19 14:42:21 -耗时 : 39
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:42:21 -==> Parameters: 
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:42:21 -<==    Updates: 1
2020-03-19 14:42:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:21 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 137
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:42:21 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:21 -<==      Total: 1
2020-03-19 14:42:21 -耗时 : 190
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:42:22 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 12
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -解密：
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:42:22 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:42:22 -==> Parameters: 01(String), 01(String)
2020-03-19 14:42:22 -<==      Total: 4
2020-03-19 14:42:22 -耗时 : 8
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:42:22 -==> Parameters: 
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==      Total: 3
2020-03-19 14:42:22 -耗时 : 10
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -<==      Total: 2
2020-03-19 14:42:22 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:22 -耗时 : 6
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 7
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:42:22 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:42:22 -<==      Total: 0
2020-03-19 14:42:22 -耗时 : 6
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:42:22 -==> Parameters: 
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:42:22 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:42:22 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 7
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 23
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:42:22 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:42:22 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:42:22 -此处进行解密+验签+身份验证
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:42:22 -<==      Total: 0
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:42:22 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:42:22 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 8
2020-03-19 14:42:22 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 127
2020-03-19 14:42:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:42:22 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:42:22 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:42:22 -==> Parameters: 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 0
2020-03-19 14:42:22 -耗时 : 42
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:42:22 -==> Parameters: 
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:42:22 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:42:22 -<==    Updates: 1
2020-03-19 14:42:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:42:22 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 130
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:42:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:42:22 -<==      Total: 1
2020-03-19 14:42:22 -耗时 : 194
2020-03-19 14:42:26 -<==      Total: 7
2020-03-19 14:42:26 -耗时 : 25937
2020-03-19 14:44:38 -此处进行解密+验签+身份验证
2020-03-19 14:44:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:38 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:44:38 -此处进行解密+验签+身份验证
2020-03-19 14:44:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@733de5f5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@27a97f50 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@36c030ac (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:44:38 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2a4e69cc (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@16d9444a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@486a1d2e (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@590b917 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@6f6a29bb (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@145b4617 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 14:44:38 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:44:38 -==> Parameters: 469(String)
2020-03-19 14:44:38 -<==      Total: 82
2020-03-19 14:44:38 -耗时 : 97
2020-03-19 14:44:40 -此处进行解密+验签+身份验证
2020-03-19 14:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:40 -此处进行解密+验签+身份验证
2020-03-19 14:44:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:40 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:44:40 -==> Parameters: 469(String), MPOS(String)
2020-03-19 14:44:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:44:40 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:44:40 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 14:44:40 -<==      Total: 1
2020-03-19 14:44:40 -耗时 : 21
2020-03-19 14:44:40 -<==      Total: 0
2020-03-19 14:44:40 -耗时 : 20
2020-03-19 14:44:41 -此处进行解密+验签+身份验证
2020-03-19 14:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:41 -此处进行解密+验签+身份验证
2020-03-19 14:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:41 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:44:41 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:44:41 -==> Parameters: 469(String), TrafficCard(String)
2020-03-19 14:44:41 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:44:41 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:44:41 -==> Parameters: 469(String), epos(String)
2020-03-19 14:44:41 -<==      Total: 0
2020-03-19 14:44:41 -耗时 : 22
2020-03-19 14:44:41 -<==      Total: 1
2020-03-19 14:44:41 -耗时 : 21
2020-03-19 14:44:42 -此处进行解密+验签+身份验证
2020-03-19 14:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:42 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 14:44:42 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:44:42 -==> Parameters: 691(String), EPOS20200318041(String)
2020-03-19 14:44:42 -<==      Total: 1
2020-03-19 14:44:42 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 14:44:42 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:44:42 -<==      Total: 1
2020-03-19 14:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-19 14:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-19 14:44:42 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 14:44:42 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:44:42 -<==      Total: 1
2020-03-19 14:44:42 -耗时 : 35
2020-03-19 14:44:42 -此处进行解密+验签+身份验证
2020-03-19 14:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:42 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosSysParamRateList
2020-03-19 14:44:42 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:44:42 -==> Parameters: 469(String), EPOS20200318041(String)
2020-03-19 14:44:42 -<==      Total: 1
2020-03-19 14:44:42 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 14:44:42 -==> Parameters: 
2020-03-19 14:44:42 -<==      Total: 101
2020-03-19 14:44:42 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 14:44:42 -==> Parameters: EPOS20200318041(String)
2020-03-19 14:44:42 -<==      Total: 0
2020-03-19 14:44:42 -耗时 : 25
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:44:59 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 11
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -解密：
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:44:59 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:44:59 -==> Parameters: 01(String), 01(String)
2020-03-19 14:44:59 -<==      Total: 4
2020-03-19 14:44:59 -耗时 : 9
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:44:59 -==> Parameters: 
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:44:59 -<==      Total: 3
2020-03-19 14:44:59 -耗时 : 10
2020-03-19 14:44:59 -<==      Total: 2
2020-03-19 14:44:59 -耗时 : 9
2020-03-19 14:44:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:44:59 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 8
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:44:59 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:44:59 -==> Parameters: 
2020-03-19 14:44:59 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:44:59 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 9
2020-03-19 14:44:59 -<==      Total: 0
2020-03-19 14:44:59 -耗时 : 17
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 21
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:44:59 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:44:59 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:44:59 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -此处进行解密+验签+身份验证
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -<==      Total: 0
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:44:59 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 116
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:44:59 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:44:59 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:44:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 7
2020-03-19 14:44:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:44:59 -==> Parameters: 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 0
2020-03-19 14:44:59 -耗时 : 48
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:44:59 -==> Parameters: 
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:44:59 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:44:59 -<==    Updates: 1
2020-03-19 14:44:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:44:59 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 122
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:44:59 -==> Parameters: 469(String), 469(String)
2020-03-19 14:44:59 -<==      Total: 1
2020-03-19 14:44:59 -耗时 : 222
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:45:00 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -耗时 : 13
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -解密：
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:45:00 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:45:00 -==> Parameters: 01(String), 01(String)
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -<==      Total: 4
2020-03-19 14:45:00 -耗时 : 6
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -<==      Total: 2
2020-03-19 14:45:00 -耗时 : 8
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:45:00 -==> Parameters: 
2020-03-19 14:45:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 3
2020-03-19 14:45:00 -耗时 : 12
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:45:00 -==> Parameters: 
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-19 14:45:00 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-19 14:45:00 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -耗时 : 7
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-19 14:45:00 -耗时 : 17
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-19 14:45:00 -==> Parameters: 469(String), 202003(String)
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 0
2020-03-19 14:45:00 -耗时 : 12
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -耗时 : 9
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -耗时 : 124
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:45:00 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-19 14:45:00 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -此处进行解密+验签+身份验证
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:00 -<==      Total: 0
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:45:00 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:45:00 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:45:00 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:00 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -耗时 : 8
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-19 14:45:00 -==> Parameters: 202003(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-19 14:45:00 -==> Parameters: 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:45:00 -<==      Total: 0
2020-03-19 14:45:00 -耗时 : 75
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:45:00 -==> Parameters: 
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-19 14:45:00 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:00 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -耗时 : 191
2020-03-19 14:45:00 -<==    Updates: 1
2020-03-19 14:45:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:00 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:45:00 -<==      Total: 1
2020-03-19 14:45:00 -耗时 : 191
2020-03-19 14:45:04 -<==      Total: 7
2020-03-19 14:45:04 -耗时 : 25851
2020-03-19 14:45:22 -此处进行解密+验签+身份验证
2020-03-19 14:45:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:22 -此处进行解密+验签+身份验证
2020-03-19 14:45:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:22 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:45:22 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:45:22 -==> Parameters: 469(String)
2020-03-19 14:45:22 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:45:22 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:45:22 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:22 -<==      Total: 82
2020-03-19 14:45:22 -耗时 : 42
2020-03-19 14:45:24 -此处进行解密+验签+身份验证
2020-03-19 14:45:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:24 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-19 14:45:24 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-19 14:45:24 -==> Parameters: 469(String)
2020-03-19 14:45:24 -<==      Total: 5
2020-03-19 14:45:24 -耗时 : 32
2020-03-19 14:45:26 -此处进行解密+验签+身份验证
2020-03-19 14:45:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:26 -此处进行解密+验签+身份验证
2020-03-19 14:45:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:26 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:45:26 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:45:26 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:45:26 -==> Parameters: 469(String), MPOS(String)
2020-03-19 14:45:26 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:45:26 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 14:45:26 -<==      Total: 1
2020-03-19 14:45:26 -耗时 : 24
2020-03-19 14:45:26 -<==      Total: 0
2020-03-19 14:45:26 -耗时 : 23
2020-03-19 14:45:27 -此处进行解密+验签+身份验证
2020-03-19 14:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:27 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 14:45:27 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 14:45:27 -==> Parameters: 2392(String), M351846116674(String)
2020-03-19 14:45:27 -<==      Total: 1
2020-03-19 14:45:27 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 14:45:27 -==> Parameters: 469_20200107111001(String)
2020-03-19 14:45:27 -<==      Total: 1
2020-03-19 14:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2392
2020-03-19 14:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2392 , return
2020-03-19 14:45:27 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 14:45:27 -==> Parameters: 469_20200107111001(String)
2020-03-19 14:45:27 -<==      Total: 1
2020-03-19 14:45:27 -耗时 : 95
2020-03-19 14:45:27 -此处进行解密+验签+身份验证
2020-03-19 14:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:27 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 14:45:27 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 14:45:27 -==> Parameters: 469(String), M351846116674(String)
2020-03-19 14:45:27 -<==      Total: 1
2020-03-19 14:45:27 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 14:45:27 -==> Parameters: 
2020-03-19 14:45:27 -<==      Total: 101
2020-03-19 14:45:27 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 14:45:27 -==> Parameters: M351846116674(String)
2020-03-19 14:45:27 -<==      Total: 0
2020-03-19 14:45:27 -耗时 : 92
2020-03-19 14:45:38 -此处进行解密+验签+身份验证
2020-03-19 14:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:38 -此处进行解密+验签+身份验证
2020-03-19 14:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:38 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:45:38 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:45:38 -==> Parameters: 469(String)
2020-03-19 14:45:38 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:45:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -耗时 : 9
2020-03-19 14:45:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:38 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:38 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:38 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:45:38 -<==    Updates: 1
2020-03-19 14:45:38 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:45:38 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:38 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:38 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:45:38 -<==    Updates: 1
2020-03-19 14:45:38 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:45:38 -==> Parameters: 
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:38 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:38 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:45:38 -<==    Updates: 1
2020-03-19 14:45:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:38 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:38 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:38 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:45:38 -<==    Updates: 1
2020-03-19 14:45:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:38 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:45:38 -<==      Total: 1
2020-03-19 14:45:38 -耗时 : 135
2020-03-19 14:45:46 -此处进行解密+验签+身份验证
2020-03-19 14:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-19 14:45:46 -此处进行解密+验签+身份验证
2020-03-19 14:45:46 -解密：
2020-03-19 14:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:45:46 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-19 14:45:46 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-19 14:45:46 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:45:46 -==> Parameters: 04(String), 04(String)
2020-03-19 14:45:46 -耗时 : 9
2020-03-19 14:45:46 -<==      Total: 1
2020-03-19 14:45:46 -耗时 : 13
2020-03-19 14:45:46 -此处进行解密+验签+身份验证
2020-03-19 14:45:46 -解密：{"login_password":"","device_type":"android","device_no":"1.0.9","sign":"F3DA0E5A99F8A12ADBF60D25FA883E5A","version_no":"450000000145206","login_type":"token","token":"469|97RJ0US91PK6EGX3QJ0UJKF7V0AFZCWN","sys_user_account":""}
2020-03-19 14:45:46 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 14:45:46 -token值=======469|97RJ0US91PK6EGX3QJ0UJKF7V0AFZCWN
2020-03-19 14:45:46 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-19 14:45:46 -==> Parameters: 469(String)
2020-03-19 14:45:46 -<==      Total: 1
2020-03-19 14:45:46 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 14:45:46 -==> Parameters: 25(String)
2020-03-19 14:45:46 -<==      Total: 1
2020-03-19 14:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 14:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 14:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 14:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 14:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 14:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 14:45:46 -耗时 : 64
2020-03-19 14:45:49 -<==      Total: 7
2020-03-19 14:45:49 -耗时 : 26463
2020-03-19 14:45:51 -此处进行解密+验签+身份验证
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:45:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:45:51 -==> Parameters: 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -耗时 : 15
2020-03-19 14:45:51 -此处进行解密+验签+身份验证
2020-03-19 14:45:51 -解密：
2020-03-19 14:45:51 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:45:51 -此处进行解密+验签+身份验证
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:51 -此处进行解密+验签+身份验证
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:51 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:51 -==> Parameters: 01(String), 01(String)
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:51 -此处进行解密+验签+身份验证
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:51 -<==      Total: 4
2020-03-19 14:45:51 -耗时 : 11
2020-03-19 14:45:51 -此处进行解密+验签+身份验证
2020-03-19 14:45:51 -此处进行解密+验签+身份验证
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:51 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:45:51 -==> Parameters: 469(String)
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:51 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:45:51 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:45:51 -==> Parameters: 
2020-03-19 14:45:51 -<==      Total: 3
2020-03-19 14:45:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:45:51 -耗时 : 7
2020-03-19 14:45:51 -<==      Total: 2
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:45:51 -耗时 : 12
2020-03-19 14:45:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:45:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:45:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:45:51 -==> Parameters: 469(String)
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:45:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:45:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -耗时 : 8
2020-03-19 14:45:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:45:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:45:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:45:51 -==> Parameters: 
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:45:51 -==> Parameters: 
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:45:51 -耗时 : 130
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:45:51 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:45:51 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:45:51 -<==    Updates: 1
2020-03-19 14:45:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:45:51 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:45:51 -<==      Total: 1
2020-03-19 14:45:51 -耗时 : 209
2020-03-19 14:45:52 -此处进行解密+验签+身份验证
2020-03-19 14:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:52 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:45:52 -此处进行解密+验签+身份验证
2020-03-19 14:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:52 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:45:52 -==> Parameters: 469(String)
2020-03-19 14:45:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:52 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:45:52 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:45:52 -==> Parameters: 469(String), 469(String)
2020-03-19 14:45:52 -<==      Total: 82
2020-03-19 14:45:52 -耗时 : 46
2020-03-19 14:45:54 -此处进行解密+验签+身份验证
2020-03-19 14:45:54 -此处进行解密+验签+身份验证
2020-03-19 14:45:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:45:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:45:54 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:45:54 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 14:45:54 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:45:54 -==> Parameters: 469(String), MPOS(String)
2020-03-19 14:45:54 -<==      Total: 1
2020-03-19 14:45:54 -耗时 : 19
2020-03-19 14:45:54 -<==      Total: 0
2020-03-19 14:45:54 -耗时 : 27
2020-03-19 14:45:55 -此处进行解密+验签+身份验证
2020-03-19 14:45:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:55 -此处进行解密+验签+身份验证
2020-03-19 14:45:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:55 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:45:55 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:45:55 -==> Parameters: 469(String), epos(String)
2020-03-19 14:45:55 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 14:45:55 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 14:45:55 -==> Parameters: 469(String), TrafficCard(String)
2020-03-19 14:45:55 -<==      Total: 1
2020-03-19 14:45:55 -耗时 : 20
2020-03-19 14:45:55 -<==      Total: 0
2020-03-19 14:45:55 -耗时 : 27
2020-03-19 14:45:58 -此处进行解密+验签+身份验证
2020-03-19 14:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 14:45:58 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:45:58 -==> Parameters: 691(String), EPOS20200318041(String)
2020-03-19 14:45:58 -<==      Total: 1
2020-03-19 14:45:58 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 14:45:58 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:45:58 -<==      Total: 1
2020-03-19 14:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-19 14:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-19 14:45:58 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 14:45:58 -==> Parameters: 469_20200318105351(String)
2020-03-19 14:45:58 -<==      Total: 1
2020-03-19 14:45:58 -耗时 : 37
2020-03-19 14:45:58 -此处进行解密+验签+身份验证
2020-03-19 14:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:45:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:45:58 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosSysParamRateList
2020-03-19 14:45:58 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 14:45:58 -==> Parameters: 469(String), EPOS20200318041(String)
2020-03-19 14:45:58 -<==      Total: 1
2020-03-19 14:45:58 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 14:45:58 -==> Parameters: 
2020-03-19 14:45:58 -<==      Total: 101
2020-03-19 14:45:58 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 14:45:58 -==> Parameters: EPOS20200318041(String)
2020-03-19 14:45:58 -<==      Total: 0
2020-03-19 14:45:58 -耗时 : 26
2020-03-19 14:46:14 -此处进行解密+验签+身份验证
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:14 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:46:14 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:46:14 -==> Parameters: 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -耗时 : 9
2020-03-19 14:46:14 -此处进行解密+验签+身份验证
2020-03-19 14:46:14 -解密：
2020-03-19 14:46:14 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:46:14 -此处进行解密+验签+身份验证
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:14 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:46:14 -==> Parameters: 01(String), 01(String)
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:14 -<==      Total: 4
2020-03-19 14:46:14 -耗时 : 12
2020-03-19 14:46:14 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:46:14 -此处进行解密+验签+身份验证
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:14 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:46:14 -==> Parameters: 469(String)
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:14 -此处进行解密+验签+身份验证
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:14 -此处进行解密+验签+身份验证
2020-03-19 14:46:14 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:14 -<==      Total: 2
2020-03-19 14:46:14 -耗时 : 11
2020-03-19 14:46:14 -此处进行解密+验签+身份验证
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:14 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:14 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:46:14 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:46:14 -==> Parameters: 
2020-03-19 14:46:14 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:46:14 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:46:14 -<==      Total: 3
2020-03-19 14:46:14 -耗时 : 7
2020-03-19 14:46:14 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:46:14 -==> Parameters: 469(String)
2020-03-19 14:46:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:46:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:14 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -耗时 : 19
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:46:14 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:46:14 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:46:14 -==> Parameters: 
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:46:14 -==> Parameters: 
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:14 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:14 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:14 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:46:14 -<==    Updates: 1
2020-03-19 14:46:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:14 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -耗时 : 140
2020-03-19 14:46:14 -<==      Total: 1
2020-03-19 14:46:14 -耗时 : 124
2020-03-19 14:46:15 -此处进行解密+验签+身份验证
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:15 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:46:15 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:46:15 -==> Parameters: 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -耗时 : 11
2020-03-19 14:46:15 -此处进行解密+验签+身份验证
2020-03-19 14:46:15 -解密：
2020-03-19 14:46:15 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:46:15 -此处进行解密+验签+身份验证
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:15 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:46:15 -==> Parameters: 01(String), 01(String)
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:15 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:46:15 -此处进行解密+验签+身份验证
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:15 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:46:15 -==> Parameters: 469(String)
2020-03-19 14:46:15 -<==      Total: 4
2020-03-19 14:46:15 -耗时 : 19
2020-03-19 14:46:15 -此处进行解密+验签+身份验证
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:15 -此处进行解密+验签+身份验证
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:15 -<==      Total: 2
2020-03-19 14:46:15 -耗时 : 12
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:15 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:46:15 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:46:15 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:46:15 -==> Parameters: 
2020-03-19 14:46:15 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:46:15 -<==      Total: 3
2020-03-19 14:46:15 -耗时 : 12
2020-03-19 14:46:15 -此处进行解密+验签+身份验证
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:46:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:15 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:46:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:15 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:15 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:46:15 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:46:15 -==> Parameters: 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -耗时 : 9
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:46:15 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:46:15 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:46:15 -==> Parameters: 
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:46:15 -==> Parameters: 
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:15 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:46:15 -==> Parameters: 469(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -耗时 : 140
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:46:15 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:46:15 -<==    Updates: 1
2020-03-19 14:46:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:46:15 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:46:15 -<==      Total: 1
2020-03-19 14:46:15 -耗时 : 195
2020-03-19 14:46:19 -<==      Total: 7
2020-03-19 14:46:19 -耗时 : 27109
2020-03-19 14:52:59 -Starting LongEcologicalApplication on PC-201905161910 with PID 9792 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-19 14:52:59 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-19 14:52:59 -No active profile set, falling back to default profiles: default
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 14:53:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-19 14:53:00 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-19 14:53:00 -Finished Spring Data repository scanning in 83ms. Found 0 repository interfaces.
2020-03-19 14:53:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-19 14:53:00 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-19 14:53:00 -Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2020-03-19 14:53:01 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$66467b10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-19 14:53:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$60ca5fb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-19 14:53:01 -Tomcat initialized with port(s): 8080 (http)
2020-03-19 14:53:01 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-19 14:53:01 -Starting service [Tomcat]
2020-03-19 14:53:01 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-19 14:53:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-19 14:53:01 -Initializing Spring embedded WebApplicationContext
2020-03-19 14:53:01 -Root WebApplicationContext: initialization completed in 2572 ms
2020-03-19 14:53:02 -Filter xssFilter was not registered (disabled)
2020-03-19 14:53:02 -HikariPool-1 - Starting...
2020-03-19 14:53:02 -HikariPool-1 - Start completed.
2020-03-19 14:53:02 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-19 14:53:02 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-19 14:53:02 -HHH000206: hibernate.properties not found
2020-03-19 14:53:03 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-19 14:53:03 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-19 14:53:03 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-19 14:53:04 -Using default implementation for ThreadExecutor
2020-03-19 14:53:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-19 14:53:04 -Quartz Scheduler v.2.3.0 created.
2020-03-19 14:53:04 -RAMJobStore initialized.
2020-03-19 14:53:04 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-19 14:53:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-19 14:53:04 -Quartz scheduler version: 2.3.0
2020-03-19 14:53:04 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@552088cc
2020-03-19 14:53:04 -STAET TaskExecutorConfig
2020-03-19 14:53:04 -Initializing ExecutorService
2020-03-19 14:53:04 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-19 14:53:05 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-19 14:53:05 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-19 14:53:05 -Initializing ExecutorService 'taskScheduler'
2020-03-19 14:53:06 -Starting Quartz Scheduler now
2020-03-19 14:53:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-19 14:53:06 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-19 14:53:06 -Using a shared selector for servlet write/read
2020-03-19 14:53:06 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-19 14:53:06 -Started LongEcologicalApplication in 8.447 seconds (JVM running for 10.913)
2020-03-19 14:53:22 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-19 14:53:22 -Initializing Servlet 'dispatcherServlet'
2020-03-19 14:53:22 -Completed initialization in 14 ms
2020-03-19 14:53:22 -此处进行解密+验签+身份验证
2020-03-19 14:53:22 -此处进行解密+验签+身份验证
2020-03-19 14:53:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:23 -Starting without optional epoll library
2020-03-19 14:53:23 -Starting without optional kqueue library
2020-03-19 14:53:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:23 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:53:23 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:53:26 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:53:26 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:53:26 -==> Parameters: 469(String)
2020-03-19 14:53:26 -==> Parameters: 469(String), 469(String)
2020-03-19 14:53:26 -<==      Total: 82
2020-03-19 14:53:26 -耗时 : 3330
2020-03-19 14:53:43 -此处进行解密+验签+身份验证
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:53:43 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:53:43 -==> Parameters: 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -耗时 : 24
2020-03-19 14:53:43 -此处进行解密+验签+身份验证
2020-03-19 14:53:43 -此处进行解密+验签+身份验证
2020-03-19 14:53:43 -此处进行解密+验签+身份验证
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:43 -此处进行解密+验签+身份验证
2020-03-19 14:53:43 -此处进行解密+验签+身份验证
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:43 -此处进行解密+验签+身份验证
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:53:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 14:53:43 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 14:53:43 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 14:53:43 -==> Parameters: 469(String)
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:53:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 14:53:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:53:43 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 14:53:43 -==> Parameters: 469(String)
2020-03-19 14:53:43 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 14:53:43 -<==      Total: 2
2020-03-19 14:53:43 -耗时 : 17
2020-03-19 14:53:43 -==> Parameters: 
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:53:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -耗时 : 18
2020-03-19 14:53:43 -<==      Total: 3
2020-03-19 14:53:43 -耗时 : 28
2020-03-19 14:53:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 14:53:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:53:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:53:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:53:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:53:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 14:53:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:53:43 -==> Parameters: 
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 14:53:43 -==> Parameters: 
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:53:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -耗时 : 139
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 14:53:43 -==> Parameters: 469(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 14:53:43 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 14:53:43 -<==    Updates: 1
2020-03-19 14:53:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 14:53:43 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 14:53:43 -<==      Total: 1
2020-03-19 14:53:43 -耗时 : 211
2020-03-19 14:53:44 -解密：
2020-03-19 14:53:44 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 14:53:44 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 14:53:44 -==> Parameters: 01(String), 01(String)
2020-03-19 14:53:44 -<==      Total: 4
2020-03-19 14:53:44 -耗时 : 17
2020-03-19 14:53:53 -<==      Total: 7
2020-03-19 14:53:58 -耗时 : 34590
2020-03-19 14:54:13 -此处进行解密+验签+身份验证
2020-03-19 14:54:13 -此处进行解密+验签+身份验证
2020-03-19 14:54:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:54:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 14:54:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:54:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 14:54:13 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 14:54:13 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 14:54:13 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 14:54:13 -==> Parameters: 469(String), 469(String)
2020-03-19 14:54:13 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 14:54:13 -==> Parameters: 469(String)
2020-03-19 14:54:13 -<==      Total: 82
2020-03-19 14:54:13 -耗时 : 52
2020-03-19 14:54:39 -<==      Total: 7
2020-03-19 14:54:39 -耗时 : 25734
2020-03-19 15:24:26 -此处进行解密+验签+身份验证
2020-03-19 15:24:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:24:26 -此处进行解密+验签+身份验证
2020-03-19 15:24:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:24:26 -解密异常：{token=469|97RJ0US91PK6EGX3QJ0UJKF7V0AFZCWN, sign=40B57664690CFEE2418102F2B2CC97F1, pos_type=MPOS}
2020-03-19 15:24:26 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:24:26 -耗时 : 0
2020-03-19 15:24:26 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-19 15:24:26 -Reconnected to 120.25.164.176:10379
2020-03-19 15:24:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:24:26 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:24:26 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:24:26 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 15:24:26 -<==      Total: 0
2020-03-19 15:24:26 -耗时 : 34
2020-03-19 15:24:28 -此处进行解密+验签+身份验证
2020-03-19 15:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:24:28 -此处进行解密+验签+身份验证
2020-03-19 15:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:24:28 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:24:28 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:24:28 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:24:28 -==> Parameters: 469(String), epos(String)
2020-03-19 15:24:28 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:24:28 -==> Parameters: 469(String), TrafficCard(String)
2020-03-19 15:24:28 -<==      Total: 0
2020-03-19 15:24:28 -耗时 : 23
2020-03-19 15:24:28 -<==      Total: 1
2020-03-19 15:24:28 -耗时 : 30
2020-03-19 15:24:29 -此处进行解密+验签+身份验证
2020-03-19 15:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:24:29 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:24:29 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 15:24:29 -==> Parameters: 691(String), EPOS20200318041(String)
2020-03-19 15:24:29 -<==      Total: 1
2020-03-19 15:24:29 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:24:29 -==> Parameters: 469_20200318105351(String)
2020-03-19 15:24:29 -<==      Total: 1
2020-03-19 15:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-19 15:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-19 15:24:29 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:24:29 -==> Parameters: 469_20200318105351(String)
2020-03-19 15:24:29 -<==      Total: 1
2020-03-19 15:24:29 -耗时 : 93
2020-03-19 15:24:29 -此处进行解密+验签+身份验证
2020-03-19 15:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:24:29 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosSysParamRateList
2020-03-19 15:24:29 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-19 15:24:29 -==> Parameters: 469(String), EPOS20200318041(String)
2020-03-19 15:24:29 -<==      Total: 1
2020-03-19 15:24:29 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:24:29 -==> Parameters: 
2020-03-19 15:24:29 -<==      Total: 101
2020-03-19 15:24:29 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:24:29 -==> Parameters: EPOS20200318041(String)
2020-03-19 15:24:29 -<==      Total: 0
2020-03-19 15:24:29 -耗时 : 76
2020-03-19 15:26:18 -此处进行解密+验签+身份验证
2020-03-19 15:26:18 -此处进行解密+验签+身份验证
2020-03-19 15:26:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:26:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:26:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:26:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:26:18 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:26:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 15:26:18 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:26:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 15:26:18 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:26:18 -==> Parameters: 469(String)
2020-03-19 15:26:18 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:26:18 -==> Parameters: 469(String), 469(String)
2020-03-19 15:26:18 -<==      Total: 1
2020-03-19 15:26:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:26:18 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 15:26:18 -<==      Total: 1
2020-03-19 15:26:18 -耗时 : 23
2020-03-19 15:26:18 -<==      Total: 1
2020-03-19 15:26:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:26:18 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 15:26:19 -<==    Updates: 1
2020-03-19 15:26:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:26:19 -==> Parameters: 469(String), 469(String)
2020-03-19 15:26:19 -<==      Total: 1
2020-03-19 15:26:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:26:19 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 15:26:19 -<==      Total: 1
2020-03-19 15:26:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:26:19 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 15:26:19 -<==    Updates: 1
2020-03-19 15:26:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:26:19 -==> Parameters: 
2020-03-19 15:26:19 -<==      Total: 1
2020-03-19 15:26:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:26:19 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 15:26:19 -<==      Total: 1
2020-03-19 15:26:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:26:19 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 15:26:19 -<==    Updates: 1
2020-03-19 15:26:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:26:19 -==> Parameters: 469(String), 469(String)
2020-03-19 15:26:19 -<==      Total: 1
2020-03-19 15:26:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:26:19 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 15:26:19 -<==      Total: 1
2020-03-19 15:26:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:26:19 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 15:26:19 -<==    Updates: 1
2020-03-19 15:26:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:26:19 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 15:26:19 -<==      Total: 1
2020-03-19 15:26:19 -耗时 : 169
2020-03-19 15:30:25 -此处进行解密+验签+身份验证
2020-03-19 15:30:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:25 -请求地址 : http://192.168.191.1:8080/api/sys/mpos/getMposList
2020-03-19 15:30:25 -==>  Preparing: SELECT cast(t.id as char) as mpos_id, t1.sn, t1.name, t1.tel FROM t_user_mpos_info t LEFT JOIN t_sys_mpos_info t1 on t.sn = t1.sn where t.user_id = ? and t.state_status = '1' order by t.id desc limit 0,10 
2020-03-19 15:30:25 -==> Parameters: 469(String)
2020-03-19 15:30:25 -<==      Total: 10
2020-03-19 15:30:25 -耗时 : 37
2020-03-19 15:30:27 -此处进行解密+验签+身份验证
2020-03-19 15:30:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:27 -此处进行解密+验签+身份验证
2020-03-19 15:30:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:27 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:30:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:30:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 15:30:27 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:30:27 -==> Parameters: 469(String)
2020-03-19 15:30:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 15:30:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:30:27 -==> Parameters: 469(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -耗时 : 21
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:30:27 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:30:27 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 15:30:27 -<==    Updates: 1
2020-03-19 15:30:27 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:30:27 -==> Parameters: 469(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:30:27 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:30:27 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 15:30:27 -<==    Updates: 1
2020-03-19 15:30:27 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:30:27 -==> Parameters: 
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:30:27 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:30:27 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 15:30:27 -<==    Updates: 1
2020-03-19 15:30:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:30:27 -==> Parameters: 469(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:30:27 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:30:27 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 15:30:27 -<==    Updates: 1
2020-03-19 15:30:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:30:27 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 15:30:27 -<==      Total: 1
2020-03-19 15:30:27 -耗时 : 143
2020-03-19 15:30:28 -此处进行解密+验签+身份验证
2020-03-19 15:30:28 -此处进行解密+验签+身份验证
2020-03-19 15:30:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:28 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 15:30:28 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:30:28 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 15:30:28 -==> Parameters: 469(String), 469(String)
2020-03-19 15:30:28 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:30:28 -==> Parameters: 469(String)
2020-03-19 15:30:28 -<==      Total: 82
2020-03-19 15:30:28 -耗时 : 41
2020-03-19 15:30:28 -<==      Total: 7
2020-03-19 15:30:28 -耗时 : 271
2020-03-19 15:30:40 -此处进行解密+验签+身份验证
2020-03-19 15:30:40 -此处进行解密+验签+身份验证
2020-03-19 15:30:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:30:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:30:40 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:30:40 -==> Parameters: 469(String), M351846116651(String)
2020-03-19 15:30:40 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:30:40 -==> Parameters: 469(String)
2020-03-19 15:30:40 -<==      Total: 3
2020-03-19 15:30:40 -耗时 : 14
2020-03-19 15:30:40 -<==      Total: 1
2020-03-19 15:30:40 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:30:40 -==> Parameters: 
2020-03-19 15:30:40 -<==      Total: 101
2020-03-19 15:30:40 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:30:40 -==> Parameters: M351846116651(String)
2020-03-19 15:30:40 -<==      Total: 0
2020-03-19 15:30:40 -耗时 : 101
2020-03-19 15:30:45 -此处进行解密+验签+身份验证
2020-03-19 15:30:45 -此处进行解密+验签+身份验证
2020-03-19 15:30:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:45 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:30:45 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:30:45 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:30:45 -==> Parameters: 469(String), M351846116651(String)
2020-03-19 15:30:45 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:30:45 -==> Parameters: 469(String)
2020-03-19 15:30:45 -<==      Total: 1
2020-03-19 15:30:45 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:30:45 -==> Parameters: 
2020-03-19 15:30:45 -<==      Total: 101
2020-03-19 15:30:45 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:30:45 -==> Parameters: M351846116651(String)
2020-03-19 15:30:45 -<==      Total: 3
2020-03-19 15:30:45 -耗时 : 22
2020-03-19 15:30:45 -<==      Total: 0
2020-03-19 15:30:45 -耗时 : 29
2020-03-19 15:30:50 -此处进行解密+验签+身份验证
2020-03-19 15:30:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:50 -此处进行解密+验签+身份验证
2020-03-19 15:30:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:30:50 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:30:50 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:30:50 -==> Parameters: 469(String), M351846116651(String)
2020-03-19 15:30:50 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:30:50 -==> Parameters: 469(String)
2020-03-19 15:30:50 -<==      Total: 1
2020-03-19 15:30:50 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:30:50 -==> Parameters: 
2020-03-19 15:30:50 -<==      Total: 3
2020-03-19 15:30:50 -耗时 : 23
2020-03-19 15:30:50 -<==      Total: 101
2020-03-19 15:30:50 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:30:50 -==> Parameters: M351846116651(String)
2020-03-19 15:30:50 -<==      Total: 0
2020-03-19 15:30:50 -耗时 : 29
2020-03-19 15:30:53 -此处进行解密+验签+身份验证
2020-03-19 15:30:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:53 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-19 15:30:53 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-19 15:30:53 -==> Parameters: 469(String)
2020-03-19 15:30:53 -<==      Total: 0
2020-03-19 15:30:53 -耗时 : 37
2020-03-19 15:30:55 -此处进行解密+验签+身份验证
2020-03-19 15:30:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:55 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-19 15:30:55 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-19 15:30:55 -==> Parameters: 469(String)
2020-03-19 15:30:55 -<==      Total: 0
2020-03-19 15:30:55 -耗时 : 23
2020-03-19 15:30:57 -此处进行解密+验签+身份验证
2020-03-19 15:30:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:57 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:30:57 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:30:57 -==> Parameters: 469(String), MPOS(String)
2020-03-19 15:30:57 -此处进行解密+验签+身份验证
2020-03-19 15:30:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:30:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:30:58 -<==      Total: 1
2020-03-19 15:30:58 -耗时 : 21
2020-03-19 15:30:58 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:30:58 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:30:58 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 15:30:58 -<==      Total: 0
2020-03-19 15:30:58 -耗时 : 29
2020-03-19 15:31:00 -此处进行解密+验签+身份验证
2020-03-19 15:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:31:00 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:31:00 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:31:00 -==> Parameters: 2392(String), M351846116674(String)
2020-03-19 15:31:00 -<==      Total: 1
2020-03-19 15:31:00 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:31:00 -==> Parameters: 469_20200107111001(String)
2020-03-19 15:31:00 -<==      Total: 1
2020-03-19 15:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2392
2020-03-19 15:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2392 , return
2020-03-19 15:31:00 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:31:00 -==> Parameters: 469_20200107111001(String)
2020-03-19 15:31:00 -<==      Total: 1
2020-03-19 15:31:00 -耗时 : 94
2020-03-19 15:31:00 -此处进行解密+验签+身份验证
2020-03-19 15:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:31:00 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:31:00 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:31:00 -==> Parameters: 469(String), M351846116674(String)
2020-03-19 15:31:00 -<==      Total: 1
2020-03-19 15:31:00 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:31:00 -==> Parameters: 
2020-03-19 15:31:00 -<==      Total: 101
2020-03-19 15:31:00 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:31:00 -==> Parameters: M351846116674(String)
2020-03-19 15:31:00 -<==      Total: 0
2020-03-19 15:31:00 -耗时 : 103
2020-03-19 15:33:22 -此处进行解密+验签+身份验证
2020-03-19 15:33:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:33:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:33:22 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-19 15:33:22 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-19 15:33:22 -==> Parameters: 469(String)
2020-03-19 15:33:22 -<==      Total: 0
2020-03-19 15:33:22 -耗时 : 37
2020-03-19 15:33:23 -此处进行解密+验签+身份验证
2020-03-19 15:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:33:23 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-19 15:33:23 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-19 15:33:23 -==> Parameters: 469(String)
2020-03-19 15:33:23 -<==      Total: 0
2020-03-19 15:33:23 -耗时 : 27
2020-03-19 15:33:53 -此处进行解密+验签+身份验证
2020-03-19 15:33:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:33:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:33:53 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:33:53 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:33:53 -==> Parameters: 469(String)
2020-03-19 15:33:53 -<==      Total: 82
2020-03-19 15:33:53 -耗时 : 50
2020-03-19 15:34:04 -此处进行解密+验签+身份验证
2020-03-19 15:34:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:34:04 -此处进行解密+验签+身份验证
2020-03-19 15:34:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:34:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:34:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:34:04 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:34:04 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:34:04 -==> Parameters: 469(String)
2020-03-19 15:34:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:34:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 15:34:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -耗时 : 10
2020-03-19 15:34:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:34:04 -==> Parameters: 469(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:04 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:04 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 15:34:04 -<==    Updates: 1
2020-03-19 15:34:04 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:34:04 -==> Parameters: 469(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:04 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:04 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 15:34:04 -<==    Updates: 1
2020-03-19 15:34:04 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:34:04 -==> Parameters: 
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:04 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:04 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 15:34:04 -<==    Updates: 1
2020-03-19 15:34:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:34:04 -==> Parameters: 469(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:04 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:04 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 15:34:04 -<==    Updates: 1
2020-03-19 15:34:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:04 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 15:34:04 -<==      Total: 1
2020-03-19 15:34:04 -耗时 : 145
2020-03-19 15:34:09 -此处进行解密+验签+身份验证
2020-03-19 15:34:09 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-03-19 15:34:09 -token值=======469|97RJ0US91PK6EGX3QJ0UJKF7V0AFZCWN
2020-03-19 15:34:09 -==>  Preparing: update t_user_info set device_token=? where id=? 
2020-03-19 15:34:09 -==> Parameters: null, 469(String)
2020-03-19 15:34:09 -<==    Updates: 1
2020-03-19 15:34:09 -耗时 : 58
2020-03-19 15:34:15 -此处进行解密+验签+身份验证
2020-03-19 15:34:15 -解密：{"sys_user_account":"13322990711","login_password":"8A6F2805B4515AC12058E79E66539BE9","device_type":"android","device_no":"1.0.9","sign":"D8C941101DA33D1D3D1FE861A1D9D6A8","version_no":"450000000145206","login_type":"account"}
2020-03-19 15:34:15 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 15:34:15 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 15:34:15 -==> Parameters: 13322990711(String)
2020-03-19 15:34:15 -<==      Total: 1
2020-03-19 15:34:15 -耗时 : 22
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -解密：{"sys_user_account":"13322990711","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","device_type":"android","device_no":"1.0.9","sign":"EFF4553AA97C43A56716153EB440498E","version_no":"450000000145206","login_type":"account"}
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 15:34:30 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 15:34:30 -==> Parameters: 13322990711(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-19 15:34:30 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), null, 192.168.191.1(String), 20200319(String), 153430(String), 181(Integer)
2020-03-19 15:34:30 -<==    Updates: 1
2020-03-19 15:34:30 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 15:34:30 -==> Parameters: 26(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:34:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:34:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:34:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:34:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:34:30 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:34:30 -耗时 : 105
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -解密：
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:34:30 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:34:30 -==> Parameters: 181(String)
2020-03-19 15:34:30 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 15:34:30 -==> Parameters: 01(String), 01(String)
2020-03-19 15:34:30 -<==      Total: 4
2020-03-19 15:34:30 -耗时 : 10
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -耗时 : 14
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 15:34:30 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 15:34:30 -==> Parameters: 
2020-03-19 15:34:30 -此处进行解密+验签+身份验证
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:34:30 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:34:30 -==> Parameters: 181(String)
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -<==      Total: 3
2020-03-19 15:34:30 -耗时 : 8
2020-03-19 15:34:30 -耗时 : 16
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 15:34:30 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 15:34:30 -==> Parameters: 181(String)
2020-03-19 15:34:30 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 15:34:30 -<==      Total: 2
2020-03-19 15:34:30 -耗时 : 8
2020-03-19 15:34:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:34:30 -==> Parameters: 181(String), 181(String)
2020-03-19 15:34:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 15:34:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:34:30 -==> Parameters: 181(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 2
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 15:34:30 -<==      Total: 2
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 15:34:30 -<==    Updates: 2
2020-03-19 15:34:30 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:34:30 -==> Parameters: 181(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 15:34:30 -<==    Updates: 2
2020-03-19 15:34:30 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:34:30 -==> Parameters: 181(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 15:34:30 -<==    Updates: 1
2020-03-19 15:34:30 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:34:30 -==> Parameters: 
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 15:34:30 -<==    Updates: 1
2020-03-19 15:34:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:34:30 -==> Parameters: 181(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -<==    Updates: 1
2020-03-19 15:34:30 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 15:34:30 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:34:30 -==> Parameters: 
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 15:34:30 -<==    Updates: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -耗时 : 134
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 15:34:30 -<==    Updates: 1
2020-03-19 15:34:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:34:30 -==> Parameters: 181(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:34:30 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 15:34:30 -<==    Updates: 1
2020-03-19 15:34:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:34:30 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 15:34:30 -<==      Total: 1
2020-03-19 15:34:30 -耗时 : 239
2020-03-19 15:34:32 -此处进行解密+验签+身份验证
2020-03-19 15:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:32 -此处进行解密+验签+身份验证
2020-03-19 15:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:32 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:32 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:34:32 -==> Parameters: 181(String)
2020-03-19 15:34:32 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 15:34:32 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 15:34:32 -==> Parameters: 181(String), 181(String)
2020-03-19 15:34:32 -<==      Total: 1171
2020-03-19 15:34:32 -耗时 : 77
2020-03-19 15:34:32 -<==      Total: 1595
2020-03-19 15:34:32 -耗时 : 248
2020-03-19 15:34:37 -此处进行解密+验签+身份验证
2020-03-19 15:34:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:37 -此处进行解密+验签+身份验证
2020-03-19 15:34:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:37 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:34:37 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:34:37 -==> Parameters: 181(String), M351846173301(String)
2020-03-19 15:34:37 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:34:37 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:34:37 -==> Parameters: 181(String)
2020-03-19 15:34:38 -<==      Total: 1
2020-03-19 15:34:38 -<==      Total: 143
2020-03-19 15:34:38 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:34:38 -==> Parameters: 
2020-03-19 15:34:38 -耗时 : 14
2020-03-19 15:34:38 -<==      Total: 101
2020-03-19 15:34:38 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:34:38 -==> Parameters: M351846173301(String)
2020-03-19 15:34:38 -<==      Total: 1
2020-03-19 15:34:38 -耗时 : 58
2020-03-19 15:34:44 -此处进行解密+验签+身份验证
2020-03-19 15:34:44 -此处进行解密+验签+身份验证
2020-03-19 15:34:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:44 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:34:44 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:34:44 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:34:44 -==> Parameters: 181(String)
2020-03-19 15:34:44 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:34:44 -==> Parameters: 181(String), M351846173303(String)
2020-03-19 15:34:44 -<==      Total: 143
2020-03-19 15:34:44 -耗时 : 22
2020-03-19 15:34:44 -<==      Total: 1
2020-03-19 15:34:44 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:34:44 -==> Parameters: 
2020-03-19 15:34:44 -<==      Total: 101
2020-03-19 15:34:44 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:34:44 -==> Parameters: M351846173303(String)
2020-03-19 15:34:44 -<==      Total: 0
2020-03-19 15:34:44 -耗时 : 78
2020-03-19 15:34:56 -此处进行解密+验签+身份验证
2020-03-19 15:34:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:56 -此处进行解密+验签+身份验证
2020-03-19 15:34:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:34:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:34:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:34:56 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:34:56 -==> Parameters: 181(String)
2020-03-19 15:34:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:34:56 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:34:56 -==> Parameters: 181(String), M351846173301(String)
2020-03-19 15:34:56 -<==      Total: 143
2020-03-19 15:34:56 -耗时 : 12
2020-03-19 15:34:56 -<==      Total: 1
2020-03-19 15:34:56 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:34:56 -==> Parameters: 
2020-03-19 15:34:56 -<==      Total: 101
2020-03-19 15:34:56 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:34:56 -==> Parameters: M351846173301(String)
2020-03-19 15:34:56 -<==      Total: 1
2020-03-19 15:34:56 -耗时 : 54
2020-03-19 15:35:11 -此处进行解密+验签+身份验证
2020-03-19 15:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:11 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/allocationMpos
2020-03-19 15:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_70
2020-03-19 15:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_70 , return
2020-03-19 15:35:11 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND find_in_set(sn, ?) AND cast(card_settle_price as decimal) <= cast(? as decimal) AND cast(cloud_settle_price as decimal) <= cast(? as decimal) AND cast(single_profit_rate as decimal) >= cast(? as decimal) AND cast(cash_back_rate as decimal) >= cast(? as decimal) 
2020-03-19 15:35:11 -==> Parameters: 181(String), M351846173301(String), 0.485(String), 0.28(String), 0.00(String), 0.000(String)
2020-03-19 15:35:11 -<==      Total: 1
2020-03-19 15:35:11 -==>  Preparing: select count(distinct is_reward) as cnt from t_user_mpos_info where user_id=? and sn in ( ? ) 
2020-03-19 15:35:11 -==> Parameters: 181(String), M351846173301(String)
2020-03-19 15:35:11 -<==      Total: 1
2020-03-19 15:35:11 -==>  Preparing: select count(*) as cnt from t_user_mpos_info where user_id=? and is_reward='0' and sn in ( ? ) 
2020-03-19 15:35:11 -==> Parameters: 181(String), M351846173301(String)
2020-03-19 15:35:11 -<==      Total: 1
2020-03-19 15:35:11 -==>  Preparing: INSERT INTO t_user_mpos_info ( user_id, sn, card_settle_price, cloud_settle_price, single_profit_rate, cash_back_rate, cre_date, cre_time, is_reward ) SELECT ?, t.sn, ?, ?, ?, ?, ?, ?, ? FROM t_user_mpos_info t WHERE t.user_id = ? AND t.activity_status = '0' AND t.state_status = '1' AND FIND_IN_SET(t.sn, ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_info t1 WHERE t1.user_id = ? AND t1.sn = t.sn ) 
2020-03-19 15:35:11 -==> Parameters: 70(String), 0.485(String), 0.28(String), 0.00(String), 0.000(String), 20200319(String), 153511(String), 1(String), 181(String), M351846173301(String), 70(String)
2020-03-19 15:35:11 -<==    Updates: 1
2020-03-19 15:35:11 -==>  Preparing: UPDATE t_user_mpos_info SET card_settle_price = ?, cloud_settle_price = ?, single_profit_rate = ?, cash_back_rate = ?, state_status = '1', del = '0', up_date = ?, up_time = ? WHERE del = '1' AND user_id = ? AND FIND_IN_SET(sn, ?) 
2020-03-19 15:35:11 -==> Parameters: 0.485(String), 0.28(String), 0.00(String), 0.000(String), 20200319(String), 153511(String), 70(String), M351846173301(String)
2020-03-19 15:35:11 -<==    Updates: 0
2020-03-19 15:35:11 -==>  Preparing: UPDATE t_user_mpos_info SET state_status = '0', up_date = ?, up_time = ? WHERE user_id = ? AND activity_status = '0' AND state_status = '1' AND FIND_IN_SET(sn, ?) 
2020-03-19 15:35:11 -==> Parameters: 20200319(String), 153511(String), 181(String), M351846173301(String)
2020-03-19 15:35:12 -<==    Updates: 1
2020-03-19 15:35:12 -==>  Preparing: insert into t_user_pos_batch_allocate(batch_no,sn,user_id,pos_type,allocate_date,allocate_by) values (?,?,?,?,?,?) 
2020-03-19 15:35:12 -==> Parameters: 181_20200319153512(String), M351846173301(String), 70(String), MPOS(String), 2020-03-19 15:35:12(String), 181(String)
2020-03-19 15:35:12 -<==    Updates: 1
2020-03-19 15:35:12 -耗时 : 348
2020-03-19 15:35:12 -此处进行解密+验签+身份验证
2020-03-19 15:35:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:12 -此处进行解密+验签+身份验证
2020-03-19 15:35:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:35:12 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:35:12 -==> Parameters: 181(String)
2020-03-19 15:35:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 15:35:12 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 15:35:12 -==> Parameters: 181(String), 181(String)
2020-03-19 15:35:12 -<==      Total: 1170
2020-03-19 15:35:12 -耗时 : 76
2020-03-19 15:35:12 -<==      Total: 1596
2020-03-19 15:35:12 -耗时 : 250
2020-03-19 15:35:14 -此处进行解密+验签+身份验证
2020-03-19 15:35:14 -此处进行解密+验签+身份验证
2020-03-19 15:35:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:14 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:35:14 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:35:14 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:35:14 -==> Parameters: 181(String), TraditionalPOS(String)
2020-03-19 15:35:14 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:35:14 -==> Parameters: 181(String), MPOS(String)
2020-03-19 15:35:14 -<==      Total: 10
2020-03-19 15:35:14 -耗时 : 31
2020-03-19 15:35:14 -<==      Total: 10
2020-03-19 15:35:14 -耗时 : 49
2020-03-19 15:35:16 -此处进行解密+验签+身份验证
2020-03-19 15:35:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:16 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:35:16 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:16 -==> Parameters: 70(String), M351846173301(String)
2020-03-19 15:35:16 -<==      Total: 1
2020-03-19 15:35:16 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:35:16 -==> Parameters: 181_20200319153512(String)
2020-03-19 15:35:16 -<==      Total: 1
2020-03-19 15:35:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_70
2020-03-19 15:35:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_70 , return
2020-03-19 15:35:16 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:35:16 -==> Parameters: 181_20200319153512(String)
2020-03-19 15:35:16 -<==      Total: 1
2020-03-19 15:35:16 -耗时 : 118
2020-03-19 15:35:16 -此处进行解密+验签+身份验证
2020-03-19 15:35:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:16 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:35:16 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:16 -==> Parameters: 181(String), M351846173301(String)
2020-03-19 15:35:16 -<==      Total: 1
2020-03-19 15:35:16 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:35:16 -==> Parameters: 
2020-03-19 15:35:16 -<==      Total: 101
2020-03-19 15:35:16 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:35:16 -==> Parameters: M351846173301(String)
2020-03-19 15:35:16 -<==      Total: 1
2020-03-19 15:35:16 -耗时 : 91
2020-03-19 15:35:29 -此处进行解密+验签+身份验证
2020-03-19 15:35:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:29 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:35:29 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:35:29 -==> Parameters: 181(String)
2020-03-19 15:35:29 -<==      Total: 1170
2020-03-19 15:35:29 -耗时 : 57
2020-03-19 15:35:31 -此处进行解密+验签+身份验证
2020-03-19 15:35:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:31 -此处进行解密+验签+身份验证
2020-03-19 15:35:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:31 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:35:31 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:35:31 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:35:31 -==> Parameters: 181(String)
2020-03-19 15:35:31 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:31 -==> Parameters: 181(String), M351846173304(String)
2020-03-19 15:35:31 -<==      Total: 143
2020-03-19 15:35:31 -耗时 : 13
2020-03-19 15:35:31 -<==      Total: 1
2020-03-19 15:35:31 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:35:31 -==> Parameters: 
2020-03-19 15:35:31 -<==      Total: 101
2020-03-19 15:35:31 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:35:31 -==> Parameters: M351846173304(String)
2020-03-19 15:35:31 -<==      Total: 0
2020-03-19 15:35:31 -耗时 : 99
2020-03-19 15:35:40 -此处进行解密+验签+身份验证
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/allocationMpos
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_70
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_70 , return
2020-03-19 15:35:40 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND find_in_set(sn, ?) AND cast(card_settle_price as decimal) <= cast(? as decimal) AND cast(cloud_settle_price as decimal) <= cast(? as decimal) AND cast(single_profit_rate as decimal) >= cast(? as decimal) AND cast(cash_back_rate as decimal) >= cast(? as decimal) 
2020-03-19 15:35:40 -==> Parameters: 181(String), M351846173304(String), 0.485(String), 0.28(String), 0.00(String), 0.000(String)
2020-03-19 15:35:40 -<==      Total: 1
2020-03-19 15:35:40 -==>  Preparing: select count(distinct is_reward) as cnt from t_user_mpos_info where user_id=? and sn in ( ? ) 
2020-03-19 15:35:40 -==> Parameters: 181(String), M351846173304(String)
2020-03-19 15:35:40 -<==      Total: 1
2020-03-19 15:35:40 -==>  Preparing: select count(*) as cnt from t_user_mpos_info where user_id=? and is_reward='0' and sn in ( ? ) 
2020-03-19 15:35:40 -==> Parameters: 181(String), M351846173304(String)
2020-03-19 15:35:40 -<==      Total: 1
2020-03-19 15:35:40 -==>  Preparing: INSERT INTO t_user_mpos_info ( user_id, sn, card_settle_price, cloud_settle_price, single_profit_rate, cash_back_rate, cre_date, cre_time, is_reward ) SELECT ?, t.sn, ?, ?, ?, ?, ?, ?, ? FROM t_user_mpos_info t WHERE t.user_id = ? AND t.activity_status = '0' AND t.state_status = '1' AND FIND_IN_SET(t.sn, ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_info t1 WHERE t1.user_id = ? AND t1.sn = t.sn ) 
2020-03-19 15:35:40 -==> Parameters: 70(String), 0.485(String), 0.28(String), 0.00(String), 0.000(String), 20200319(String), 153540(String), 1(String), 181(String), M351846173304(String), 70(String)
2020-03-19 15:35:40 -<==    Updates: 1
2020-03-19 15:35:40 -==>  Preparing: UPDATE t_user_mpos_info SET card_settle_price = ?, cloud_settle_price = ?, single_profit_rate = ?, cash_back_rate = ?, state_status = '1', del = '0', up_date = ?, up_time = ? WHERE del = '1' AND user_id = ? AND FIND_IN_SET(sn, ?) 
2020-03-19 15:35:40 -==> Parameters: 0.485(String), 0.28(String), 0.00(String), 0.000(String), 20200319(String), 153540(String), 70(String), M351846173304(String)
2020-03-19 15:35:40 -<==    Updates: 0
2020-03-19 15:35:40 -==>  Preparing: UPDATE t_user_mpos_info SET state_status = '0', up_date = ?, up_time = ? WHERE user_id = ? AND activity_status = '0' AND state_status = '1' AND FIND_IN_SET(sn, ?) 
2020-03-19 15:35:40 -==> Parameters: 20200319(String), 153540(String), 181(String), M351846173304(String)
2020-03-19 15:35:40 -<==    Updates: 1
2020-03-19 15:35:40 -==>  Preparing: insert into t_user_pos_batch_allocate(batch_no,sn,user_id,pos_type,allocate_date,allocate_by) values (?,?,?,?,?,?) 
2020-03-19 15:35:40 -==> Parameters: 181_20200319153540(String), M351846173304(String), 70(String), MPOS(String), 2020-03-19 15:35:40(String), 181(String)
2020-03-19 15:35:40 -<==    Updates: 1
2020-03-19 15:35:40 -耗时 : 322
2020-03-19 15:35:40 -此处进行解密+验签+身份验证
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:40 -此处进行解密+验签+身份验证
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:35:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:40 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:35:40 -==> Parameters: 181(String)
2020-03-19 15:35:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 15:35:40 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 15:35:40 -==> Parameters: 181(String), 181(String)
2020-03-19 15:35:40 -<==      Total: 1169
2020-03-19 15:35:40 -耗时 : 109
2020-03-19 15:35:41 -<==      Total: 1597
2020-03-19 15:35:41 -耗时 : 278
2020-03-19 15:35:43 -此处进行解密+验签+身份验证
2020-03-19 15:35:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:43 -此处进行解密+验签+身份验证
2020-03-19 15:35:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:43 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:35:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:43 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:35:43 -==> Parameters: 181(String), MPOS(String)
2020-03-19 15:35:43 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:35:43 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:35:43 -==> Parameters: 181(String), TraditionalPOS(String)
2020-03-19 15:35:43 -<==      Total: 10
2020-03-19 15:35:43 -耗时 : 44
2020-03-19 15:35:43 -<==      Total: 10
2020-03-19 15:35:43 -耗时 : 63
2020-03-19 15:35:45 -此处进行解密+验签+身份验证
2020-03-19 15:35:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:45 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:35:45 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:45 -==> Parameters: 70(String), M351846173304(String)
2020-03-19 15:35:45 -<==      Total: 1
2020-03-19 15:35:45 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:35:45 -==> Parameters: 181_20200319153540(String)
2020-03-19 15:35:45 -<==      Total: 1
2020-03-19 15:35:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_70
2020-03-19 15:35:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_70 , return
2020-03-19 15:35:45 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:35:45 -==> Parameters: 181_20200319153540(String)
2020-03-19 15:35:45 -<==      Total: 1
2020-03-19 15:35:45 -耗时 : 98
2020-03-19 15:35:45 -此处进行解密+验签+身份验证
2020-03-19 15:35:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:45 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:35:45 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:45 -==> Parameters: 181(String), M351846173304(String)
2020-03-19 15:35:45 -<==      Total: 1
2020-03-19 15:35:45 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:35:45 -==> Parameters: 
2020-03-19 15:35:45 -<==      Total: 101
2020-03-19 15:35:45 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:35:45 -==> Parameters: M351846173304(String)
2020-03-19 15:35:45 -<==      Total: 0
2020-03-19 15:35:45 -耗时 : 79
2020-03-19 15:35:56 -此处进行解密+验签+身份验证
2020-03-19 15:35:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:35:56 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:56 -==> Parameters: 70(String), M351846173301(String)
2020-03-19 15:35:56 -<==      Total: 1
2020-03-19 15:35:56 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:35:56 -==> Parameters: 181_20200319153512(String)
2020-03-19 15:35:56 -<==      Total: 1
2020-03-19 15:35:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_70
2020-03-19 15:35:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_70 , return
2020-03-19 15:35:56 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:35:56 -==> Parameters: 181_20200319153512(String)
2020-03-19 15:35:56 -<==      Total: 1
2020-03-19 15:35:56 -耗时 : 122
2020-03-19 15:35:56 -此处进行解密+验签+身份验证
2020-03-19 15:35:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:56 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:35:56 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:56 -==> Parameters: 181(String), M351846173301(String)
2020-03-19 15:35:56 -<==      Total: 1
2020-03-19 15:35:56 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:35:56 -==> Parameters: 
2020-03-19 15:35:56 -<==      Total: 101
2020-03-19 15:35:56 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:35:56 -==> Parameters: M351846173301(String)
2020-03-19 15:35:56 -<==      Total: 1
2020-03-19 15:35:56 -耗时 : 89
2020-03-19 15:35:59 -此处进行解密+验签+身份验证
2020-03-19 15:35:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:59 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:35:59 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:59 -==> Parameters: 70(String), M351846173304(String)
2020-03-19 15:35:59 -<==      Total: 1
2020-03-19 15:35:59 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:35:59 -==> Parameters: 181_20200319153540(String)
2020-03-19 15:35:59 -<==      Total: 1
2020-03-19 15:35:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_70
2020-03-19 15:35:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_70 , return
2020-03-19 15:35:59 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:35:59 -==> Parameters: 181_20200319153540(String)
2020-03-19 15:35:59 -<==      Total: 1
2020-03-19 15:35:59 -耗时 : 35
2020-03-19 15:35:59 -此处进行解密+验签+身份验证
2020-03-19 15:35:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:35:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:35:59 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:35:59 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:35:59 -==> Parameters: 181(String), M351846173304(String)
2020-03-19 15:35:59 -<==      Total: 1
2020-03-19 15:35:59 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:35:59 -==> Parameters: 
2020-03-19 15:35:59 -<==      Total: 101
2020-03-19 15:35:59 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:35:59 -==> Parameters: M351846173304(String)
2020-03-19 15:35:59 -<==      Total: 0
2020-03-19 15:35:59 -耗时 : 24
2020-03-19 15:38:54 -此处进行解密+验签+身份验证
2020-03-19 15:38:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:38:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:38:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:38:54 -耗时 : 0
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -解密：{"sys_user_account":"13322990711","login_password":"F5B4166AFD7EA843A09FEE4AFD9979F4","device_type":"android","device_no":"1.0.9","sign":"EFF4553AA97C43A56716153EB440498E","version_no":"450000000145206","login_type":"account"}
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@639a20c1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@63e362ac (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@6b1541ee (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@593bf865 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@14b1b4e4 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@6cbf52dc (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2d647494 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2b9a498d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3295de8e (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@242a53b2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-19 15:39:07 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 15:39:07 -==> Parameters: 13322990711(String)
2020-03-19 15:39:07 -<==      Total: 1
2020-03-19 15:39:07 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-19 15:39:07 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), null, 192.168.191.1(String), 20200319(String), 153907(String), 181(Integer)
2020-03-19 15:39:07 -<==    Updates: 1
2020-03-19 15:39:07 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 15:39:07 -==> Parameters: 26(String)
2020-03-19 15:39:07 -<==      Total: 1
2020-03-19 15:39:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:39:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:39:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:39:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:39:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:39:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:39:07 -耗时 : 185
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:39:07 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:39:07 -==> Parameters: 181(String)
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -解密：
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 15:39:07 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 15:39:07 -==> Parameters: 01(String), 01(String)
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:07 -<==      Total: 1
2020-03-19 15:39:07 -耗时 : 16
2020-03-19 15:39:07 -<==      Total: 4
2020-03-19 15:39:07 -耗时 : 12
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -此处进行解密+验签+身份验证
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 15:39:07 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 15:39:07 -==> Parameters: 181(String)
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 15:39:07 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 15:39:07 -==> Parameters: 
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 15:39:07 -<==      Total: 2
2020-03-19 15:39:07 -耗时 : 13
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:39:07 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:39:07 -<==      Total: 3
2020-03-19 15:39:07 -耗时 : 8
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-19 15:39:07 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:39:07 -==> Parameters: 181(String)
2020-03-19 15:39:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:39:07 -==> Parameters: 181(String), 181(String)
2020-03-19 15:39:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-19 15:39:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:39:07 -==> Parameters: 181(String), 181(String)
2020-03-19 15:39:07 -<==      Total: 1
2020-03-19 15:39:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:07 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 15:39:07 -<==      Total: 1
2020-03-19 15:39:07 -耗时 : 16
2020-03-19 15:39:07 -<==      Total: 2
2020-03-19 15:39:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:07 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 15:39:07 -<==      Total: 1
2020-03-19 15:39:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:07 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-19 15:39:08 -<==    Updates: 2
2020-03-19 15:39:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:39:08 -==> Parameters: 181(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 2
2020-03-19 15:39:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:08 -==> Parameters: 7(Integer), 7(Integer), 181(String), applyRateFlag(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:08 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 15:39:08 -<==    Updates: 2
2020-03-19 15:39:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:39:08 -==> Parameters: 181(String), 181(String)
2020-03-19 15:39:08 -<==    Updates: 1
2020-03-19 15:39:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:39:08 -==> Parameters: 
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: recallFlag(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:08 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-19 15:39:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:08 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 15:39:08 -<==    Updates: 1
2020-03-19 15:39:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:39:08 -==> Parameters: 181(String), 181(String)
2020-03-19 15:39:08 -<==    Updates: 1
2020-03-19 15:39:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:39:08 -==> Parameters: 
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:08 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: collegeFlag(String), 181(String)
2020-03-19 15:39:08 -<==    Updates: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:08 -==> Parameters: 25(Integer), 25(Integer), 181(String), collegeFlag(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -耗时 : 147
2020-03-19 15:39:08 -<==    Updates: 1
2020-03-19 15:39:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:39:08 -==> Parameters: 181(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: cardFlag(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:39:08 -==> Parameters: 7(Integer), 7(Integer), 181(String), cardFlag(String)
2020-03-19 15:39:08 -<==    Updates: 1
2020-03-19 15:39:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:39:08 -==> Parameters: appImgFlag(String), 181(String)
2020-03-19 15:39:08 -<==      Total: 1
2020-03-19 15:39:08 -耗时 : 205
2020-03-19 15:39:31 -此处进行解密+验签+身份验证
2020-03-19 15:39:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:31 -此处进行解密+验签+身份验证
2020-03-19 15:39:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:31 -Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:51)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:405)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1152)
	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1075)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-03-19 15:39:31 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-19 15:39:31 -Reconnected to 120.25.164.176:10379
2020-03-19 15:39:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:31 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:39:31 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 15:39:31 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:39:31 -==> Parameters: 181(String)
2020-03-19 15:39:31 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 15:39:31 -==> Parameters: 181(String), 181(String)
2020-03-19 15:39:31 -<==      Total: 1169
2020-03-19 15:39:31 -耗时 : 72
2020-03-19 15:39:31 -<==      Total: 1597
2020-03-19 15:39:31 -耗时 : 249
2020-03-19 15:39:33 -此处进行解密+验签+身份验证
2020-03-19 15:39:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:33 -此处进行解密+验签+身份验证
2020-03-19 15:39:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:33 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:39:33 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:39:33 -==> Parameters: 181(String), TraditionalPOS(String)
2020-03-19 15:39:33 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:39:33 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:39:33 -==> Parameters: 181(String), MPOS(String)
2020-03-19 15:39:33 -<==      Total: 10
2020-03-19 15:39:33 -耗时 : 30
2020-03-19 15:39:33 -<==      Total: 10
2020-03-19 15:39:33 -耗时 : 51
2020-03-19 15:39:47 -此处进行解密+验签+身份验证
2020-03-19 15:39:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:47 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:39:47 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:39:47 -==> Parameters: 70(String), M351846173304(String)
2020-03-19 15:39:47 -<==      Total: 1
2020-03-19 15:39:47 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:39:47 -==> Parameters: 181_20200319153540(String)
2020-03-19 15:39:47 -<==      Total: 1
2020-03-19 15:39:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_70
2020-03-19 15:39:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_70 , return
2020-03-19 15:39:47 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:39:47 -==> Parameters: 181_20200319153540(String)
2020-03-19 15:39:47 -<==      Total: 1
2020-03-19 15:39:47 -耗时 : 91
2020-03-19 15:39:47 -此处进行解密+验签+身份验证
2020-03-19 15:39:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:39:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:39:47 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:39:47 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:39:47 -==> Parameters: 181(String), M351846173304(String)
2020-03-19 15:39:47 -<==      Total: 1
2020-03-19 15:39:47 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:39:47 -==> Parameters: 
2020-03-19 15:39:47 -<==      Total: 101
2020-03-19 15:39:47 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:39:47 -==> Parameters: M351846173304(String)
2020-03-19 15:39:47 -<==      Total: 0
2020-03-19 15:39:47 -耗时 : 97
2020-03-19 15:45:32 -此处进行解密+验签+身份验证
2020-03-19 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:45:32 -此处进行解密+验签+身份验证
2020-03-19 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-19 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:45:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-19 15:45:32 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:45:32 -耗时 : 0
2020-03-19 15:45:32 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:45:32 -耗时 : 1
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -解密：{"sys_user_account":"15019499979","login_password":"8A6F2805B4515AC12058E79E66539BE9","device_type":"android","device_no":"1.0.9","sign":"F1380DC96310DB3B2158845351AD5A96","version_no":"450000000145206","login_type":"account"}
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-19 15:45:46 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-19 15:45:46 -==> Parameters: 15019499979(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-19 15:45:46 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), null, 192.168.191.1(String), 20200319(String), 154546(String), 469(Integer)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-19 15:45:46 -==> Parameters: 25(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-19 15:45:46 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-19 15:45:46 -耗时 : 123
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -解密：
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-19 15:45:46 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-19 15:45:46 -==> Parameters: 01(String), 01(String)
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:45:46 -<==      Total: 4
2020-03-19 15:45:46 -耗时 : 14
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:45:46 -==> Parameters: 469(String)
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -耗时 : 12
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:45:46 -此处进行解密+验签+身份验证
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-19 15:45:46 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-19 15:45:46 -==> Parameters: 469(String)
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 15:45:46 -<==      Total: 2
2020-03-19 15:45:46 -耗时 : 8
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-19 15:45:46 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-19 15:45:46 -==> Parameters: 
2020-03-19 15:45:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-19 15:45:46 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 15:45:46 -==> Parameters: 469(String)
2020-03-19 15:45:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -耗时 : 10
2020-03-19 15:45:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:45:46 -==> Parameters: 469(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 3
2020-03-19 15:45:46 -耗时 : 14
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 15:45:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:45:46 -==> Parameters: 469(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:45:46 -==> Parameters: 469(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-19 15:45:46 -==> Parameters: 469(String), 469(String)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:45:46 -==> Parameters: 
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: recallFlag(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:45:46 -==> Parameters: 469(String), 469(String)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-19 15:45:46 -==> Parameters: 
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: collegeFlag(String), 469(String)
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -耗时 : 173
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-19 15:45:46 -==> Parameters: 469(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: cardFlag(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-19 15:45:46 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-19 15:45:46 -<==    Updates: 1
2020-03-19 15:45:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-19 15:45:46 -==> Parameters: appImgFlag(String), 469(String)
2020-03-19 15:45:46 -<==      Total: 1
2020-03-19 15:45:46 -耗时 : 238
2020-03-19 15:46:11 -此处进行解密+验签+身份验证
2020-03-19 15:46:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:46:11 -此处进行解密+验签+身份验证
2020-03-19 15:46:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:46:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:46:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:46:11 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-19 15:46:12 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-19 15:46:12 -==> Parameters: 469(String)
2020-03-19 15:46:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-19 15:46:12 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-19 15:46:12 -==> Parameters: 469(String), 469(String)
2020-03-19 15:46:12 -<==      Total: 82
2020-03-19 15:46:12 -耗时 : 39
2020-03-19 15:46:12 -<==      Total: 7
2020-03-19 15:46:12 -耗时 : 267
2020-03-19 15:46:17 -此处进行解密+验签+身份验证
2020-03-19 15:46:17 -此处进行解密+验签+身份验证
2020-03-19 15:46:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:46:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:46:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:46:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:46:17 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:46:17 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-19 15:46:17 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:46:17 -==> Parameters: 469(String), M351846116651(String)
2020-03-19 15:46:17 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-19 15:46:17 -==> Parameters: 469(String)
2020-03-19 15:46:17 -<==      Total: 3
2020-03-19 15:46:17 -耗时 : 15
2020-03-19 15:46:17 -<==      Total: 1
2020-03-19 15:46:17 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:46:17 -==> Parameters: 
2020-03-19 15:46:17 -<==      Total: 101
2020-03-19 15:46:17 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:46:17 -==> Parameters: M351846116651(String)
2020-03-19 15:46:17 -<==      Total: 0
2020-03-19 15:46:17 -耗时 : 98
2020-03-19 15:48:10 -此处进行解密+验签+身份验证
2020-03-19 15:48:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:48:10 -此处进行解密+验签+身份验证
2020-03-19 15:48:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:48:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:48:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:48:10 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:48:10 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:48:10 -==> Parameters: 469(String), MPOS(String)
2020-03-19 15:48:10 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-19 15:48:10 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-19 15:48:10 -==> Parameters: 469(String), TraditionalPOS(String)
2020-03-19 15:48:10 -<==      Total: 1
2020-03-19 15:48:10 -耗时 : 21
2020-03-19 15:48:10 -<==      Total: 0
2020-03-19 15:48:10 -耗时 : 31
2020-03-19 15:48:17 -此处进行解密+验签+身份验证
2020-03-19 15:48:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:48:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:48:17 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:48:17 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:48:17 -==> Parameters: 2392(String), M351846116674(String)
2020-03-19 15:48:18 -<==      Total: 1
2020-03-19 15:48:18 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:48:18 -==> Parameters: 469_20200107111001(String)
2020-03-19 15:48:18 -<==      Total: 1
2020-03-19 15:48:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2392
2020-03-19 15:48:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2392 , return
2020-03-19 15:48:18 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:48:18 -==> Parameters: 469_20200107111001(String)
2020-03-19 15:48:18 -<==      Total: 1
2020-03-19 15:48:18 -耗时 : 120
2020-03-19 15:48:18 -此处进行解密+验签+身份验证
2020-03-19 15:48:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:48:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:48:18 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:48:18 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:48:18 -==> Parameters: 469(String), M351846116674(String)
2020-03-19 15:48:18 -<==      Total: 1
2020-03-19 15:48:18 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:48:18 -==> Parameters: 
2020-03-19 15:48:18 -<==      Total: 101
2020-03-19 15:48:18 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:48:18 -==> Parameters: M351846116674(String)
2020-03-19 15:48:18 -<==      Total: 0
2020-03-19 15:48:18 -耗时 : 81
2020-03-19 15:52:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-19 15:52:02 -Shutting down ExecutorService 'taskScheduler'
2020-03-19 15:52:02 -Shutting down ExecutorService 'getAsyncExecutor'
2020-03-19 15:52:02 -Shutting down Quartz Scheduler
2020-03-19 15:52:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-03-19 15:52:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-19 15:52:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-03-19 15:52:02 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-03-19 15:52:02 -HikariPool-1 - Shutdown initiated...
2020-03-19 15:52:02 -HikariPool-1 - Shutdown completed.
2020-03-19 15:52:48 -Starting LongEcologicalApplication on PC-201905161910 with PID 14668 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-19 15:52:48 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-19 15:52:48 -No active profile set, falling back to default profiles: default
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-19 15:52:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-19 15:52:50 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-19 15:52:51 -Finished Spring Data repository scanning in 85ms. Found 0 repository interfaces.
2020-03-19 15:52:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-19 15:52:51 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-19 15:52:51 -Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2020-03-19 15:52:52 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$8a225214] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-19 15:52:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84a636b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-19 15:52:53 -Tomcat initialized with port(s): 8080 (http)
2020-03-19 15:52:53 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-19 15:52:53 -Starting service [Tomcat]
2020-03-19 15:52:53 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-19 15:52:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-19 15:52:53 -Initializing Spring embedded WebApplicationContext
2020-03-19 15:52:53 -Root WebApplicationContext: initialization completed in 4399 ms
2020-03-19 15:52:53 -Filter xssFilter was not registered (disabled)
2020-03-19 15:52:54 -HikariPool-1 - Starting...
2020-03-19 15:52:54 -HikariPool-1 - Start completed.
2020-03-19 15:52:54 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-19 15:52:54 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-19 15:52:54 -HHH000206: hibernate.properties not found
2020-03-19 15:52:54 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-19 15:52:55 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-19 15:52:55 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-19 15:52:56 -Using default implementation for ThreadExecutor
2020-03-19 15:52:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-19 15:52:56 -Quartz Scheduler v.2.3.0 created.
2020-03-19 15:52:56 -RAMJobStore initialized.
2020-03-19 15:52:56 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-19 15:52:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-19 15:52:56 -Quartz scheduler version: 2.3.0
2020-03-19 15:52:56 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7891cf3
2020-03-19 15:52:56 -STAET TaskExecutorConfig
2020-03-19 15:52:56 -Initializing ExecutorService
2020-03-19 15:52:56 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-19 15:52:57 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-19 15:52:57 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-19 15:52:57 -Initializing ExecutorService 'taskScheduler'
2020-03-19 15:52:57 -Starting Quartz Scheduler now
2020-03-19 15:52:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-19 15:52:57 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-19 15:52:58 -Using a shared selector for servlet write/read
2020-03-19 15:52:58 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-19 15:52:58 -Started LongEcologicalApplication in 10.382 seconds (JVM running for 12.238)
2020-03-19 15:53:23 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-19 15:53:23 -Initializing Servlet 'dispatcherServlet'
2020-03-19 15:53:23 -Completed initialization in 24 ms
2020-03-19 15:53:23 -此处进行解密+验签+身份验证
2020-03-19 15:53:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:53:23 -Starting without optional epoll library
2020-03-19 15:53:23 -Starting without optional kqueue library
2020-03-19 15:53:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:53:24 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosSettlePriceBySN
2020-03-19 15:53:24 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:53:24 -==> Parameters: 2392(String), M351846116674(String)
2020-03-19 15:53:24 -<==      Total: 1
2020-03-19 15:53:27 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:53:27 -==> Parameters: M351846116674(String)
2020-03-19 15:53:27 -<==      Total: 0
2020-03-19 15:53:39 -==>  Preparing: select GROUP_CONCAT(sn) as sns from t_user_pos_batch_allocate where batch_no=? 
2020-03-19 15:53:39 -==> Parameters: 469_20200107111001(String)
2020-03-19 15:53:39 -<==      Total: 1
2020-03-19 15:53:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2392
2020-03-19 15:53:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2392 , return
2020-03-19 15:53:39 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn in(select sn from t_user_pos_batch_allocate where batch_no=?) 
2020-03-19 15:53:39 -==> Parameters: 469_20200107111001(String)
2020-03-19 15:53:39 -<==      Total: 1
2020-03-19 15:53:39 -耗时 : 15676
2020-03-19 15:53:40 -此处进行解密+验签+身份验证
2020-03-19 15:53:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-19 15:53:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-19 15:53:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-19 15:53:40 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-19 15:53:40 -==> Parameters: 469(String), M351846116674(String)
2020-03-19 15:53:40 -<==      Total: 1
2020-03-19 15:53:40 -==>  Preparing: select rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-19 15:53:40 -==> Parameters: 
2020-03-19 15:53:40 -<==      Total: 101
2020-03-19 15:53:40 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-19 15:53:40 -==> Parameters: M351846116674(String)
2020-03-19 15:53:40 -<==      Total: 0
2020-03-19 15:53:40 -耗时 : 111
2020-03-19 16:00:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-19 16:00:40 -Shutting down ExecutorService 'taskScheduler'
2020-03-19 16:00:40 -Shutting down ExecutorService 'getAsyncExecutor'
2020-03-19 16:00:40 -Shutting down Quartz Scheduler
2020-03-19 16:00:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-03-19 16:00:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-19 16:00:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-03-19 16:00:40 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-03-19 16:00:40 -HikariPool-1 - Shutdown initiated...
2020-03-19 16:00:40 -HikariPool-1 - Shutdown completed.
