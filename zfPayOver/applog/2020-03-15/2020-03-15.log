2020-03-15 12:56:19 -Starting LongEcologicalApplication on PC-201905161910 with PID 14636 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-15 12:56:19 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-15 12:56:19 -No active profile set, falling back to default profiles: default
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-15 12:56:21 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-15 12:56:21 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-15 12:56:21 -Finished Spring Data repository scanning in 115ms. Found 0 repository interfaces.
2020-03-15 12:56:21 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-15 12:56:21 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-15 12:56:21 -Finished Spring Data repository scanning in 69ms. Found 0 repository interfaces.
2020-03-15 12:56:22 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$ac878629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-15 12:56:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a70b6ac9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-15 12:56:23 -Tomcat initialized with port(s): 8080 (http)
2020-03-15 12:56:23 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-15 12:56:23 -Starting service [Tomcat]
2020-03-15 12:56:23 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-15 12:56:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-15 12:56:23 -Initializing Spring embedded WebApplicationContext
2020-03-15 12:56:23 -Root WebApplicationContext: initialization completed in 3318 ms
2020-03-15 12:56:23 -Filter xssFilter was not registered (disabled)
2020-03-15 12:56:23 -HikariPool-1 - Starting...
2020-03-15 12:56:24 -HikariPool-1 - Start completed.
2020-03-15 12:56:24 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-15 12:56:24 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-15 12:56:24 -HHH000206: hibernate.properties not found
2020-03-15 12:56:24 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-15 12:56:25 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-15 12:56:25 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-15 12:56:25 -Using default implementation for ThreadExecutor
2020-03-15 12:56:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-15 12:56:25 -Quartz Scheduler v.2.3.0 created.
2020-03-15 12:56:25 -RAMJobStore initialized.
2020-03-15 12:56:25 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-15 12:56:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-15 12:56:25 -Quartz scheduler version: 2.3.0
2020-03-15 12:56:25 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3abadb65
2020-03-15 12:56:26 -STAET TaskExecutorConfig
2020-03-15 12:56:26 -Initializing ExecutorService
2020-03-15 12:56:26 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-15 12:56:26 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-15 12:56:27 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-15 12:56:27 -Initializing ExecutorService 'taskScheduler'
2020-03-15 12:56:27 -Starting Quartz Scheduler now
2020-03-15 12:56:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-15 12:56:27 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-15 12:56:27 -Using a shared selector for servlet write/read
2020-03-15 12:56:27 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-15 12:56:27 -Started LongEcologicalApplication in 8.876 seconds (JVM running for 11.689)
2020-03-15 12:58:30 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-15 12:58:30 -Initializing Servlet 'dispatcherServlet'
2020-03-15 12:58:30 -Completed initialization in 18 ms
2020-03-15 12:58:30 -此处进行解密+验签+身份验证
2020-03-15 12:58:30 -此处进行解密+验签+身份验证
2020-03-15 12:58:30 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-15 12:58:30 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-15 12:58:30 -Starting without optional epoll library
2020-03-15 12:58:30 -Starting without optional kqueue library
2020-03-15 12:58:30 -解密：
2020-03-15 12:58:31 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-15 12:58:31 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-15 12:58:31 -==> Parameters: 04(String), 04(String)
2020-03-15 12:58:31 -<==      Total: 0
2020-03-15 12:58:31 -耗时 : 61
2020-03-15 12:58:31 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-15 12:58:31 -耗时 : 848
2020-03-15 12:58:31 -此处进行解密+验签+身份验证
2020-03-15 12:58:31 -解密：{"login_password":"","device_type":"android","device_no":"1.0.9","sign":"E1ADF59E2F7EBB244336AF6F5C690923","version_no":"450000000145206","login_type":"token","token":"469|7F8VM7UURKH4OH6WHY8R77CKKFJEAGLD","sys_user_account":""}
2020-03-15 12:58:31 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-15 12:58:31 -token值=======469|7F8VM7UURKH4OH6WHY8R77CKKFJEAGLD
2020-03-15 12:58:31 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-15 12:58:31 -==> Parameters: 469(String)
2020-03-15 12:58:31 -<==      Total: 1
2020-03-15 12:58:31 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-15 12:58:31 -==> Parameters: 25(String)
2020-03-15 12:58:31 -<==      Total: 1
2020-03-15 12:58:31 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 12:58:31 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 12:58:31 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 12:58:31 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 12:58:31 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 12:58:31 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 12:58:31 -耗时 : 116
2020-03-15 12:58:35 -此处进行解密+验签+身份验证
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:58:35 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 12:58:35 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 12:58:35 -==> Parameters: 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -耗时 : 19
2020-03-15 12:58:35 -此处进行解密+验签+身份验证
2020-03-15 12:58:35 -此处进行解密+验签+身份验证
2020-03-15 12:58:35 -解密：
2020-03-15 12:58:35 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:58:35 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-15 12:58:35 -==> Parameters: 01(String), 01(String)
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:58:35 -<==      Total: 7
2020-03-15 12:58:35 -耗时 : 9
2020-03-15 12:58:35 -此处进行解密+验签+身份验证
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:58:35 -此处进行解密+验签+身份验证
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:58:35 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-15 12:58:35 -此处进行解密+验签+身份验证
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:58:35 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-15 12:58:35 -==> Parameters: 469(String)
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:58:35 -此处进行解密+验签+身份验证
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -耗时 : 14
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:58:35 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 12:58:35 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 12:58:35 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 12:58:35 -==> Parameters: 469(String)
2020-03-15 12:58:35 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -耗时 : 11
2020-03-15 12:58:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 12:58:35 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-15 12:58:35 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-15 12:58:35 -==> Parameters: 
2020-03-15 12:58:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 12:58:35 -==> Parameters: 469(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 3
2020-03-15 12:58:35 -耗时 : 14
2020-03-15 12:58:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 12:58:35 -==> Parameters: 469(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 12:58:35 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 12:58:35 -==> Parameters: 469(String), 469(String)
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 12:58:35 -==> Parameters: 469(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 12:58:35 -==> Parameters: 
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 12:58:35 -==> Parameters: 
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 12:58:35 -==> Parameters: 469(String), 469(String)
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 12:58:35 -==> Parameters: 469(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 1
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:58:35 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 12:58:35 -<==    Updates: 2
2020-03-15 12:58:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:58:35 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -耗时 : 170
2020-03-15 12:58:35 -<==      Total: 2
2020-03-15 12:58:35 -耗时 : 167
2020-03-15 12:59:28 -此处进行解密+验签+身份验证
2020-03-15 12:59:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:59:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:59:28 -此处进行解密+验签+身份验证
2020-03-15 12:59:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:59:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:59:28 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-15 12:59:28 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-15 12:59:28 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-15 12:59:28 -==> Parameters: 469(String), 469(String)
2020-03-15 12:59:28 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-15 12:59:28 -==> Parameters: 469(String)
2020-03-15 12:59:28 -<==      Total: 88
2020-03-15 12:59:28 -耗时 : 77
2020-03-15 12:59:33 -此处进行解密+验签+身份验证
2020-03-15 12:59:33 -此处进行解密+验签+身份验证
2020-03-15 12:59:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:59:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 12:59:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:59:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 12:59:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 12:59:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 12:59:33 -==> Parameters: 469(String)
2020-03-15 12:59:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 12:59:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 12:59:33 -<==      Total: 1
2020-03-15 12:59:33 -耗时 : 14
2020-03-15 12:59:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 12:59:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 12:59:33 -==> Parameters: 469(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 1
2020-03-15 12:59:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:59:33 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 2
2020-03-15 12:59:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:59:33 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 12:59:33 -<==    Updates: 2
2020-03-15 12:59:33 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 12:59:33 -==> Parameters: 469(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 1
2020-03-15 12:59:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:59:33 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 2
2020-03-15 12:59:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:59:33 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 12:59:33 -<==    Updates: 2
2020-03-15 12:59:33 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 12:59:33 -==> Parameters: 
2020-03-15 12:59:33 -<==      Total: 1
2020-03-15 12:59:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:59:33 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 2
2020-03-15 12:59:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:59:33 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 12:59:33 -<==    Updates: 2
2020-03-15 12:59:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 12:59:33 -==> Parameters: 469(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 1
2020-03-15 12:59:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:59:33 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 2
2020-03-15 12:59:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 12:59:33 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 12:59:33 -<==    Updates: 2
2020-03-15 12:59:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 12:59:33 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 12:59:33 -<==      Total: 2
2020-03-15 12:59:33 -耗时 : 136
2020-03-15 12:59:42 -<==      Total: 4
2020-03-15 12:59:42 -耗时 : 13945
2020-03-15 13:02:01 -此处进行解密+验签+身份验证
2020-03-15 13:02:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:02:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:02:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:02:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 13:02:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 13:02:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:02:01 -==> Parameters: 469(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 1
2020-03-15 13:02:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:02:01 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 2
2020-03-15 13:02:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:02:01 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 13:02:01 -<==    Updates: 2
2020-03-15 13:02:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:02:01 -==> Parameters: 469(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 1
2020-03-15 13:02:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:02:01 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 2
2020-03-15 13:02:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:02:01 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 13:02:01 -<==    Updates: 2
2020-03-15 13:02:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:02:01 -==> Parameters: 
2020-03-15 13:02:01 -<==      Total: 1
2020-03-15 13:02:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:02:01 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 2
2020-03-15 13:02:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:02:01 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 13:02:01 -<==    Updates: 2
2020-03-15 13:02:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:02:01 -==> Parameters: 469(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 1
2020-03-15 13:02:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:02:01 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 2
2020-03-15 13:02:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:02:01 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 13:02:01 -<==    Updates: 2
2020-03-15 13:02:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:02:01 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 13:02:01 -<==      Total: 2
2020-03-15 13:02:01 -耗时 : 143
2020-03-15 13:22:22 -此处进行解密+验签+身份验证
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:22:22 -此处进行解密+验签+身份验证
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:22:22 -此处进行解密+验签+身份验证
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:22:22 -此处进行解密+验签+身份验证
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:22:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:22:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-15 13:22:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-15 13:22:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1cca433c (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3de35a41 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5a2760a6 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@4945608b (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1bbe6a8a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@19f73c72 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-15 13:22:22 -==> Parameters: 469(String), 202003(String)
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@45e94afa (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@55231962 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@75ac373d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:22:22 -<==      Total: 1
2020-03-15 13:22:22 -耗时 : 28
2020-03-15 13:22:22 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-15 13:22:22 -==> Parameters: 469(String)
2020-03-15 13:22:22 -<==      Total: 1
2020-03-15 13:22:22 -耗时 : 52
2020-03-15 13:22:22 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-15 13:22:22 -==> Parameters: 469(String), 202003(String)
2020-03-15 13:22:22 -<==      Total: 1
2020-03-15 13:22:22 -耗时 : 59
2020-03-15 13:22:22 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-15 13:22:22 -==> Parameters: 469(String), 202003(String)
2020-03-15 13:22:22 -<==      Total: 1
2020-03-15 13:22:22 -耗时 : 58
2020-03-15 13:22:43 -此处进行解密+验签+身份验证
2020-03-15 13:22:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:22:43 -此处进行解密+验签+身份验证
2020-03-15 13:22:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:22:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:22:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:22:43 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-15 13:22:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-15 13:22:43 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? and t1.pos_type is null and t.pos_type is null 
2020-03-15 13:22:43 -==> Parameters: 202003(String), 469(String)
2020-03-15 13:22:43 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-15 13:22:43 -==> Parameters: 469(String)
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-15 13:22:43 -==> Parameters: 469(String)
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-15 13:22:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-15 13:22:43 -==> Parameters: 202003(String), 469(String)
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-15 13:22:43 -==> Parameters: 469(String)
2020-03-15 13:22:43 -<==      Total: 0
2020-03-15 13:22:43 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? and t1.pos_type='epos' and t.pos_type='epos' 
2020-03-15 13:22:43 -==> Parameters: 202003(String), 469(String)
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-15 13:22:43 -==> Parameters: 469(String)
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -耗时 : 55
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-15 13:22:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:22:43 -<==      Total: 1
2020-03-15 13:22:43 -耗时 : 102
2020-03-15 13:22:56 -此处进行解密+验签+身份验证
2020-03-15 13:22:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:22:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:22:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:22:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 13:22:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 13:22:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:22:56 -==> Parameters: 469(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 1
2020-03-15 13:22:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:22:56 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 2
2020-03-15 13:22:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:22:56 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 13:22:56 -<==    Updates: 2
2020-03-15 13:22:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:22:56 -==> Parameters: 469(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 1
2020-03-15 13:22:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:22:56 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 2
2020-03-15 13:22:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:22:56 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 13:22:56 -<==    Updates: 2
2020-03-15 13:22:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:22:56 -==> Parameters: 
2020-03-15 13:22:56 -<==      Total: 1
2020-03-15 13:22:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:22:56 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 2
2020-03-15 13:22:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:22:56 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 13:22:56 -<==    Updates: 2
2020-03-15 13:22:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:22:56 -==> Parameters: 469(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 1
2020-03-15 13:22:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:22:56 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 2
2020-03-15 13:22:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:22:56 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 13:22:56 -<==    Updates: 2
2020-03-15 13:22:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:22:56 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 13:22:56 -<==      Total: 2
2020-03-15 13:22:56 -耗时 : 193
2020-03-15 13:23:03 -此处进行解密+验签+身份验证
2020-03-15 13:23:03 -此处进行解密+验签+身份验证
2020-03-15 13:23:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:23:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:23:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:23:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:23:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-15 13:23:03 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-15 13:23:03 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-15 13:23:03 -==> Parameters: 469(String)
2020-03-15 13:23:03 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-15 13:23:03 -==> Parameters: 469(String)
2020-03-15 13:23:03 -<==      Total: 3
2020-03-15 13:23:03 -耗时 : 15
2020-03-15 13:23:03 -<==      Total: 1
2020-03-15 13:23:03 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-15 13:23:03 -==> Parameters: 469(String)
2020-03-15 13:23:03 -<==      Total: 1
2020-03-15 13:23:03 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-15 13:23:03 -==> Parameters: 469(String)
2020-03-15 13:23:03 -<==      Total: 1
2020-03-15 13:23:03 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-15 13:23:03 -==> Parameters: 469(String)
2020-03-15 13:23:03 -<==      Total: 1
2020-03-15 13:23:03 -耗时 : 68
2020-03-15 13:24:43 -此处进行解密+验签+身份验证
2020-03-15 13:24:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:24:43 -此处进行解密+验签+身份验证
2020-03-15 13:24:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:24:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:24:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:24:43 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-15 13:24:43 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-15 13:24:43 -==> Parameters: 469(String)
2020-03-15 13:24:43 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-15 13:24:43 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-15 13:24:43 -==> Parameters: 469(String)
2020-03-15 13:24:43 -<==      Total: 3
2020-03-15 13:24:43 -耗时 : 19
2020-03-15 13:24:43 -<==      Total: 1
2020-03-15 13:24:43 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-15 13:24:43 -==> Parameters: 469(String)
2020-03-15 13:24:43 -<==      Total: 1
2020-03-15 13:24:43 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-15 13:24:43 -==> Parameters: 469(String)
2020-03-15 13:24:43 -<==      Total: 1
2020-03-15 13:24:43 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-15 13:24:43 -==> Parameters: 469(String)
2020-03-15 13:24:43 -<==      Total: 1
2020-03-15 13:24:43 -耗时 : 36
2020-03-15 13:30:10 -此处进行解密+验签+身份验证
2020-03-15 13:30:10 -此处进行解密+验签+身份验证
2020-03-15 13:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:30:10 -解密异常：{token=469|7F8VM7UURKH4OH6WHY8R77CKKFJEAGLD, sign=1935431AB3442284C1CF64216E35AFE8}
2020-03-15 13:30:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:30:10 -耗时 : 1
2020-03-15 13:30:10 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-15 13:30:10 -Reconnected to 120.25.164.176:10379
2020-03-15 13:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:30:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:30:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:30:10 -==> Parameters: 469(String)
2020-03-15 13:30:10 -<==      Total: 1
2020-03-15 13:30:10 -耗时 : 13
2020-03-15 13:30:12 -此处进行解密+验签+身份验证
2020-03-15 13:30:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:30:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:30:12 -此处进行解密+验签+身份验证
2020-03-15 13:30:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:30:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:30:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-15 13:30:12 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-15 13:30:12 -==> Parameters: 469(String)
2020-03-15 13:30:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-15 13:30:12 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-15 13:30:12 -==> Parameters: 469(String), 469(String)
2020-03-15 13:30:12 -<==      Total: 4
2020-03-15 13:30:12 -耗时 : 11
2020-03-15 13:30:12 -<==      Total: 88
2020-03-15 13:30:12 -耗时 : 33
2020-03-15 13:30:15 -此处进行解密+验签+身份验证
2020-03-15 13:30:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:30:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:30:15 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:30:15 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-15 13:30:15 -==> Parameters: 469(String)
2020-03-15 13:30:15 -<==      Total: 10
2020-03-15 13:30:15 -耗时 : 18
2020-03-15 13:30:37 -此处进行解密+验签+身份验证
2020-03-15 13:30:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:30:37 -此处进行解密+验签+身份验证
2020-03-15 13:30:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:30:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:30:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:30:37 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:30:37 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:30:37 -==> Parameters: 469(String)
2020-03-15 13:30:37 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:30:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 13:30:37 -<==      Total: 1
2020-03-15 13:30:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 13:30:37 -耗时 : 13
2020-03-15 13:30:37 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:30:37 -==> Parameters: 469(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 1
2020-03-15 13:30:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:37 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 2
2020-03-15 13:30:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:37 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 13:30:37 -<==    Updates: 2
2020-03-15 13:30:37 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:30:37 -==> Parameters: 469(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 1
2020-03-15 13:30:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:37 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 2
2020-03-15 13:30:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:37 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 13:30:37 -<==    Updates: 2
2020-03-15 13:30:37 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:30:37 -==> Parameters: 
2020-03-15 13:30:37 -<==      Total: 1
2020-03-15 13:30:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:37 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 2
2020-03-15 13:30:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:37 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 13:30:37 -<==    Updates: 2
2020-03-15 13:30:37 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:30:37 -==> Parameters: 469(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 1
2020-03-15 13:30:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:37 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 2
2020-03-15 13:30:37 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:37 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 13:30:37 -<==    Updates: 2
2020-03-15 13:30:37 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:37 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 13:30:37 -<==      Total: 2
2020-03-15 13:30:37 -耗时 : 116
2020-03-15 13:30:45 -此处进行解密+验签+身份验证
2020-03-15 13:30:45 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-03-15 13:30:45 -token值=======469|7F8VM7UURKH4OH6WHY8R77CKKFJEAGLD
2020-03-15 13:30:45 -耗时 : 33
2020-03-15 13:30:55 -此处进行解密+验签+身份验证
2020-03-15 13:30:55 -解密：{"sys_user_account":"13763349409","login_password":"8A6F2805B4515AC12058E79E66539BE9","device_type":"android","device_no":"1.0.9","sign":"2C2D629FA8BFA5533EF7B0AC744E9A2C","version_no":"450000000145206","login_type":"account"}
2020-03-15 13:30:55 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-15 13:30:55 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-15 13:30:55 -==> Parameters: 13763349409(String)
2020-03-15 13:30:55 -<==      Total: 1
2020-03-15 13:30:55 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-15 13:30:55 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), 192.168.191.1(String), 20200315(String), 133055(String), 691(Integer)
2020-03-15 13:30:55 -<==    Updates: 1
2020-03-15 13:30:55 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-15 13:30:55 -==> Parameters: 25(String)
2020-03-15 13:30:55 -<==      Total: 1
2020-03-15 13:30:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 13:30:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 13:30:55 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 13:30:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 13:30:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 13:30:56 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 13:30:56 -耗时 : 106
2020-03-15 13:30:56 -此处进行解密+验签+身份验证
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:30:56 -==>  Preparing: select * from t_user_frozen where user_id = ? 
2020-03-15 13:30:56 -==> Parameters: 691(String)
2020-03-15 13:30:56 -此处进行解密+验签+身份验证
2020-03-15 13:30:56 -解密：
2020-03-15 13:30:56 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-15 13:30:56 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-15 13:30:56 -==> Parameters: 01(String), 01(String)
2020-03-15 13:30:56 -<==      Total: 0
2020-03-15 13:30:56 -此处进行解密+验签+身份验证
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:30:56 -<==      Total: 7
2020-03-15 13:30:56 -耗时 : 10
2020-03-15 13:30:56 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) proceed,save result to cache,redisKey:zfpay_user_freeze_691,save content:null
2020-03-15 13:30:56 -此处进行解密+验签+身份验证
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:30:56 -此处进行解密+验签+身份验证
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:30:56 -此处进行解密+验签+身份验证
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:30:56 -此处进行解密+验签+身份验证
2020-03-15 13:30:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:30:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:30:56 -==> Parameters: 691(String)
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -耗时 : 9
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:30:56 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-15 13:30:56 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-15 13:30:56 -==> Parameters: 
2020-03-15 13:30:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-15 13:30:56 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-15 13:30:56 -==> Parameters: 691(String)
2020-03-15 13:30:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:30:56 -<==      Total: 3
2020-03-15 13:30:56 -耗时 : 8
2020-03-15 13:30:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:30:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:30:56 -==> Parameters: 691(String)
2020-03-15 13:30:56 -<==      Total: 2
2020-03-15 13:30:56 -耗时 : 8
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:30:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -耗时 : 8
2020-03-15 13:30:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:30:56 -==> Parameters: 691(String), 691(String)
2020-03-15 13:30:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:30:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:30:56 -==> Parameters: 691(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 0
2020-03-15 13:30:56 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-03-15 13:30:56 -==> Parameters: 691(String), applyRateFlag(String), 0(Integer), 0(Integer), 25(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:30:56 -==> Parameters: 691(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:56 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:30:56 -==> Parameters: 691(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 0
2020-03-15 13:30:56 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-03-15 13:30:56 -==> Parameters: 691(String), recallFlag(String), 0(Integer), 0(Integer), 25(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:30:56 -==> Parameters: 
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -<==      Total: 0
2020-03-15 13:30:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:30:56 -==> Parameters: 
2020-03-15 13:30:56 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-03-15 13:30:56 -==> Parameters: 691(String), collegeFlag(String), 0(Integer), 15(Integer), 25(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:30:56 -==> Parameters: 691(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:56 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 0
2020-03-15 13:30:56 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-03-15 13:30:56 -==> Parameters: 691(String), cardFlag(String), 0(Integer), 0(Integer), 25(String)
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:30:56 -==> Parameters: 691(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:30:56 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -<==      Total: 0
2020-03-15 13:30:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:30:56 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-03-15 13:30:56 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:30:56 -==> Parameters: 691(String), appImgFlag(String), 0(Integer), 0(Integer), 25(String)
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -耗时 : 133
2020-03-15 13:30:56 -<==    Updates: 1
2020-03-15 13:30:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:30:56 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:30:56 -<==      Total: 1
2020-03-15 13:30:56 -耗时 : 140
2020-03-15 13:31:00 -此处进行解密+验签+身份验证
2020-03-15 13:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-15 13:31:00 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-15 13:31:01 -==> Parameters: 1(String), 691(String), recallFlag(String)
2020-03-15 13:31:01 -<==    Updates: 1
2020-03-15 13:31:01 -耗时 : 14
2020-03-15 13:31:01 -此处进行解密+验签+身份验证
2020-03-15 13:31:01 -此处进行解密+验签+身份验证
2020-03-15 13:31:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:01 -此处进行解密+验签+身份验证
2020-03-15 13:31:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRecallTraditionalPosList
2020-03-15 13:31:01 -==>  Preparing: SELECT cast(id as char) as recall_id, sn, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_datetime FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? and pos_type is null AND status = ? ORDER BY id desc limit 0,10 
2020-03-15 13:31:01 -==> Parameters: 691(String), 00(String)
2020-03-15 13:31:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRecallTraditionalPosList
2020-03-15 13:31:01 -==>  Preparing: SELECT cast(id as char) as recall_id, sn, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_datetime FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? and pos_type is null AND status = ? ORDER BY id desc limit 0,10 
2020-03-15 13:31:01 -==> Parameters: 691(String), 09(String)
2020-03-15 13:31:01 -<==      Total: 0
2020-03-15 13:31:01 -耗时 : 10
2020-03-15 13:31:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRecallTraditionalPosList
2020-03-15 13:31:01 -<==      Total: 0
2020-03-15 13:31:01 -==>  Preparing: SELECT cast(id as char) as recall_id, sn, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_datetime FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? and pos_type is null AND status = ? ORDER BY id desc limit 0,10 
2020-03-15 13:31:01 -耗时 : 7
2020-03-15 13:31:01 -==> Parameters: 691(String), 08(String)
2020-03-15 13:31:01 -<==      Total: 0
2020-03-15 13:31:01 -耗时 : 10
2020-03-15 13:31:02 -此处进行解密+验签+身份验证
2020-03-15 13:31:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:02 -此处进行解密+验签+身份验证
2020-03-15 13:31:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:02 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:31:02 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:31:02 -==> Parameters: 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -耗时 : 12
2020-03-15 13:31:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:31:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:31:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:31:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:02 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:02 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:02 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:31:02 -<==    Updates: 1
2020-03-15 13:31:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:31:02 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:02 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:02 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:31:02 -<==    Updates: 1
2020-03-15 13:31:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:31:02 -==> Parameters: 
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:02 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:02 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:31:02 -<==    Updates: 1
2020-03-15 13:31:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:02 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:02 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:02 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:31:02 -<==    Updates: 1
2020-03-15 13:31:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:02 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:31:02 -<==      Total: 1
2020-03-15 13:31:02 -耗时 : 114
2020-03-15 13:31:04 -此处进行解密+验签+身份验证
2020-03-15 13:31:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:04 -此处进行解密+验签+身份验证
2020-03-15 13:31:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-15 13:31:04 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-15 13:31:04 -==> Parameters: 1(String), 691(String), cardFlag(String)
2020-03-15 13:31:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:04 -<==    Updates: 1
2020-03-15 13:31:04 -耗时 : 13
2020-03-15 13:31:04 -请求地址 : http://192.168.191.1:8080/api/user/cardInfo/getUserCardList
2020-03-15 13:31:04 -==>  Preparing: SELECT id AS card_id, user_id, account, account_name, bank_code, bank_name, card_photo, status, is_default, remark FROM t_user_card_info WHERE user_id=? order by is_default desc,id desc 
2020-03-15 13:31:04 -==> Parameters: 691(String)
2020-03-15 13:31:04 -<==      Total: 1
2020-03-15 13:31:04 -耗时 : 18
2020-03-15 13:31:05 -此处进行解密+验签+身份验证
2020-03-15 13:31:05 -此处进行解密+验签+身份验证
2020-03-15 13:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:31:05 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:31:05 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:31:05 -==> Parameters: 691(String)
2020-03-15 13:31:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -耗时 : 11
2020-03-15 13:31:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:05 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:05 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:05 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:31:05 -<==    Updates: 1
2020-03-15 13:31:05 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:31:05 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:05 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:05 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:31:05 -<==    Updates: 1
2020-03-15 13:31:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:31:05 -==> Parameters: 
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:05 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:05 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:31:05 -<==    Updates: 1
2020-03-15 13:31:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:05 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:05 -<==      Total: 1
2020-03-15 13:31:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:05 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:31:06 -<==      Total: 1
2020-03-15 13:31:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:06 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:31:06 -<==    Updates: 1
2020-03-15 13:31:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:06 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:31:06 -<==      Total: 1
2020-03-15 13:31:06 -耗时 : 118
2020-03-15 13:31:06 -此处进行解密+验签+身份验证
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:07 -此处进行解密+验签+身份验证
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:07 -此处进行解密+验签+身份验证
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:07 -此处进行解密+验签+身份验证
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:07 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-15 13:31:07 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-15 13:31:07 -==> Parameters: 691(String)
2020-03-15 13:31:07 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-15 13:31:07 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-15 13:31:07 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:31:07 -<==      Total: 1
2020-03-15 13:31:07 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-15 13:31:07 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-15 13:31:07 -耗时 : 10
2020-03-15 13:31:07 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-15 13:31:07 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:31:07 -<==      Total: 1
2020-03-15 13:31:07 -耗时 : 10
2020-03-15 13:31:07 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-15 13:31:07 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:31:07 -<==      Total: 1
2020-03-15 13:31:07 -耗时 : 9
2020-03-15 13:31:07 -<==      Total: 1
2020-03-15 13:31:07 -耗时 : 19
2020-03-15 13:31:09 -此处进行解密+验签+身份验证
2020-03-15 13:31:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:09 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:31:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:31:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:31:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:09 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:09 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:09 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:31:09 -<==    Updates: 1
2020-03-15 13:31:09 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:31:09 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:09 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:09 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:31:09 -<==    Updates: 1
2020-03-15 13:31:09 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:31:09 -==> Parameters: 
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:09 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:09 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:31:09 -<==    Updates: 1
2020-03-15 13:31:09 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:09 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:09 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:09 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:31:09 -<==    Updates: 1
2020-03-15 13:31:09 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:09 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:31:09 -<==      Total: 1
2020-03-15 13:31:09 -耗时 : 117
2020-03-15 13:31:13 -此处进行解密+验签+身份验证
2020-03-15 13:31:13 -此处进行解密+验签+身份验证
2020-03-15 13:31:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:13 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-15 13:31:13 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? and t1.pos_type is null and t.pos_type is null 
2020-03-15 13:31:13 -==> Parameters: 202003(String), 691(String)
2020-03-15 13:31:13 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-15 13:31:13 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-15 13:31:13 -==> Parameters: 691(String)
2020-03-15 13:31:13 -<==      Total: 1
2020-03-15 13:31:13 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-15 13:31:13 -==> Parameters: 691(String)
2020-03-15 13:31:13 -<==      Total: 1
2020-03-15 13:31:13 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-15 13:31:13 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:13 -<==      Total: 0
2020-03-15 13:31:13 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-15 13:31:13 -==> Parameters: 202003(String), 691(String)
2020-03-15 13:31:13 -<==      Total: 1
2020-03-15 13:31:13 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-15 13:31:13 -==> Parameters: 691(String)
2020-03-15 13:31:13 -<==      Total: 0
2020-03-15 13:31:13 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? and t1.pos_type='epos' and t.pos_type='epos' 
2020-03-15 13:31:13 -==> Parameters: 202003(String), 691(String)
2020-03-15 13:31:13 -<==      Total: 1
2020-03-15 13:31:13 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-15 13:31:13 -==> Parameters: 691(String)
2020-03-15 13:31:13 -<==      Total: 0
2020-03-15 13:31:13 -耗时 : 50
2020-03-15 13:31:13 -<==      Total: 1
2020-03-15 13:31:13 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-15 13:31:13 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:13 -<==      Total: 1
2020-03-15 13:31:13 -耗时 : 77
2020-03-15 13:31:28 -此处进行解密+验签+身份验证
2020-03-15 13:31:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:28 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:31:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:31:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:31:28 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:28 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:28 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:28 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:31:28 -<==    Updates: 1
2020-03-15 13:31:28 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:31:28 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:28 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:28 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:31:28 -<==    Updates: 1
2020-03-15 13:31:28 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:31:28 -==> Parameters: 
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:28 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:28 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:31:28 -<==    Updates: 1
2020-03-15 13:31:28 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:28 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:28 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:28 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:31:28 -<==    Updates: 1
2020-03-15 13:31:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:28 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:31:28 -<==      Total: 1
2020-03-15 13:31:28 -耗时 : 114
2020-03-15 13:31:31 -此处进行解密+验签+身份验证
2020-03-15 13:31:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:31:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:31:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:31:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:31 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:31 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:31 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:31:31 -<==    Updates: 1
2020-03-15 13:31:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:31:31 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:31 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:31 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:31:31 -<==    Updates: 1
2020-03-15 13:31:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:31:31 -==> Parameters: 
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:31 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:31 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:31:31 -<==    Updates: 1
2020-03-15 13:31:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:31:31 -==> Parameters: 691(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:31 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:31:31 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:31:31 -<==    Updates: 1
2020-03-15 13:31:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:31:31 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:31:31 -<==      Total: 1
2020-03-15 13:31:31 -耗时 : 120
2020-03-15 13:31:33 -此处进行解密+验签+身份验证
2020-03-15 13:31:33 -此处进行解密+验签+身份验证
2020-03-15 13:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:31:33 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-15 13:31:33 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-15 13:31:33 -==> Parameters: 691(String)
2020-03-15 13:31:33 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-15 13:31:33 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-15 13:31:33 -==> Parameters: 691(String)
2020-03-15 13:31:33 -<==      Total: 0
2020-03-15 13:31:33 -耗时 : 12
2020-03-15 13:31:33 -<==      Total: 1
2020-03-15 13:31:33 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-15 13:31:33 -==> Parameters: 691(String)
2020-03-15 13:31:33 -<==      Total: 1
2020-03-15 13:31:33 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-15 13:31:33 -==> Parameters: 691(String)
2020-03-15 13:31:33 -<==      Total: 1
2020-03-15 13:31:33 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-15 13:31:33 -==> Parameters: 691(String)
2020-03-15 13:31:33 -<==      Total: 1
2020-03-15 13:31:33 -耗时 : 35
2020-03-15 13:32:07 -此处进行解密+验签+身份验证
2020-03-15 13:32:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:07 -此处进行解密+验签+身份验证
2020-03-15 13:32:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:07 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-03-15 13:32:07 -==> Parameters: 691(String)
2020-03-15 13:32:07 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryMposList
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND del='0' 
2020-03-15 13:32:07 -==> Parameters: 691(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-03-15 13:32:07 -==> Parameters: 691(String), 691(String), 202003(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-15 13:32:07 -==> Parameters: 691(String), 691(String), 20200214(String), 20200315(String), 691(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_mpos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-03-15 13:32:07 -==> Parameters: 691(String), 691(String), 202003(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-15 13:32:07 -==> Parameters: 691(String), 691(String), 20200214(String), 20200315(String), 691(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-15 13:32:07 -==> Parameters: 691(String), 20200115(String), 691(String), 20200115(String), 20200315(String), 691(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-03-15 13:32:07 -==> Parameters: 691(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -耗时 : 69
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-15 13:32:07 -==> Parameters: 691(String), 20200115(String), 691(String), 20200115(String), 20200315(String), 691(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='02' 
2020-03-15 13:32:07 -==> Parameters: 691(String)
2020-03-15 13:32:07 -<==      Total: 1
2020-03-15 13:32:07 -耗时 : 176
2020-03-15 13:32:12 -此处进行解密+验签+身份验证
2020-03-15 13:32:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:12 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getAllMerchantTraditionalPosList
2020-03-15 13:32:12 -==>  Preparing: SELECT cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, t1.name, t1.tel FROM t_user_traditional_pos_info t LEFT JOIN t_sys_traditional_pos_info t1 on t.sn = t1.sn WHERE t.user_id = ? AND t.state_status = '1' AND t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-15 13:32:12 -==> Parameters: 691(String)
2020-03-15 13:32:12 -<==      Total: 10
2020-03-15 13:32:12 -耗时 : 12
2020-03-15 13:32:23 -此处进行解密+验签+身份验证
2020-03-15 13:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:23 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-15 13:32:23 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type='epos' 
2020-03-15 13:32:23 -==> Parameters: 691(String)
2020-03-15 13:32:23 -<==      Total: 1
2020-03-15 13:32:23 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type='epos' 
2020-03-15 13:32:23 -==> Parameters: 691(String), 691(String), 202003(String)
2020-03-15 13:32:23 -<==      Total: 1
2020-03-15 13:32:23 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type='epos' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-15 13:32:23 -==> Parameters: 691(String), 691(String), 20200214(String), 20200315(String), 691(String)
2020-03-15 13:32:23 -<==      Total: 1
2020-03-15 13:32:23 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type='epos' AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-15 13:32:23 -==> Parameters: 691(String), 20200115(String), 691(String), 20200115(String), 20200315(String), 691(String)
2020-03-15 13:32:23 -<==      Total: 1
2020-03-15 13:32:23 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='03' 
2020-03-15 13:32:23 -==> Parameters: 691(String)
2020-03-15 13:32:23 -<==      Total: 1
2020-03-15 13:32:23 -耗时 : 66
2020-03-15 13:32:25 -此处进行解密+验签+身份验证
2020-03-15 13:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:25 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getAllMerchantTraditionalPosList
2020-03-15 13:32:25 -==>  Preparing: SELECT cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, t1.name, t1.tel FROM t_user_traditional_pos_info t LEFT JOIN t_sys_traditional_pos_info t1 on t.sn = t1.sn WHERE t.user_id = ? AND t.state_status = '1' AND t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-15 13:32:25 -==> Parameters: 691(String)
2020-03-15 13:32:25 -<==      Total: 10
2020-03-15 13:32:25 -耗时 : 11
2020-03-15 13:32:36 -此处进行解密+验签+身份验证
2020-03-15 13:32:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:36 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getAllMerchantMposList
2020-03-15 13:32:36 -==>  Preparing: SELECT cast(t.id as char) as mpos_id, t.sn, t1.name, t1.tel FROM t_user_mpos_info t LEFT JOIN t_sys_mpos_info t1 on t.sn = t1.sn WHERE t.user_id = ? AND t.state_status = '1' AND t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-15 13:32:36 -==> Parameters: 691(String)
2020-03-15 13:32:36 -<==      Total: 10
2020-03-15 13:32:36 -耗时 : 31
2020-03-15 13:32:43 -此处进行解密+验签+身份验证
2020-03-15 13:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:43 -此处进行解密+验签+身份验证
2020-03-15 13:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:43 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-03-15 13:32:43 -==> Parameters: 691(String)
2020-03-15 13:32:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-03-15 13:32:43 -==> Parameters: 691(String), 691(String), 202003(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-15 13:32:43 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryMposList
2020-03-15 13:32:43 -==> Parameters: 691(String), 691(String), 20200214(String), 20200315(String), 691(String)
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND del='0' 
2020-03-15 13:32:43 -==> Parameters: 691(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-15 13:32:43 -==> Parameters: 691(String), 20200115(String), 691(String), 20200115(String), 20200315(String), 691(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_mpos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-03-15 13:32:43 -==> Parameters: 691(String), 691(String), 202003(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-03-15 13:32:43 -==> Parameters: 691(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-15 13:32:43 -==> Parameters: 691(String), 691(String), 20200214(String), 20200315(String), 691(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -耗时 : 37
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-15 13:32:43 -==> Parameters: 691(String), 20200115(String), 691(String), 20200115(String), 20200315(String), 691(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='02' 
2020-03-15 13:32:43 -==> Parameters: 691(String)
2020-03-15 13:32:43 -<==      Total: 1
2020-03-15 13:32:43 -耗时 : 42
2020-03-15 13:32:44 -此处进行解密+验签+身份验证
2020-03-15 13:32:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:32:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:32:44 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-15 13:32:44 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type='epos' 
2020-03-15 13:32:44 -==> Parameters: 691(String)
2020-03-15 13:32:44 -<==      Total: 1
2020-03-15 13:32:44 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type='epos' 
2020-03-15 13:32:44 -==> Parameters: 691(String), 691(String), 202003(String)
2020-03-15 13:32:44 -<==      Total: 1
2020-03-15 13:32:44 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type='epos' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-15 13:32:44 -==> Parameters: 691(String), 691(String), 20200214(String), 20200315(String), 691(String)
2020-03-15 13:32:44 -<==      Total: 1
2020-03-15 13:32:44 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type='epos' AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-15 13:32:44 -==> Parameters: 691(String), 20200115(String), 691(String), 20200115(String), 20200315(String), 691(String)
2020-03-15 13:32:44 -<==      Total: 1
2020-03-15 13:32:44 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='03' 
2020-03-15 13:32:44 -==> Parameters: 691(String)
2020-03-15 13:32:44 -<==      Total: 1
2020-03-15 13:32:44 -耗时 : 59
2020-03-15 13:33:10 -此处进行解密+验签+身份验证
2020-03-15 13:33:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:33:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:33:10 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getAllMerchantTraditionalPosList
2020-03-15 13:33:10 -==>  Preparing: SELECT cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, t1.name, t1.tel FROM t_user_traditional_pos_info t LEFT JOIN t_sys_traditional_pos_info t1 on t.sn = t1.sn WHERE t.user_id = ? AND t.state_status = '1' AND t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-15 13:33:10 -==> Parameters: 691(String)
2020-03-15 13:33:10 -<==      Total: 10
2020-03-15 13:33:10 -耗时 : 12
2020-03-15 13:33:26 -此处进行解密+验签+身份验证
2020-03-15 13:33:26 -此处进行解密+验签+身份验证
2020-03-15 13:33:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:33:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:33:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:33:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:33:26 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:33:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:33:26 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:33:26 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:33:26 -==> Parameters: 691(String)
2020-03-15 13:33:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -耗时 : 9
2020-03-15 13:33:26 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:33:26 -==> Parameters: 691(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:33:26 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:33:26 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:33:26 -<==    Updates: 1
2020-03-15 13:33:26 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:33:26 -==> Parameters: 691(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:33:26 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:33:26 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:33:26 -<==    Updates: 1
2020-03-15 13:33:26 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:33:26 -==> Parameters: 
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:33:26 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:33:26 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:33:26 -<==    Updates: 1
2020-03-15 13:33:26 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:33:26 -==> Parameters: 691(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:33:26 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:33:26 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:33:26 -<==    Updates: 1
2020-03-15 13:33:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:33:26 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:33:26 -<==      Total: 1
2020-03-15 13:33:26 -耗时 : 122
2020-03-15 13:34:34 -此处进行解密+验签+身份验证
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:34 -此处进行解密+验签+身份验证
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:34 -此处进行解密+验签+身份验证
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyMposDetail
2020-03-15 13:34:34 -此处进行解密+验签+身份验证
2020-03-15 13:34:34 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:34 -==> Parameters: 691(String), 20200315(String)
2020-03-15 13:34:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyMposDetail
2020-03-15 13:34:34 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-15 13:34:34 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:34:34 -<==      Total: 0
2020-03-15 13:34:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:34 -耗时 : 10
2020-03-15 13:34:34 -<==      Total: 1
2020-03-15 13:34:34 -耗时 : 10
2020-03-15 13:34:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantMposDetail
2020-03-15 13:34:34 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-15 13:34:34 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:34:34 -<==      Total: 1
2020-03-15 13:34:34 -耗时 : 8
2020-03-15 13:34:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantMposDetail
2020-03-15 13:34:34 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-15 13:34:34 -==> Parameters: 691(String), 20200315(String)
2020-03-15 13:34:34 -<==      Total: 0
2020-03-15 13:34:34 -耗时 : 8
2020-03-15 13:34:42 -此处进行解密+验签+身份验证
2020-03-15 13:34:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:42 -此处进行解密+验签+身份验证
2020-03-15 13:34:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:42 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:34:42 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:34:42 -==> Parameters: 691(String)
2020-03-15 13:34:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:34:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -耗时 : 16
2020-03-15 13:34:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:34:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:34:42 -==> Parameters: 691(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:34:42 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:34:42 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:34:42 -<==    Updates: 1
2020-03-15 13:34:42 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:34:42 -==> Parameters: 691(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:34:42 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:34:42 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:34:42 -<==    Updates: 1
2020-03-15 13:34:42 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:34:42 -==> Parameters: 
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:34:42 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:34:42 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:34:42 -<==    Updates: 1
2020-03-15 13:34:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:34:42 -==> Parameters: 691(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:34:42 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:34:42 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:34:42 -<==    Updates: 1
2020-03-15 13:34:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:34:42 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:34:42 -<==      Total: 1
2020-03-15 13:34:42 -耗时 : 115
2020-03-15 13:34:46 -此处进行解密+验签+身份验证
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:46 -此处进行解密+验签+身份验证
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:46 -此处进行解密+验签+身份验证
2020-03-15 13:34:46 -此处进行解密+验签+身份验证
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:34:46 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:34:46 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-15 13:34:46 -==> Parameters: 691(String), 20200315(String)
2020-03-15 13:34:46 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-03-15 13:34:46 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-15 13:34:46 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:34:46 -<==      Total: 0
2020-03-15 13:34:46 -耗时 : 11
2020-03-15 13:34:46 -<==      Total: 1
2020-03-15 13:34:46 -耗时 : 11
2020-03-15 13:34:46 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-03-15 13:34:46 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-15 13:34:46 -==> Parameters: 691(String), 20200315(String)
2020-03-15 13:34:46 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-03-15 13:34:46 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-15 13:34:46 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:34:46 -<==      Total: 0
2020-03-15 13:34:46 -耗时 : 7
2020-03-15 13:34:46 -<==      Total: 1
2020-03-15 13:34:46 -耗时 : 6
2020-03-15 13:40:05 -此处进行解密+验签+身份验证
2020-03-15 13:40:05 -此处进行解密+验签+身份验证
2020-03-15 13:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:05 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:40:05 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:40:05 -==> Parameters: 691(String)
2020-03-15 13:40:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:40:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -耗时 : 12
2020-03-15 13:40:05 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5dc25dc0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:40:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:40:05 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:05 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:05 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:40:05 -<==    Updates: 1
2020-03-15 13:40:05 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:40:05 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:05 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:05 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:40:05 -<==    Updates: 1
2020-03-15 13:40:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:40:05 -==> Parameters: 
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:05 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:05 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:40:05 -<==    Updates: 1
2020-03-15 13:40:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:40:05 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:05 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:05 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:40:05 -<==    Updates: 1
2020-03-15 13:40:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:05 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:40:05 -<==      Total: 1
2020-03-15 13:40:05 -耗时 : 122
2020-03-15 13:40:19 -此处进行解密+验签+身份验证
2020-03-15 13:40:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:40:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:40:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:40:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3811f2db (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:40:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:40:19 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:19 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:19 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:40:19 -<==    Updates: 1
2020-03-15 13:40:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:40:19 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:19 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:19 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:40:19 -<==    Updates: 1
2020-03-15 13:40:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:40:19 -==> Parameters: 
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:19 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:19 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:40:19 -<==    Updates: 1
2020-03-15 13:40:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:40:19 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:19 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:19 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:40:19 -<==    Updates: 1
2020-03-15 13:40:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:19 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:40:19 -<==      Total: 1
2020-03-15 13:40:19 -耗时 : 134
2020-03-15 13:40:21 -此处进行解密+验签+身份验证
2020-03-15 13:40:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:21 -此处进行解密+验签+身份验证
2020-03-15 13:40:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:21 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-15 13:40:21 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-15 13:40:21 -==> Parameters: 691(String)
2020-03-15 13:40:21 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-15 13:40:21 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@6f7900d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:40:21 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-15 13:40:21 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:21 -<==      Total: 4
2020-03-15 13:40:21 -耗时 : 30
2020-03-15 13:40:22 -此处进行解密+验签+身份验证
2020-03-15 13:40:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:22 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:40:22 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-15 13:40:22 -==> Parameters: 691(String)
2020-03-15 13:40:22 -<==      Total: 10
2020-03-15 13:40:22 -耗时 : 16
2020-03-15 13:40:31 -此处进行解密+验签+身份验证
2020-03-15 13:40:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:31 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:40:31 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-15 13:40:31 -==> Parameters: 691(String)
2020-03-15 13:40:31 -<==      Total: 1
2020-03-15 13:40:31 -耗时 : 15
2020-03-15 13:40:35 -此处进行解密+验签+身份验证
2020-03-15 13:40:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:35 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:40:35 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-15 13:40:35 -==> Parameters: 691(String)
2020-03-15 13:40:35 -<==      Total: 10
2020-03-15 13:40:35 -耗时 : 17
2020-03-15 13:40:35 -<==      Total: 0
2020-03-15 13:40:35 -耗时 : 13911
2020-03-15 13:40:38 -此处进行解密+验签+身份验证
2020-03-15 13:40:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:38 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:40:38 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-15 13:40:38 -==> Parameters: 691(String)
2020-03-15 13:40:38 -<==      Total: 1
2020-03-15 13:40:38 -耗时 : 16
2020-03-15 13:40:38 -此处进行解密+验签+身份验证
2020-03-15 13:40:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:38 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:40:38 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-15 13:40:38 -==> Parameters: 691(String)
2020-03-15 13:40:38 -<==      Total: 10
2020-03-15 13:40:38 -耗时 : 16
2020-03-15 13:40:39 -此处进行解密+验签+身份验证
2020-03-15 13:40:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:39 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-15 13:40:39 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-15 13:40:39 -==> Parameters: 691(String)
2020-03-15 13:40:39 -<==      Total: 4
2020-03-15 13:40:39 -耗时 : 30
2020-03-15 13:40:40 -此处进行解密+验签+身份验证
2020-03-15 13:40:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:40:40 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-15 13:40:40 -==> Parameters: 691(String)
2020-03-15 13:40:40 -<==      Total: 1
2020-03-15 13:40:40 -耗时 : 16
2020-03-15 13:40:40 -此处进行解密+验签+身份验证
2020-03-15 13:40:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-15 13:40:40 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-15 13:40:40 -==> Parameters: 691(String)
2020-03-15 13:40:40 -<==      Total: 10
2020-03-15 13:40:40 -耗时 : 12
2020-03-15 13:40:42 -此处进行解密+验签+身份验证
2020-03-15 13:40:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:42 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-15 13:40:42 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-15 13:40:42 -==> Parameters: 691(String)
2020-03-15 13:40:42 -<==      Total: 4
2020-03-15 13:40:42 -耗时 : 29
2020-03-15 13:40:53 -此处进行解密+验签+身份验证
2020-03-15 13:40:53 -此处进行解密+验签+身份验证
2020-03-15 13:40:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:40:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:40:53 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:40:53 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:40:53 -==> Parameters: 691(String)
2020-03-15 13:40:53 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:40:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -耗时 : 12
2020-03-15 13:40:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:40:53 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:40:53 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:53 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:53 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:40:53 -<==    Updates: 1
2020-03-15 13:40:53 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:40:53 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:53 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:53 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:40:53 -<==    Updates: 1
2020-03-15 13:40:53 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:40:53 -==> Parameters: 
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:53 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:53 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:40:53 -<==    Updates: 1
2020-03-15 13:40:53 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:40:53 -==> Parameters: 691(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:53 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:40:53 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:40:53 -<==    Updates: 1
2020-03-15 13:40:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:40:53 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:40:53 -<==      Total: 1
2020-03-15 13:40:53 -耗时 : 122
2020-03-15 13:41:02 -此处进行解密+验签+身份验证
2020-03-15 13:41:02 -此处进行解密+验签+身份验证
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:41:02 -此处进行解密+验签+身份验证
2020-03-15 13:41:02 -此处进行解密+验签+身份验证
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:41:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:41:02 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyMposDetail
2020-03-15 13:41:02 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-15 13:41:02 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:41:02 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyMposDetail
2020-03-15 13:41:02 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantMposDetail
2020-03-15 13:41:02 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantMposDetail
2020-03-15 13:41:02 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-15 13:41:02 -<==      Total: 1
2020-03-15 13:41:02 -==> Parameters: 691(String), 20200315(String)
2020-03-15 13:41:02 -耗时 : 12
2020-03-15 13:41:02 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-15 13:41:02 -==> Parameters: 691(String), 20200315(String)
2020-03-15 13:41:02 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@385a9877 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-15 13:41:02 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-15 13:41:02 -==> Parameters: 691(String), 202003(String)
2020-03-15 13:41:02 -<==      Total: 0
2020-03-15 13:41:02 -耗时 : 11
2020-03-15 13:41:02 -<==      Total: 0
2020-03-15 13:41:02 -耗时 : 17
2020-03-15 13:41:02 -<==      Total: 1
2020-03-15 13:41:02 -耗时 : 16
2020-03-15 13:41:07 -此处进行解密+验签+身份验证
2020-03-15 13:41:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:41:07 -此处进行解密+验签+身份验证
2020-03-15 13:41:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_691
2020-03-15 13:41:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:41:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_691 , return
2020-03-15 13:41:07 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:41:07 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:41:07 -==> Parameters: 691(String)
2020-03-15 13:41:07 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:41:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_691
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -耗时 : 11
2020-03-15 13:41:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_691 , return
2020-03-15 13:41:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:41:07 -==> Parameters: 691(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:41:07 -==> Parameters: applyRateFlag(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:41:07 -==> Parameters: 0(Integer), 0(Integer), 691(String), applyRateFlag(String)
2020-03-15 13:41:07 -<==    Updates: 1
2020-03-15 13:41:07 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:41:07 -==> Parameters: 691(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:41:07 -==> Parameters: recallFlag(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:41:07 -==> Parameters: 0(Integer), 0(Integer), 691(String), recallFlag(String)
2020-03-15 13:41:07 -<==    Updates: 1
2020-03-15 13:41:07 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:41:07 -==> Parameters: 
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:41:07 -==> Parameters: collegeFlag(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:41:07 -==> Parameters: 15(Integer), 15(Integer), 691(String), collegeFlag(String)
2020-03-15 13:41:07 -<==    Updates: 1
2020-03-15 13:41:07 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:41:07 -==> Parameters: 691(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:41:07 -==> Parameters: cardFlag(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:41:07 -==> Parameters: 0(Integer), 0(Integer), 691(String), cardFlag(String)
2020-03-15 13:41:07 -<==    Updates: 1
2020-03-15 13:41:07 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:41:07 -==> Parameters: appImgFlag(String), 691(String)
2020-03-15 13:41:07 -<==      Total: 1
2020-03-15 13:41:07 -耗时 : 127
2020-03-15 13:46:36 -此处进行解密+验签+身份验证
2020-03-15 13:46:36 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-03-15 13:46:36 -token值=======691|9OSLVMMXE9M9PN9524IZLMQAT9W5A2AM
2020-03-15 13:46:36 -耗时 : 31
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -解密：{"sys_user_account":"15019499979","login_password":"8A6F2805B4515AC12058E79E66539BE9","device_type":"android","device_no":"1.0.9","sign":"F1380DC96310DB3B2158845351AD5A96","version_no":"450000000145206","login_type":"account"}
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-15 13:46:43 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-15 13:46:43 -==> Parameters: 15019499979(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-15 13:46:43 -==> Parameters: android(String), 1.0.9(String), 450000000145206(String), 192.168.191.1(String), 20200315(String), 134643(String), 469(Integer)
2020-03-15 13:46:43 -<==    Updates: 1
2020-03-15 13:46:43 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-15 13:46:43 -==> Parameters: 25(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 13:46:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 13:46:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 13:46:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 13:46:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-15 13:46:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-15 13:46:43 -耗时 : 85
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -解密：
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-15 13:46:43 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-15 13:46:43 -==> Parameters: 01(String), 01(String)
2020-03-15 13:46:43 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:46:43 -==> Parameters: 469(String)
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:46:43 -<==      Total: 7
2020-03-15 13:46:43 -耗时 : 10
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -耗时 : 18
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:46:43 -此处进行解密+验签+身份验证
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:46:43 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:46:43 -==> Parameters: 469(String)
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-15 13:46:43 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-15 13:46:43 -==> Parameters: 469(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -耗时 : 8
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-15 13:46:43 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-15 13:46:43 -==> Parameters: 
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 13:46:43 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -耗时 : 11
2020-03-15 13:46:43 -<==      Total: 3
2020-03-15 13:46:43 -耗时 : 6
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 13:46:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 13:46:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:46:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:46:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:46:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:46:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:46:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==> Parameters: 
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:46:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:46:43 -==> Parameters: 
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -耗时 : 139
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:46:43 -==> Parameters: 469(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 1
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:46:43 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 13:46:43 -<==    Updates: 2
2020-03-15 13:46:43 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:46:43 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 13:46:43 -<==      Total: 2
2020-03-15 13:46:43 -耗时 : 199
2020-03-15 13:47:00 -此处进行解密+验签+身份验证
2020-03-15 13:47:00 -此处进行解密+验签+身份验证
2020-03-15 13:47:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:00 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-15 13:47:00 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-15 13:47:00 -==> Parameters: 469(String)
2020-03-15 13:47:00 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? and t1.pos_type is null and t.pos_type is null 
2020-03-15 13:47:00 -==> Parameters: 202003(String), 469(String)
2020-03-15 13:47:00 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-15 13:47:00 -==> Parameters: 469(String), 469(String)
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-15 13:47:00 -==> Parameters: 469(String)
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-15 13:47:00 -==> Parameters: 202003(String), 469(String)
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-15 13:47:00 -==> Parameters: 469(String)
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? and t1.pos_type='epos' and t.pos_type='epos' 
2020-03-15 13:47:00 -==> Parameters: 202003(String), 469(String)
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-15 13:47:00 -==> Parameters: 469(String)
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -耗时 : 51
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-15 13:47:00 -==> Parameters: 469(String), 469(String)
2020-03-15 13:47:00 -<==      Total: 1
2020-03-15 13:47:00 -耗时 : 81
2020-03-15 13:47:08 -此处进行解密+验签+身份验证
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:08 -此处进行解密+验签+身份验证
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:08 -此处进行解密+验签+身份验证
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:08 -此处进行解密+验签+身份验证
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:08 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyMposDetail
2020-03-15 13:47:08 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyMposDetail
2020-03-15 13:47:08 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-15 13:47:08 -==> Parameters: 469(String), 20200315(String)
2020-03-15 13:47:08 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-15 13:47:08 -==> Parameters: 469(String), 202003(String)
2020-03-15 13:47:08 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantMposDetail
2020-03-15 13:47:08 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-15 13:47:08 -==> Parameters: 469(String), 20200315(String)
2020-03-15 13:47:08 -<==      Total: 1
2020-03-15 13:47:08 -耗时 : 13
2020-03-15 13:47:08 -<==      Total: 1
2020-03-15 13:47:08 -耗时 : 18
2020-03-15 13:47:08 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantMposDetail
2020-03-15 13:47:08 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-15 13:47:08 -==> Parameters: 469(String), 202003(String)
2020-03-15 13:47:08 -<==      Total: 1
2020-03-15 13:47:08 -耗时 : 10
2020-03-15 13:47:08 -<==      Total: 1
2020-03-15 13:47:08 -耗时 : 14
2020-03-15 13:47:30 -此处进行解密+验签+身份验证
2020-03-15 13:47:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:30 -此处进行解密+验签+身份验证
2020-03-15 13:47:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-15 13:47:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-15 13:47:30 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-15 13:47:30 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-15 13:47:30 -==> Parameters: 469(String)
2020-03-15 13:47:30 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-15 13:47:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-15 13:47:30 -<==      Total: 1
2020-03-15 13:47:30 -耗时 : 10
2020-03-15 13:47:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-15 13:47:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:47:30 -==> Parameters: 469(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 1
2020-03-15 13:47:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:47:30 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 2
2020-03-15 13:47:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:47:30 -==> Parameters: 0(Integer), 0(Integer), 469(String), applyRateFlag(String)
2020-03-15 13:47:30 -<==    Updates: 2
2020-03-15 13:47:30 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-15 13:47:30 -==> Parameters: 469(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 1
2020-03-15 13:47:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:47:30 -==> Parameters: recallFlag(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 2
2020-03-15 13:47:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:47:30 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-15 13:47:30 -<==    Updates: 2
2020-03-15 13:47:30 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-15 13:47:30 -==> Parameters: 
2020-03-15 13:47:30 -<==      Total: 1
2020-03-15 13:47:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:47:30 -==> Parameters: collegeFlag(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 2
2020-03-15 13:47:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:47:30 -==> Parameters: 15(Integer), 15(Integer), 469(String), collegeFlag(String)
2020-03-15 13:47:30 -<==    Updates: 2
2020-03-15 13:47:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-15 13:47:30 -==> Parameters: 469(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 1
2020-03-15 13:47:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:47:30 -==> Parameters: cardFlag(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 2
2020-03-15 13:47:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-15 13:47:30 -==> Parameters: 0(Integer), 0(Integer), 469(String), cardFlag(String)
2020-03-15 13:47:30 -<==    Updates: 2
2020-03-15 13:47:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-15 13:47:30 -==> Parameters: appImgFlag(String), 469(String)
2020-03-15 13:47:30 -<==      Total: 2
2020-03-15 13:47:30 -耗时 : 125
2020-03-15 17:10:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-15 17:10:48 -Shutting down ExecutorService 'taskScheduler'
2020-03-15 17:10:48 -Shutting down ExecutorService 'getAsyncExecutor'
2020-03-15 17:10:48 -Shutting down Quartz Scheduler
2020-03-15 17:10:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-03-15 17:10:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-15 17:10:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-03-15 17:10:48 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-03-15 17:10:48 -HikariPool-1 - Shutdown initiated...
2020-03-15 17:10:48 -HikariPool-1 - Shutdown completed.
