2020-03-28 09:51:29 -Starting LongEcologicalApplication on PC-201905161910 with PID 7692 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-28 09:51:29 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-28 09:51:29 -No active profile set, falling back to default profiles: default
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:29 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 09:51:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-28 09:51:30 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-28 09:51:30 -Finished Spring Data repository scanning in 81ms. Found 0 repository interfaces.
2020-03-28 09:51:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-28 09:51:30 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-28 09:51:30 -Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-03-28 09:51:30 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$95cf9d56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-28 09:51:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$905381f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-28 09:51:31 -Tomcat initialized with port(s): 8080 (http)
2020-03-28 09:51:31 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-28 09:51:31 -Starting service [Tomcat]
2020-03-28 09:51:31 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-28 09:51:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-28 09:51:31 -Initializing Spring embedded WebApplicationContext
2020-03-28 09:51:31 -Root WebApplicationContext: initialization completed in 2054 ms
2020-03-28 09:51:31 -Filter xssFilter was not registered (disabled)
2020-03-28 09:51:31 -HikariPool-1 - Starting...
2020-03-28 09:51:31 -HikariPool-1 - Start completed.
2020-03-28 09:51:31 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-28 09:51:31 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-28 09:51:31 -HHH000206: hibernate.properties not found
2020-03-28 09:51:32 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-28 09:51:32 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-28 09:51:32 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-28 09:51:33 -Using default implementation for ThreadExecutor
2020-03-28 09:51:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-28 09:51:33 -Quartz Scheduler v.2.3.0 created.
2020-03-28 09:51:33 -RAMJobStore initialized.
2020-03-28 09:51:33 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-28 09:51:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-28 09:51:33 -Quartz scheduler version: 2.3.0
2020-03-28 09:51:33 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@50f4b83d
2020-03-28 09:51:33 -STAET TaskExecutorConfig
2020-03-28 09:51:33 -Initializing ExecutorService
2020-03-28 09:51:33 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-28 09:51:33 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-28 09:51:33 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-28 09:51:34 -Initializing ExecutorService 'taskScheduler'
2020-03-28 09:51:34 -Starting Quartz Scheduler now
2020-03-28 09:51:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-28 09:51:34 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-28 09:51:34 -Using a shared selector for servlet write/read
2020-03-28 09:51:34 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-28 09:51:34 -Started LongEcologicalApplication in 5.929 seconds (JVM running for 6.932)
2020-03-28 10:15:08 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-28 10:15:08 -Initializing Servlet 'dispatcherServlet'
2020-03-28 10:15:09 -Completed initialization in 439 ms
2020-03-28 10:15:09 -此处进行解密+验签+身份验证
2020-03-28 10:15:09 -此处进行解密+验签+身份验证
2020-03-28 10:15:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:09 -Starting without optional epoll library
2020-03-28 10:15:09 -Starting without optional kqueue library
2020-03-28 10:15:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:15:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:15:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:15:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:15:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:10 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:15:10 -==> Parameters: 426(String)
2020-03-28 10:15:10 -<==      Total: 1
2020-03-28 10:15:10 -耗时 : 73
2020-03-28 10:15:10 -<==      Total: 1
2020-03-28 10:15:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:10 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:15:10 -<==      Total: 1
2020-03-28 10:15:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:10 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:15:10 -<==    Updates: 1
2020-03-28 10:15:10 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:15:10 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:11 -<==      Total: 1
2020-03-28 10:15:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:11 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:15:11 -<==      Total: 1
2020-03-28 10:15:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:15:11 -<==    Updates: 1
2020-03-28 10:15:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:15:11 -==> Parameters: 
2020-03-28 10:15:11 -<==      Total: 1
2020-03-28 10:15:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:11 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:15:11 -<==      Total: 1
2020-03-28 10:15:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:11 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:15:11 -<==    Updates: 1
2020-03-28 10:15:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:11 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:11 -<==      Total: 1
2020-03-28 10:15:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:11 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:15:11 -<==      Total: 1
2020-03-28 10:15:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:15:11 -<==    Updates: 1
2020-03-28 10:15:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:11 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:15:11 -<==      Total: 1
2020-03-28 10:15:11 -耗时 : 360
2020-03-28 10:15:16 -此处进行解密+验签+身份验证
2020-03-28 10:15:16 -此处进行解密+验签+身份验证
2020-03-28 10:15:16 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-28 10:15:16 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-28 10:15:16 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-28 10:15:16 -耗时 : 70
2020-03-28 10:15:16 -此处进行解密+验签+身份验证
2020-03-28 10:15:17 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"6994C37FADC9DE97FCDAA2A5DE7C5D5A","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP"}
2020-03-28 10:15:17 -解密：
2020-03-28 10:15:17 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 10:15:17 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-28 10:15:17 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 10:15:17 -==> Parameters: 04(String), 04(String)
2020-03-28 10:15:17 -token值=======426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP
2020-03-28 10:15:17 -<==      Total: 1
2020-03-28 10:15:17 -耗时 : 22
2020-03-28 10:15:17 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-28 10:15:17 -==> Parameters: 426(String)
2020-03-28 10:15:17 -<==      Total: 1
2020-03-28 10:15:17 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-28 10:15:17 -==> Parameters: 25(String)
2020-03-28 10:15:17 -<==      Total: 1
2020-03-28 10:15:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-28 10:15:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-28 10:15:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-28 10:15:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-28 10:15:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-28 10:15:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-28 10:15:17 -耗时 : 50
2020-03-28 10:15:20 -此处进行解密+验签+身份验证
2020-03-28 10:15:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:20 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:15:20 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:15:20 -==> Parameters: 426(String)
2020-03-28 10:15:20 -<==      Total: 1
2020-03-28 10:15:20 -耗时 : 2
2020-03-28 10:15:21 -此处进行解密+验签+身份验证
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:21 -此处进行解密+验签+身份验证
2020-03-28 10:15:21 -解密：
2020-03-28 10:15:21 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 10:15:21 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 10:15:21 -==> Parameters: 01(String), 01(String)
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:21 -<==      Total: 4
2020-03-28 10:15:21 -耗时 : 2
2020-03-28 10:15:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-28 10:15:21 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-28 10:15:21 -==> Parameters: 426(String)
2020-03-28 10:15:21 -此处进行解密+验签+身份验证
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:15:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:21 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:21 -此处进行解密+验签+身份验证
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:15:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:21 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -<==      Total: 2
2020-03-28 10:15:21 -耗时 : 80
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:15:21 -此处进行解密+验签+身份验证
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:15:21 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-28 10:15:21 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-28 10:15:21 -==> Parameters: 
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:15:21 -==> Parameters: 
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 3
2020-03-28 10:15:21 -耗时 : 11
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:15:21 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:15:21 -此处进行解密+验签+身份验证
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:15:21 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:15:21 -==> Parameters: 426(String)
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:21 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -耗时 : 2
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -耗时 : 90
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:15:21 -==> Parameters: 
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:21 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:21 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:15:21 -<==    Updates: 1
2020-03-28 10:15:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:21 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:15:21 -<==      Total: 1
2020-03-28 10:15:21 -耗时 : 112
2020-03-28 10:15:42 -此处进行解密+验签+身份验证
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:42 -此处进行解密+验签+身份验证
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:42 -此处进行解密+验签+身份验证
2020-03-28 10:15:42 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-28 10:15:42 -此处进行解密+验签+身份验证
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:42 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-28 10:15:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:43 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-28 10:15:43 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-28 10:15:43 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-28 10:15:43 -==> Parameters: 426(String)
2020-03-28 10:15:43 -<==      Total: 1
2020-03-28 10:15:43 -耗时 : 4
2020-03-28 10:15:43 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-28 10:15:43 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:15:43 -<==      Total: 1
2020-03-28 10:15:43 -耗时 : 14
2020-03-28 10:15:43 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 10:15:43 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-28 10:15:43 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:15:43 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:15:43 -<==      Total: 1
2020-03-28 10:15:43 -耗时 : 28
2020-03-28 10:15:43 -<==      Total: 1
2020-03-28 10:15:43 -耗时 : 31
2020-03-28 10:15:47 -此处进行解密+验签+身份验证
2020-03-28 10:15:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:47 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-03-28 10:15:47 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-28 10:15:47 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-28 10:15:47 -<==      Total: 10
2020-03-28 10:15:47 -耗时 : 140
2020-03-28 10:15:53 -此处进行解密+验签+身份验证
2020-03-28 10:15:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:53 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:15:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:15:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:15:53 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:53 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:53 -此处进行解密+验签+身份验证
2020-03-28 10:15:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:53 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:15:53 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:15:53 -==> Parameters: 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -耗时 : 6
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:53 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:53 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:15:53 -<==    Updates: 1
2020-03-28 10:15:53 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:15:53 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:53 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:53 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:15:53 -<==    Updates: 1
2020-03-28 10:15:53 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:15:53 -==> Parameters: 
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:53 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:53 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:15:53 -<==    Updates: 1
2020-03-28 10:15:53 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:15:53 -==> Parameters: 426(String), 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:53 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:15:53 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:15:53 -<==    Updates: 1
2020-03-28 10:15:53 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:15:53 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:15:53 -<==      Total: 1
2020-03-28 10:15:53 -耗时 : 121
2020-03-28 10:15:55 -此处进行解密+验签+身份验证
2020-03-28 10:15:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:15:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:15:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitTraditionalPosList
2020-03-28 10:15:55 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-03-28 10:15:55 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-28 10:15:55 -<==      Total: 10
2020-03-28 10:15:55 -耗时 : 19
2020-03-28 10:16:01 -此处进行解密+验签+身份验证
2020-03-28 10:16:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:01 -此处进行解密+验签+身份验证
2020-03-28 10:16:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:16:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:16:01 -==> Parameters: 426(String)
2020-03-28 10:16:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -耗时 : 2
2020-03-28 10:16:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:16:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:16:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:16:01 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:01 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:16:01 -<==    Updates: 1
2020-03-28 10:16:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:16:01 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:01 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:16:01 -<==    Updates: 1
2020-03-28 10:16:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:16:01 -==> Parameters: 
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:01 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:01 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:16:01 -<==    Updates: 1
2020-03-28 10:16:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:16:01 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:01 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:16:01 -<==    Updates: 1
2020-03-28 10:16:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:01 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:16:01 -<==      Total: 1
2020-03-28 10:16:01 -耗时 : 74
2020-03-28 10:16:05 -此处进行解密+验签+身份验证
2020-03-28 10:16:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:05 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitMposList
2020-03-28 10:16:05 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_share_benefit_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-28 10:16:05 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-28 10:16:05 -<==      Total: 10
2020-03-28 10:16:05 -耗时 : 13
2020-03-28 10:16:08 -此处进行解密+验签+身份验证
2020-03-28 10:16:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:08 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:16:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:16:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:16:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:16:08 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:08 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:16:08 -此处进行解密+验签+身份验证
2020-03-28 10:16:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:08 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:16:08 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:16:08 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:16:08 -==> Parameters: 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -耗时 : 1
2020-03-28 10:16:08 -<==    Updates: 1
2020-03-28 10:16:08 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:16:08 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:08 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:08 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:16:08 -<==    Updates: 1
2020-03-28 10:16:08 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:16:08 -==> Parameters: 
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:08 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:08 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:16:08 -<==    Updates: 1
2020-03-28 10:16:08 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:16:08 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:08 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:08 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:16:08 -<==    Updates: 1
2020-03-28 10:16:08 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:08 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:16:08 -<==      Total: 1
2020-03-28 10:16:08 -耗时 : 69
2020-03-28 10:16:10 -此处进行解密+验签+身份验证
2020-03-28 10:16:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:10 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-03-28 10:16:10 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-28 10:16:10 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-28 10:16:11 -<==      Total: 2
2020-03-28 10:16:11 -耗时 : 22
2020-03-28 10:16:13 -此处进行解密+验签+身份验证
2020-03-28 10:16:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:13 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-03-28 10:16:13 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? AND id < ? ORDER BY id desc limit 0,10 
2020-03-28 10:16:13 -==> Parameters: 426(String), 20200301(String), 20200331(String), 3005(String)
2020-03-28 10:16:13 -<==      Total: 0
2020-03-28 10:16:13 -耗时 : 9
2020-03-28 10:16:16 -此处进行解密+验签+身份验证
2020-03-28 10:16:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:16 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-03-28 10:16:16 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-28 10:16:16 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-28 10:16:16 -<==      Total: 2
2020-03-28 10:16:16 -耗时 : 3
2020-03-28 10:16:20 -此处进行解密+验签+身份验证
2020-03-28 10:16:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:20 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:16:20 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:16:20 -==> Parameters: 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -耗时 : 1
2020-03-28 10:16:20 -此处进行解密+验签+身份验证
2020-03-28 10:16:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:20 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:16:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:16:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:16:20 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:16:20 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:20 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:20 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:16:20 -<==    Updates: 1
2020-03-28 10:16:20 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:16:20 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:20 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:20 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:16:20 -<==    Updates: 1
2020-03-28 10:16:20 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:16:20 -==> Parameters: 
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:20 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:20 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:16:20 -<==    Updates: 1
2020-03-28 10:16:20 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:16:20 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:20 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:16:20 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:16:20 -<==    Updates: 1
2020-03-28 10:16:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:16:20 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:16:20 -<==      Total: 1
2020-03-28 10:16:20 -耗时 : 61
2020-03-28 10:16:28 -此处进行解密+验签+身份验证
2020-03-28 10:16:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:28 -此处进行解密+验签+身份验证
2020-03-28 10:16:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:28 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-28 10:16:28 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-28 10:16:28 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-28 10:16:28 -==> Parameters: 426(String)
2020-03-28 10:16:28 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-28 10:16:28 -==> Parameters: 202003(String), 426(String)
2020-03-28 10:16:28 -<==      Total: 1
2020-03-28 10:16:28 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-28 10:16:28 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:28 -<==      Total: 1
2020-03-28 10:16:28 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-28 10:16:28 -==> Parameters: 426(String)
2020-03-28 10:16:28 -<==      Total: 0
2020-03-28 10:16:28 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-28 10:16:28 -==> Parameters: 202003(String), 426(String)
2020-03-28 10:16:28 -<==      Total: 1
2020-03-28 10:16:28 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-28 10:16:28 -==> Parameters: 426(String)
2020-03-28 10:16:28 -<==      Total: 0
2020-03-28 10:16:28 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-28 10:16:28 -==> Parameters: 202003(String), 426(String)
2020-03-28 10:16:28 -<==      Total: 1
2020-03-28 10:16:28 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-28 10:16:28 -==> Parameters: 426(String)
2020-03-28 10:16:28 -<==      Total: 0
2020-03-28 10:16:28 -耗时 : 95
2020-03-28 10:16:29 -<==      Total: 1
2020-03-28 10:16:29 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-28 10:16:29 -==> Parameters: 426(String), 426(String)
2020-03-28 10:16:29 -<==      Total: 1
2020-03-28 10:16:29 -耗时 : 1362
2020-03-28 10:16:53 -此处进行解密+验签+身份验证
2020-03-28 10:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:16:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:16:53 -请求地址 : http://192.168.191.1:8080/api/user/feedBack/getUserFeedBackList
2020-03-28 10:16:53 -==>  Preparing: SELECT id, user_id, feedback_title, feedback_content, feedback_img, feedback_answer, contact_way, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_time, DATE_FORMAT( STR_TO_DATE( CONCAT(up_date, up_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS up_time FROM t_user_feedback WHERE user_id=? order by id desc LIMIT 0,? 
2020-03-28 10:16:53 -==> Parameters: 426(String), 10(Integer)
2020-03-28 10:16:53 -<==      Total: 0
2020-03-28 10:16:53 -耗时 : 15
2020-03-28 10:38:31 -此处进行解密+验签+身份验证
2020-03-28 10:38:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:38:31 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:38:31 -==> Parameters: 426(String)
2020-03-28 10:38:31 -此处进行解密+验签+身份验证
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -耗时 : 11
2020-03-28 10:38:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:38:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:38:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:38:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:31 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:31 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:38:31 -<==    Updates: 1
2020-03-28 10:38:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:38:31 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:31 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:38:31 -<==    Updates: 1
2020-03-28 10:38:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:38:31 -==> Parameters: 
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:31 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:31 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:38:31 -<==    Updates: 1
2020-03-28 10:38:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:31 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:31 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:38:31 -<==    Updates: 1
2020-03-28 10:38:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:31 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:38:31 -<==      Total: 1
2020-03-28 10:38:31 -耗时 : 110
2020-03-28 10:38:33 -此处进行解密+验签+身份验证
2020-03-28 10:38:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:38:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:38:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:38:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:33 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:33 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:38:33 -<==    Updates: 1
2020-03-28 10:38:33 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:38:33 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:33 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:38:33 -<==    Updates: 1
2020-03-28 10:38:33 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:38:33 -==> Parameters: 
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:33 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:33 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:38:33 -<==    Updates: 1
2020-03-28 10:38:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:33 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:33 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:38:33 -<==    Updates: 1
2020-03-28 10:38:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:33 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:38:33 -<==      Total: 1
2020-03-28 10:38:33 -耗时 : 59
2020-03-28 10:38:36 -此处进行解密+验签+身份验证
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:36 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-03-28 10:38:36 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 10:38:36 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:38:36 -<==      Total: 1
2020-03-28 10:38:36 -耗时 : 11
2020-03-28 10:38:36 -此处进行解密+验签+身份验证
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:36 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-03-28 10:38:36 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-28 10:38:36 -==> Parameters: 426(String), 20200328(String)
2020-03-28 10:38:36 -<==      Total: 0
2020-03-28 10:38:36 -耗时 : 6
2020-03-28 10:38:36 -此处进行解密+验签+身份验证
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:36 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-03-28 10:38:36 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 10:38:36 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:38:36 -<==      Total: 1
2020-03-28 10:38:36 -耗时 : 3
2020-03-28 10:38:36 -此处进行解密+验签+身份验证
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:36 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-03-28 10:38:36 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-28 10:38:36 -==> Parameters: 426(String), 20200328(String)
2020-03-28 10:38:36 -<==      Total: 0
2020-03-28 10:38:36 -耗时 : 2
2020-03-28 10:38:38 -此处进行解密+验签+身份验证
2020-03-28 10:38:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:38 -此处进行解密+验签+身份验证
2020-03-28 10:38:38 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:38:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:38:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:38:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:38 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:38:38 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:38 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:38:38 -==> Parameters: 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:38 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:38 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:38:38 -<==    Updates: 1
2020-03-28 10:38:38 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:38:38 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:38 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:38 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -耗时 : 38
2020-03-28 10:38:38 -<==    Updates: 1
2020-03-28 10:38:38 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:38:38 -==> Parameters: 
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:38 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:38 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:38:38 -<==    Updates: 1
2020-03-28 10:38:38 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:38 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:38 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:38 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:38:38 -<==    Updates: 1
2020-03-28 10:38:38 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:38 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:38:38 -<==      Total: 1
2020-03-28 10:38:38 -耗时 : 71
2020-03-28 10:38:40 -此处进行解密+验签+身份验证
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:40 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyMposDetail
2020-03-28 10:38:40 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-28 10:38:40 -==> Parameters: 426(String), 20200328(String)
2020-03-28 10:38:40 -<==      Total: 0
2020-03-28 10:38:40 -耗时 : 9
2020-03-28 10:38:40 -此处进行解密+验签+身份验证
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:40 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyMposDetail
2020-03-28 10:38:40 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-28 10:38:40 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:38:40 -<==      Total: 1
2020-03-28 10:38:40 -耗时 : 5
2020-03-28 10:38:40 -此处进行解密+验签+身份验证
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:40 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantMposDetail
2020-03-28 10:38:40 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-28 10:38:40 -==> Parameters: 426(String), 20200328(String)
2020-03-28 10:38:40 -<==      Total: 0
2020-03-28 10:38:40 -耗时 : 2
2020-03-28 10:38:40 -此处进行解密+验签+身份验证
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:40 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantMposDetail
2020-03-28 10:38:40 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_mpos_benefit_month where user_id = ? and cre_month = ? 
2020-03-28 10:38:40 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:38:40 -<==      Total: 1
2020-03-28 10:38:40 -耗时 : 3
2020-03-28 10:38:42 -此处进行解密+验签+身份验证
2020-03-28 10:38:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:42 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:38:42 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:38:42 -==> Parameters: 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -耗时 : 1
2020-03-28 10:38:42 -此处进行解密+验签+身份验证
2020-03-28 10:38:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:38:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:38:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:38:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:42 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:42 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:38:42 -<==    Updates: 1
2020-03-28 10:38:42 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:38:42 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:42 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:38:42 -<==    Updates: 1
2020-03-28 10:38:42 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:38:42 -==> Parameters: 
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:42 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:42 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:38:42 -<==    Updates: 1
2020-03-28 10:38:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:42 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:42 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:38:42 -<==    Updates: 1
2020-03-28 10:38:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:42 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:38:42 -<==      Total: 1
2020-03-28 10:38:42 -耗时 : 62
2020-03-28 10:38:51 -此处进行解密+验签+身份验证
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:51 -此处进行解密+验签+身份验证
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:51 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-03-28 10:38:51 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-03-28 10:38:51 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-28 10:38:51 -==> Parameters: 426(String), 20200328(String)
2020-03-28 10:38:51 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 10:38:51 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:38:51 -<==      Total: 0
2020-03-28 10:38:51 -耗时 : 2
2020-03-28 10:38:51 -<==      Total: 1
2020-03-28 10:38:51 -耗时 : 9
2020-03-28 10:38:51 -此处进行解密+验签+身份验证
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:51 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-03-28 10:38:51 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-28 10:38:51 -==> Parameters: 426(String), 20200328(String)
2020-03-28 10:38:51 -<==      Total: 0
2020-03-28 10:38:51 -耗时 : 5
2020-03-28 10:38:51 -此处进行解密+验签+身份验证
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:51 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-03-28 10:38:51 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 10:38:51 -==> Parameters: 426(String), 202003(String)
2020-03-28 10:38:51 -<==      Total: 1
2020-03-28 10:38:51 -耗时 : 2
2020-03-28 10:38:52 -此处进行解密+验签+身份验证
2020-03-28 10:38:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 10:38:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 10:38:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 10:38:52 -此处进行解密+验签+身份验证
2020-03-28 10:38:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 10:38:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:52 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 10:38:52 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 10:38:52 -==> Parameters: 426(String)
2020-03-28 10:38:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:52 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -耗时 : 1
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 10:38:52 -<==    Updates: 1
2020-03-28 10:38:52 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 10:38:52 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:52 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 10:38:52 -<==    Updates: 1
2020-03-28 10:38:52 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 10:38:52 -==> Parameters: 
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:52 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:52 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 10:38:52 -<==    Updates: 1
2020-03-28 10:38:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 10:38:52 -==> Parameters: 426(String), 426(String)
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:52 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 10:38:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 10:38:52 -<==    Updates: 1
2020-03-28 10:38:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 10:38:52 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 10:38:52 -<==      Total: 1
2020-03-28 10:38:52 -耗时 : 58
2020-03-28 11:54:47 -此处进行解密+验签+身份验证
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-03-28 11:54:47 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-28 11:54:47 -==> Parameters: 426(String), 20200328(String)
2020-03-28 11:54:47 -<==      Total: 0
2020-03-28 11:54:47 -耗时 : 16
2020-03-28 11:54:47 -此处进行解密+验签+身份验证
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-03-28 11:54:47 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 11:54:47 -==> Parameters: 426(String), 202003(String)
2020-03-28 11:54:47 -<==      Total: 1
2020-03-28 11:54:47 -耗时 : 9
2020-03-28 11:54:47 -此处进行解密+验签+身份验证
2020-03-28 11:54:47 -此处进行解密+验签+身份验证
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-03-28 11:54:47 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? and pos_type is null 
2020-03-28 11:54:47 -==> Parameters: 426(String), 20200328(String)
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:54:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:54:47 -<==      Total: 0
2020-03-28 11:54:47 -耗时 : 2
2020-03-28 11:54:47 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-03-28 11:54:47 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 11:54:47 -==> Parameters: 426(String), 202003(String)
2020-03-28 11:54:47 -<==      Total: 1
2020-03-28 11:54:47 -耗时 : 2
2020-03-28 11:54:54 -此处进行解密+验签+身份验证
2020-03-28 11:54:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:54:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:54:54 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosList
2020-03-28 11:54:54 -==>  Preparing: SELECT t1.date, cast(IFNULL(t2.merchant_performance,0.00) as char) as performance, cast(IFNULL(t2.merchant_act_num,0) as char) as act_num, cast(IFNULL(t2.refer_num,0) as char) as user_num from ( SELECT @num :=@num - 1, date_format( adddate(str_to_date(?,'%Y%m%d'), INTERVAL @num MONTH), '%Y%m' ) AS date FROM t_sys_assist_query, (SELECT @num := 1) t) t1 left join t_summary_user_traditional_pos_benefit_month t2 on t1.date = t2.cre_month and t2.user_id = ? and t2.pos_type is null order by t1.date 
2020-03-28 11:54:54 -==> Parameters: 20200301(String), 426(String)
2020-03-28 11:54:54 -<==      Total: 7
2020-03-28 11:54:54 -耗时 : 16
2020-03-28 11:55:04 -此处进行解密+验签+身份验证
2020-03-28 11:55:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:04 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosList
2020-03-28 11:55:04 -==>  Preparing: SELECT t1.date, cast(IFNULL(t2.agency_performance,0.00) as char) as performance, cast(IFNULL(t2.agency_act_num,0) as char) as act_num, cast(IFNULL((t2.under_num - t2.refer_num),0) as char) as user_num from ( SELECT @num :=@num - 1, date_format( adddate(str_to_date(?,'%Y%m%d'), INTERVAL @num MONTH), '%Y%m' ) AS date FROM t_sys_assist_query, (SELECT @num := 1) t) t1 left join t_summary_user_traditional_pos_benefit_month t2 on t1.date = t2.cre_month and t2.user_id = ? and t2.pos_type is null order by t1.date 
2020-03-28 11:55:04 -==> Parameters: 20200301(String), 426(String)
2020-03-28 11:55:04 -<==      Total: 7
2020-03-28 11:55:04 -耗时 : 2
2020-03-28 11:55:17 -此处进行解密+验签+身份验证
2020-03-28 11:55:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 11:55:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 11:55:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 11:55:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 11:55:17 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:17 -此处进行解密+验签+身份验证
2020-03-28 11:55:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:17 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 11:55:17 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 11:55:17 -==> Parameters: 426(String)
2020-03-28 11:55:17 -<==      Total: 1
2020-03-28 11:55:17 -耗时 : 7
2020-03-28 11:55:17 -<==      Total: 1
2020-03-28 11:55:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:17 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 11:55:17 -<==      Total: 1
2020-03-28 11:55:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:17 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 11:55:17 -<==    Updates: 1
2020-03-28 11:55:17 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 11:55:17 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:17 -<==      Total: 1
2020-03-28 11:55:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:17 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 11:55:17 -<==      Total: 1
2020-03-28 11:55:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:17 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 11:55:17 -<==    Updates: 1
2020-03-28 11:55:17 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 11:55:17 -==> Parameters: 
2020-03-28 11:55:17 -<==      Total: 1
2020-03-28 11:55:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:17 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 11:55:17 -<==      Total: 1
2020-03-28 11:55:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:17 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 11:55:18 -<==    Updates: 1
2020-03-28 11:55:18 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 11:55:18 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:18 -<==      Total: 1
2020-03-28 11:55:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:18 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 11:55:18 -<==      Total: 1
2020-03-28 11:55:18 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:18 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 11:55:18 -<==    Updates: 1
2020-03-28 11:55:18 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:18 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 11:55:18 -<==      Total: 1
2020-03-28 11:55:18 -耗时 : 134
2020-03-28 11:55:30 -此处进行解密+验签+身份验证
2020-03-28 11:55:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:30 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 11:55:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 11:55:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 11:55:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 11:55:30 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:30 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:30 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 11:55:30 -<==    Updates: 1
2020-03-28 11:55:30 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 11:55:30 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:30 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:30 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 11:55:30 -<==    Updates: 1
2020-03-28 11:55:30 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 11:55:30 -==> Parameters: 
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:30 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:30 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 11:55:30 -<==    Updates: 1
2020-03-28 11:55:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 11:55:30 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:30 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:30 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 11:55:30 -<==    Updates: 1
2020-03-28 11:55:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:30 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 11:55:30 -<==      Total: 1
2020-03-28 11:55:30 -耗时 : 65
2020-03-28 11:55:36 -此处进行解密+验签+身份验证
2020-03-28 11:55:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:36 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 11:55:36 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 11:55:36 -==> Parameters: 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -耗时 : 4
2020-03-28 11:55:36 -此处进行解密+验签+身份验证
2020-03-28 11:55:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:36 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 11:55:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 11:55:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 11:55:36 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 11:55:36 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:36 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:36 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 11:55:36 -<==    Updates: 1
2020-03-28 11:55:36 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 11:55:36 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:36 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:36 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 11:55:36 -<==    Updates: 1
2020-03-28 11:55:36 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 11:55:36 -==> Parameters: 
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:36 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:36 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 11:55:36 -<==    Updates: 1
2020-03-28 11:55:36 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 11:55:36 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:36 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 11:55:36 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 11:55:36 -<==    Updates: 1
2020-03-28 11:55:36 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 11:55:36 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 11:55:36 -<==      Total: 1
2020-03-28 11:55:36 -耗时 : 76
2020-03-28 11:55:43 -此处进行解密+验签+身份验证
2020-03-28 11:55:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:43 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-28 11:55:43 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-28 11:55:43 -==> Parameters: 426(String)
2020-03-28 11:55:43 -<==      Total: 1
2020-03-28 11:55:43 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-28 11:55:43 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:44 -<==      Total: 1
2020-03-28 11:55:44 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-28 11:55:44 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:44 -<==      Total: 1
2020-03-28 11:55:44 -耗时 : 1419
2020-03-28 11:55:46 -此处进行解密+验签+身份验证
2020-03-28 11:55:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:55:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:55:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-28 11:55:46 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-28 11:55:46 -==> Parameters: 426(String)
2020-03-28 11:55:47 -<==      Total: 1
2020-03-28 11:55:47 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-28 11:55:47 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:48 -<==      Total: 1
2020-03-28 11:55:48 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-28 11:55:48 -==> Parameters: 426(String), 426(String)
2020-03-28 11:55:48 -<==      Total: 1
2020-03-28 11:55:48 -耗时 : 1395
2020-03-28 11:56:01 -此处进行解密+验签+身份验证
2020-03-28 11:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 11:56:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 11:56:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-28 11:56:01 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-28 11:56:01 -==> Parameters: 426(String)
2020-03-28 11:56:01 -<==      Total: 1
2020-03-28 11:56:01 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-28 11:56:01 -==> Parameters: 426(String), 426(String)
2020-03-28 11:56:03 -<==      Total: 1
2020-03-28 11:56:03 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-28 11:56:03 -==> Parameters: 426(String), 426(String)
2020-03-28 11:56:03 -<==      Total: 1
2020-03-28 11:56:03 -耗时 : 1794
2020-03-28 15:32:30 -Starting LongEcologicalApplication on PC-201905161910 with PID 9112 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-28 15:32:30 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-28 15:32:30 -No active profile set, falling back to default profiles: default
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-28 15:32:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-28 15:32:31 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-28 15:32:31 -Finished Spring Data repository scanning in 121ms. Found 0 repository interfaces.
2020-03-28 15:32:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-28 15:32:31 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-28 15:32:32 -Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-03-28 15:32:32 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$cb99e898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-28 15:32:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c61dcd38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-28 15:32:33 -Tomcat initialized with port(s): 8080 (http)
2020-03-28 15:32:33 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-28 15:32:33 -Starting service [Tomcat]
2020-03-28 15:32:33 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-28 15:32:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-28 15:32:33 -Initializing Spring embedded WebApplicationContext
2020-03-28 15:32:33 -Root WebApplicationContext: initialization completed in 3041 ms
2020-03-28 15:32:33 -Filter xssFilter was not registered (disabled)
2020-03-28 15:32:34 -HikariPool-1 - Starting...
2020-03-28 15:32:34 -HikariPool-1 - Start completed.
2020-03-28 15:32:34 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-28 15:32:34 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-28 15:32:34 -HHH000206: hibernate.properties not found
2020-03-28 15:32:34 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-28 15:32:34 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-28 15:32:35 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-28 15:32:35 -Using default implementation for ThreadExecutor
2020-03-28 15:32:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-28 15:32:35 -Quartz Scheduler v.2.3.0 created.
2020-03-28 15:32:35 -RAMJobStore initialized.
2020-03-28 15:32:35 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-28 15:32:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-28 15:32:35 -Quartz scheduler version: 2.3.0
2020-03-28 15:32:35 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6b16de91
2020-03-28 15:32:36 -STAET TaskExecutorConfig
2020-03-28 15:32:36 -Initializing ExecutorService
2020-03-28 15:32:36 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-28 15:32:36 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-28 15:32:36 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-28 15:32:37 -Initializing ExecutorService 'taskScheduler'
2020-03-28 15:32:37 -Starting Quartz Scheduler now
2020-03-28 15:32:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-28 15:32:37 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-28 15:32:37 -Using a shared selector for servlet write/read
2020-03-28 15:32:37 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-28 15:32:37 -Started LongEcologicalApplication in 7.79 seconds (JVM running for 9.28)
2020-03-28 15:44:39 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-28 15:44:39 -Initializing Servlet 'dispatcherServlet'
2020-03-28 15:44:39 -Completed initialization in 9 ms
2020-03-28 15:44:39 -此处进行解密+验签+身份验证
2020-03-28 15:44:39 -此处进行解密+验签+身份验证
2020-03-28 15:44:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:44:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:44:39 -Starting without optional epoll library
2020-03-28 15:44:39 -Starting without optional kqueue library
2020-03-28 15:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:44:40 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 15:44:40 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 15:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 15:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 15:44:40 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 15:44:40 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:44:40 -==> Parameters: 426(String)
2020-03-28 15:44:40 -==> Parameters: 426(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -耗时 : 45
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:40 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:40 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 15:44:40 -<==    Updates: 1
2020-03-28 15:44:40 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 15:44:40 -==> Parameters: 426(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:40 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:40 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 15:44:40 -<==    Updates: 1
2020-03-28 15:44:40 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 15:44:40 -==> Parameters: 
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:40 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:40 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 15:44:40 -<==    Updates: 1
2020-03-28 15:44:40 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:44:40 -==> Parameters: 426(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:40 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:40 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 15:44:40 -<==    Updates: 1
2020-03-28 15:44:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:40 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 15:44:40 -<==      Total: 1
2020-03-28 15:44:40 -耗时 : 175
2020-03-28 15:44:40 -此处进行解密+验签+身份验证
2020-03-28 15:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:44:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:44:41 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 15:44:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 15:44:41 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:44:41 -==> Parameters: 426(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:41 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:41 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 15:44:41 -<==    Updates: 1
2020-03-28 15:44:41 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 15:44:41 -==> Parameters: 426(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:41 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:41 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 15:44:41 -<==    Updates: 1
2020-03-28 15:44:41 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 15:44:41 -==> Parameters: 
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:41 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:41 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 15:44:41 -<==    Updates: 1
2020-03-28 15:44:41 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:44:41 -==> Parameters: 426(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:41 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:44:41 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 15:44:41 -<==    Updates: 1
2020-03-28 15:44:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:44:41 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 15:44:41 -<==      Total: 1
2020-03-28 15:44:41 -耗时 : 142
2020-03-28 15:44:42 -此处进行解密+验签+身份验证
2020-03-28 15:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:44:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:44:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-28 15:44:42 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-28 15:44:42 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-03-28 15:44:42 -此处进行解密+验签+身份验证
2020-03-28 15:44:42 -<==    Updates: 1
2020-03-28 15:44:42 -耗时 : 77
2020-03-28 15:44:42 -此处进行解密+验签+身份验证
2020-03-28 15:44:42 -解密：
2020-03-28 15:44:42 -解密：
2020-03-28 15:44:42 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:42 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:42 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:42 -==> Parameters: 02(String), 02(String)
2020-03-28 15:44:42 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:42 -==> Parameters: 03(String), 03(String)
2020-03-28 15:44:42 -<==      Total: 7
2020-03-28 15:44:42 -耗时 : 10
2020-03-28 15:44:42 -<==      Total: 3
2020-03-28 15:44:42 -耗时 : 13
2020-03-28 15:44:45 -此处进行解密+验签+身份验证
2020-03-28 15:44:45 -解密：
2020-03-28 15:44:45 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:45 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:45 -==> Parameters: 02(String), 02(String)
2020-03-28 15:44:45 -<==      Total: 7
2020-03-28 15:44:45 -耗时 : 6
2020-03-28 15:44:46 -此处进行解密+验签+身份验证
2020-03-28 15:44:46 -解密：
2020-03-28 15:44:46 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:46 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:46 -==> Parameters: 02(String), 02(String)
2020-03-28 15:44:46 -<==      Total: 7
2020-03-28 15:44:46 -耗时 : 3
2020-03-28 15:44:48 -此处进行解密+验签+身份验证
2020-03-28 15:44:48 -解密：
2020-03-28 15:44:48 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:48 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:48 -==> Parameters: 02(String), 02(String)
2020-03-28 15:44:48 -<==      Total: 7
2020-03-28 15:44:48 -耗时 : 3
2020-03-28 15:44:52 -此处进行解密+验签+身份验证
2020-03-28 15:44:52 -解密：
2020-03-28 15:44:52 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:52 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:52 -==> Parameters: 02(String), 02(String)
2020-03-28 15:44:52 -<==      Total: 7
2020-03-28 15:44:52 -耗时 : 3
2020-03-28 15:44:54 -此处进行解密+验签+身份验证
2020-03-28 15:44:54 -解密：
2020-03-28 15:44:54 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:54 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:54 -==> Parameters: 04(String), 04(String)
2020-03-28 15:44:54 -<==      Total: 1
2020-03-28 15:44:54 -耗时 : 2
2020-03-28 15:44:55 -此处进行解密+验签+身份验证
2020-03-28 15:44:55 -解密：
2020-03-28 15:44:55 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:44:55 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:44:55 -==> Parameters: 03(String), 03(String)
2020-03-28 15:44:55 -<==      Total: 3
2020-03-28 15:44:55 -耗时 : 1
2020-03-28 15:48:20 -此处进行解密+验签+身份验证
2020-03-28 15:48:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:48:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:48:20 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 15:48:20 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 15:48:20 -==> Parameters: 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -耗时 : 25
2020-03-28 15:48:20 -此处进行解密+验签+身份验证
2020-03-28 15:48:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:48:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:48:20 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 15:48:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 15:48:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 15:48:20 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:48:20 -==> Parameters: 426(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:20 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:20 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 15:48:20 -<==    Updates: 1
2020-03-28 15:48:20 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 15:48:20 -==> Parameters: 426(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:20 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:20 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 15:48:20 -<==    Updates: 1
2020-03-28 15:48:20 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 15:48:20 -==> Parameters: 
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:20 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:20 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 15:48:20 -<==    Updates: 1
2020-03-28 15:48:20 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:48:20 -==> Parameters: 426(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:20 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:20 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 15:48:20 -<==    Updates: 1
2020-03-28 15:48:20 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:20 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 15:48:20 -<==      Total: 1
2020-03-28 15:48:20 -耗时 : 80
2020-03-28 15:48:27 -此处进行解密+验签+身份验证
2020-03-28 15:48:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:48:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:48:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-28 15:48:27 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-28 15:48:27 -==> Parameters: 1(String), 426(String), appImgFlag(String)
2020-03-28 15:48:27 -<==    Updates: 1
2020-03-28 15:48:27 -耗时 : 13
2020-03-28 15:48:28 -此处进行解密+验签+身份验证
2020-03-28 15:48:28 -解密：
2020-03-28 15:48:28 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:48:28 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:48:28 -==> Parameters: 02(String), 02(String)
2020-03-28 15:48:28 -<==      Total: 7
2020-03-28 15:48:28 -耗时 : 47
2020-03-28 15:48:28 -此处进行解密+验签+身份验证
2020-03-28 15:48:28 -解密：
2020-03-28 15:48:28 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 15:48:28 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 15:48:28 -==> Parameters: 03(String), 03(String)
2020-03-28 15:48:28 -<==      Total: 3
2020-03-28 15:48:28 -耗时 : 2
2020-03-28 15:48:35 -此处进行解密+验签+身份验证
2020-03-28 15:48:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:48:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:48:35 -此处进行解密+验签+身份验证
2020-03-28 15:48:35 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 15:48:35 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 15:48:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 15:48:35 -==> Parameters: 426(String)
2020-03-28 15:48:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -耗时 : 2
2020-03-28 15:48:35 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 15:48:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 15:48:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 15:48:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:48:35 -==> Parameters: 426(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:35 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:35 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 15:48:35 -<==    Updates: 1
2020-03-28 15:48:35 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 15:48:35 -==> Parameters: 426(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:35 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:35 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 15:48:35 -<==    Updates: 1
2020-03-28 15:48:35 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 15:48:35 -==> Parameters: 
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:35 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:35 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 15:48:35 -<==    Updates: 1
2020-03-28 15:48:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 15:48:35 -==> Parameters: 426(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:35 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 15:48:35 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 15:48:35 -<==    Updates: 1
2020-03-28 15:48:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 15:48:35 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 15:48:35 -<==      Total: 1
2020-03-28 15:48:35 -耗时 : 60
2020-03-28 16:19:19 -此处进行解密+验签+身份验证
2020-03-28 16:19:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 16:19:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 16:19:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNoticeDetail
2020-03-28 16:19:19 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, t.notice_content, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.id=? 
2020-03-28 16:19:19 -==> Parameters: 11(String)
2020-03-28 16:19:19 -<==      Total: 1
2020-03-28 16:19:19 -耗时 : 11
2020-03-28 16:19:46 -此处进行解密+验签+身份验证
2020-03-28 16:19:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 16:19:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 16:19:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 16:19:46 -此处进行解密+验签+身份验证
2020-03-28 16:19:46 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 16:19:46 -==> Parameters: 426(String)
2020-03-28 16:19:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 16:19:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 16:19:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 16:19:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 16:19:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 16:19:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 16:19:46 -==> Parameters: 426(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -耗时 : 17
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 16:19:46 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 16:19:46 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 16:19:46 -<==    Updates: 1
2020-03-28 16:19:46 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 16:19:46 -==> Parameters: 426(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 16:19:46 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 16:19:46 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 16:19:46 -<==    Updates: 1
2020-03-28 16:19:46 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 16:19:46 -==> Parameters: 
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 16:19:46 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 16:19:46 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 16:19:46 -<==    Updates: 1
2020-03-28 16:19:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 16:19:46 -==> Parameters: 426(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 16:19:46 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 16:19:46 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 16:19:46 -<==    Updates: 1
2020-03-28 16:19:46 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 16:19:46 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 16:19:46 -<==      Total: 1
2020-03-28 16:19:46 -耗时 : 115
2020-03-28 17:31:28 -此处进行解密+验签+身份验证
2020-03-28 17:31:28 -解密：
2020-03-28 17:31:28 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 17:31:28 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 17:31:28 -==> Parameters: 04(String), 04(String)
2020-03-28 17:31:28 -此处进行解密+验签+身份验证
2020-03-28 17:31:28 -<==      Total: 1
2020-03-28 17:31:28 -耗时 : 19
2020-03-28 17:31:28 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-28 17:31:28 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-28 17:31:28 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-28 17:31:28 -耗时 : 43
2020-03-28 17:31:29 -此处进行解密+验签+身份验证
2020-03-28 17:31:29 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"6994C37FADC9DE97FCDAA2A5DE7C5D5A","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP"}
2020-03-28 17:31:29 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-28 17:31:29 -token值=======426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP
2020-03-28 17:31:29 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-28 17:31:29 -==> Parameters: 426(String)
2020-03-28 17:31:29 -<==      Total: 1
2020-03-28 17:31:29 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-28 17:31:29 -==> Parameters: 25(String)
2020-03-28 17:31:29 -<==      Total: 1
2020-03-28 17:31:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-28 17:31:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-28 17:31:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-28 17:31:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-28 17:31:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-28 17:31:29 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-28 17:31:29 -耗时 : 60
2020-03-28 17:31:33 -此处进行解密+验签+身份验证
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 17:31:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 17:31:33 -==> Parameters: 426(String)
2020-03-28 17:31:33 -<==      Total: 1
2020-03-28 17:31:33 -耗时 : 3
2020-03-28 17:31:33 -此处进行解密+验签+身份验证
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:33 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-28 17:31:33 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-28 17:31:33 -==> Parameters: 
2020-03-28 17:31:33 -此处进行解密+验签+身份验证
2020-03-28 17:31:33 -解密：
2020-03-28 17:31:33 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 17:31:33 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 17:31:33 -==> Parameters: 01(String), 01(String)
2020-03-28 17:31:33 -<==      Total: 4
2020-03-28 17:31:33 -耗时 : 5
2020-03-28 17:31:33 -<==      Total: 3
2020-03-28 17:31:33 -耗时 : 14
2020-03-28 17:31:33 -此处进行解密+验签+身份验证
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-28 17:31:33 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-28 17:31:33 -==> Parameters: 426(String)
2020-03-28 17:31:33 -<==      Total: 2
2020-03-28 17:31:33 -耗时 : 9
2020-03-28 17:31:33 -此处进行解密+验签+身份验证
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 17:31:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:33 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:33 -<==      Total: 1
2020-03-28 17:31:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:33 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 17:31:33 -此处进行解密+验签+身份验证
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 17:31:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 17:31:33 -==> Parameters: 426(String)
2020-03-28 17:31:33 -<==      Total: 1
2020-03-28 17:31:33 -耗时 : 3
2020-03-28 17:31:33 -此处进行解密+验签+身份验证
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 17:31:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 17:31:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:33 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:33 -<==      Total: 1
2020-03-28 17:31:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:33 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 17:31:33 -<==      Total: 1
2020-03-28 17:31:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 17:31:33 -<==      Total: 1
2020-03-28 17:31:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 17:31:34 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 17:31:34 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 17:31:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:34 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:34 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 17:31:34 -==> Parameters: 
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 17:31:34 -==> Parameters: 
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:34 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:34 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:34 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:34 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:34 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 17:31:34 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -耗时 : 160
2020-03-28 17:31:34 -<==    Updates: 1
2020-03-28 17:31:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:34 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 17:31:34 -<==      Total: 1
2020-03-28 17:31:34 -耗时 : 93
2020-03-28 17:31:47 -此处进行解密+验签+身份验证
2020-03-28 17:31:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:47 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 17:31:47 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 17:31:47 -==> Parameters: 426(String)
2020-03-28 17:31:47 -<==      Total: 1
2020-03-28 17:31:47 -耗时 : 4
2020-03-28 17:31:48 -此处进行解密+验签+身份验证
2020-03-28 17:31:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 17:31:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 17:31:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 17:31:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:48 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:48 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 17:31:48 -<==    Updates: 1
2020-03-28 17:31:48 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 17:31:48 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:48 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 17:31:48 -<==    Updates: 1
2020-03-28 17:31:48 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 17:31:48 -==> Parameters: 
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:48 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:48 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 17:31:48 -<==    Updates: 1
2020-03-28 17:31:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:48 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:48 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 17:31:48 -<==    Updates: 1
2020-03-28 17:31:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:48 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 17:31:48 -<==      Total: 1
2020-03-28 17:31:48 -耗时 : 135
2020-03-28 17:31:53 -此处进行解密+验签+身份验证
2020-03-28 17:31:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:53 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-28 17:31:53 -此处进行解密+验签+身份验证
2020-03-28 17:31:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:53 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-28 17:31:53 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-28 17:31:53 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-28 17:31:53 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:53 -==> Parameters: 426(String)
2020-03-28 17:31:53 -<==      Total: 204
2020-03-28 17:31:53 -耗时 : 184
2020-03-28 17:31:54 -<==      Total: 631
2020-03-28 17:31:54 -耗时 : 488
2020-03-28 17:31:56 -此处进行解密+验签+身份验证
2020-03-28 17:31:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 17:31:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 17:31:56 -==> Parameters: 426(String)
2020-03-28 17:31:56 -此处进行解密+验签+身份验证
2020-03-28 17:31:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 17:31:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 17:31:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 17:31:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:56 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -耗时 : 17
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:56 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 17:31:56 -<==    Updates: 1
2020-03-28 17:31:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 17:31:56 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:56 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 17:31:56 -<==    Updates: 1
2020-03-28 17:31:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 17:31:56 -==> Parameters: 
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:56 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:56 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 17:31:56 -<==    Updates: 1
2020-03-28 17:31:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:31:56 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:56 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:31:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 17:31:56 -<==    Updates: 1
2020-03-28 17:31:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:31:56 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 17:31:56 -<==      Total: 1
2020-03-28 17:31:56 -耗时 : 134
2020-03-28 17:31:57 -此处进行解密+验签+身份验证
2020-03-28 17:31:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:57 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-28 17:31:57 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-28 17:31:57 -==> Parameters: 202003(String), 426(String)
2020-03-28 17:31:58 -<==      Total: 1
2020-03-28 17:31:58 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-28 17:31:58 -==> Parameters: 426(String)
2020-03-28 17:31:58 -<==      Total: 0
2020-03-28 17:31:58 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-28 17:31:58 -==> Parameters: 202003(String), 426(String)
2020-03-28 17:31:58 -<==      Total: 1
2020-03-28 17:31:58 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-28 17:31:58 -==> Parameters: 426(String)
2020-03-28 17:31:58 -<==      Total: 0
2020-03-28 17:31:58 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-28 17:31:58 -==> Parameters: 202003(String), 426(String)
2020-03-28 17:31:58 -<==      Total: 1
2020-03-28 17:31:58 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-28 17:31:58 -==> Parameters: 426(String)
2020-03-28 17:31:58 -<==      Total: 0
2020-03-28 17:31:58 -耗时 : 59
2020-03-28 17:31:58 -此处进行解密+验签+身份验证
2020-03-28 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:31:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:31:58 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-28 17:31:58 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-28 17:31:58 -==> Parameters: 426(String)
2020-03-28 17:31:58 -<==      Total: 1
2020-03-28 17:31:58 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-28 17:31:58 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:59 -<==      Total: 1
2020-03-28 17:31:59 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-28 17:31:59 -==> Parameters: 426(String), 426(String)
2020-03-28 17:31:59 -<==      Total: 1
2020-03-28 17:31:59 -耗时 : 1357
2020-03-28 17:32:09 -此处进行解密+验签+身份验证
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-28 17:32:09 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-28 17:32:09 -==> Parameters: 426(String)
2020-03-28 17:32:09 -<==      Total: 1
2020-03-28 17:32:09 -耗时 : 20
2020-03-28 17:32:09 -此处进行解密+验签+身份验证
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-28 17:32:09 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-28 17:32:09 -==> Parameters: 426(String), 202003(String)
2020-03-28 17:32:09 -<==      Total: 1
2020-03-28 17:32:09 -此处进行解密+验签+身份验证
2020-03-28 17:32:09 -耗时 : 8
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-28 17:32:09 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-28 17:32:09 -==> Parameters: 426(String), 202003(String)
2020-03-28 17:32:09 -此处进行解密+验签+身份验证
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:09 -<==      Total: 1
2020-03-28 17:32:09 -耗时 : 6
2020-03-28 17:32:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-28 17:32:09 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-28 17:32:09 -==> Parameters: 426(String), 202003(String)
2020-03-28 17:32:09 -<==      Total: 1
2020-03-28 17:32:09 -耗时 : 2
2020-03-28 17:32:29 -此处进行解密+验签+身份验证
2020-03-28 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:29 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 17:32:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 17:32:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:32:29 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:29 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 17:32:29 -<==    Updates: 1
2020-03-28 17:32:29 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 17:32:29 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:29 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 17:32:29 -<==    Updates: 1
2020-03-28 17:32:29 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 17:32:29 -==> Parameters: 
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:29 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:29 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 17:32:29 -<==    Updates: 1
2020-03-28 17:32:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:32:29 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:29 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 17:32:29 -<==    Updates: 1
2020-03-28 17:32:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:29 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 17:32:29 -<==      Total: 1
2020-03-28 17:32:29 -耗时 : 110
2020-03-28 17:32:30 -此处进行解密+验签+身份验证
2020-03-28 17:32:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:30 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNoticeDetail
2020-03-28 17:32:30 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, t.notice_content, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.id=? 
2020-03-28 17:32:30 -==> Parameters: 10(String)
2020-03-28 17:32:30 -<==      Total: 1
2020-03-28 17:32:30 -耗时 : 4
2020-03-28 17:32:41 -此处进行解密+验签+身份验证
2020-03-28 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:41 -此处进行解密+验签+身份验证
2020-03-28 17:32:41 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 17:32:41 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:32:41 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-28 17:32:41 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:41 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-28 17:32:41 -==> Parameters: 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:41 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -耗时 : 5
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:41 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 17:32:41 -<==    Updates: 1
2020-03-28 17:32:41 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 17:32:41 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:41 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:41 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 17:32:41 -<==    Updates: 1
2020-03-28 17:32:41 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 17:32:41 -==> Parameters: 
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:41 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:41 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 17:32:41 -<==    Updates: 1
2020-03-28 17:32:41 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:32:41 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:41 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:41 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 17:32:41 -<==    Updates: 1
2020-03-28 17:32:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:41 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 17:32:41 -<==      Total: 1
2020-03-28 17:32:41 -耗时 : 62
2020-03-28 17:32:51 -此处进行解密+验签+身份验证
2020-03-28 17:32:51 -解密：
2020-03-28 17:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-28 17:32:51 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-28 17:32:51 -==> Parameters: 01(String), 01(String)
2020-03-28 17:32:51 -此处进行解密+验签+身份验证
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-28 17:32:51 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-28 17:32:51 -==> Parameters: 426(String)
2020-03-28 17:32:51 -<==      Total: 4
2020-03-28 17:32:51 -耗时 : 8
2020-03-28 17:32:51 -<==      Total: 2
2020-03-28 17:32:51 -耗时 : 5
2020-03-28 17:32:51 -此处进行解密+验签+身份验证
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-28 17:32:51 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-28 17:32:51 -==> Parameters: 
2020-03-28 17:32:51 -<==      Total: 3
2020-03-28 17:32:51 -耗时 : 6
2020-03-28 17:32:51 -此处进行解密+验签+身份验证
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-28 17:32:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-28 17:32:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-28 17:32:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:32:51 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:51 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-28 17:32:51 -<==    Updates: 1
2020-03-28 17:32:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-28 17:32:51 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:51 -==> Parameters: recallFlag(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-28 17:32:51 -<==    Updates: 1
2020-03-28 17:32:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-28 17:32:51 -==> Parameters: 
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:51 -==> Parameters: collegeFlag(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:51 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-28 17:32:51 -<==    Updates: 1
2020-03-28 17:32:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-28 17:32:51 -==> Parameters: 426(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:51 -==> Parameters: cardFlag(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-28 17:32:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-28 17:32:51 -<==    Updates: 1
2020-03-28 17:32:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-28 17:32:51 -==> Parameters: appImgFlag(String), 426(String)
2020-03-28 17:32:51 -<==      Total: 1
2020-03-28 17:32:51 -耗时 : 62
