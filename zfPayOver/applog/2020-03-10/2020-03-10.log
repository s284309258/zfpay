2020-03-10 09:46:35 -Starting LongEcologicalApplication on PC-201905161910 with PID 5220 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-10 09:46:35 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-10 09:46:35 -No active profile set, falling back to default profiles: default
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 09:46:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 09:46:36 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 09:46:36 -Finished Spring Data repository scanning in 114ms. Found 0 repository interfaces.
2020-03-10 09:46:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 09:46:36 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 09:46:36 -Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-03-10 09:46:36 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$2d0fa7e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 09:46:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$27938c81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 09:46:37 -Tomcat initialized with port(s): 8080 (http)
2020-03-10 09:46:37 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 09:46:37 -Starting service [Tomcat]
2020-03-10 09:46:37 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-10 09:46:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-10 09:46:37 -Initializing Spring embedded WebApplicationContext
2020-03-10 09:46:37 -Root WebApplicationContext: initialization completed in 2671 ms
2020-03-10 09:46:37 -Filter xssFilter was not registered (disabled)
2020-03-10 09:46:38 -HikariPool-1 - Starting...
2020-03-10 09:46:38 -HikariPool-1 - Start completed.
2020-03-10 09:46:38 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-10 09:46:38 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-10 09:46:38 -HHH000206: hibernate.properties not found
2020-03-10 09:46:38 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-10 09:46:39 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-10 09:46:39 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-10 09:46:39 -Using default implementation for ThreadExecutor
2020-03-10 09:46:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-10 09:46:39 -Quartz Scheduler v.2.3.0 created.
2020-03-10 09:46:39 -RAMJobStore initialized.
2020-03-10 09:46:39 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-10 09:46:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-10 09:46:39 -Quartz scheduler version: 2.3.0
2020-03-10 09:46:39 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3a2546d6
2020-03-10 09:46:40 -STAET TaskExecutorConfig
2020-03-10 09:46:40 -Initializing ExecutorService
2020-03-10 09:46:40 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-10 09:46:40 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-10 09:46:40 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-10 09:46:41 -Initializing ExecutorService 'taskScheduler'
2020-03-10 09:46:41 -Starting Quartz Scheduler now
2020-03-10 09:46:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-10 09:46:41 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 09:46:41 -Using a shared selector for servlet write/read
2020-03-10 09:46:41 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-10 09:46:41 -Started LongEcologicalApplication in 7.084 seconds (JVM running for 9.212)
2020-03-10 09:48:12 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 09:48:12 -Initializing Servlet 'dispatcherServlet'
2020-03-10 09:48:12 -Completed initialization in 10 ms
2020-03-10 09:48:12 -此处进行解密+验签+身份验证
2020-03-10 09:48:12 -此处进行解密+验签+身份验证
2020-03-10 09:48:12 -此处进行解密+验签+身份验证
2020-03-10 09:48:12 -此处进行解密+验签+身份验证
2020-03-10 09:48:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 09:48:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 09:48:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 09:48:13 -Starting without optional epoll library
2020-03-10 09:48:13 -Starting without optional kqueue library
2020-03-10 09:48:13 -解密：{
  "login_type" : "token",
  "device_type" : "iOS",
  "sign" : "9AAD11EC20236DB4628E134A99EDBF7A",
  "version_no" : "1.1.1",
  "token" : "181|6S7MPLUKZ3JT90379EZ5KMJWP1HO4HF9",
  "device_no" : "iOS11.4.1"
}
2020-03-10 09:48:13 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-10 09:48:13 -token值=======181|6S7MPLUKZ3JT90379EZ5KMJWP1HO4HF9
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 09:48:13 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-10 09:48:13 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-10 09:48:13 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-10 09:48:13 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,cacheKey:zfpay_sys_app_img_01
2020-03-10 09:48:13 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,has cacheKey:zfpay_sys_app_img_01 , return
2020-03-10 09:48:13 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-10 09:48:13 -耗时 : 26
2020-03-10 09:48:13 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-10 09:48:13 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 09:48:13 -==> Parameters: 
2020-03-10 09:48:13 -==> Parameters: 181(String)
2020-03-10 09:48:13 -==> Parameters: 181(String)
2020-03-10 09:48:13 -<==      Total: 3
2020-03-10 09:48:13 -<==      Total: 2
2020-03-10 09:48:13 -<==      Total: 1
2020-03-10 09:48:13 -耗时 : 59
2020-03-10 09:48:13 -耗时 : 59
2020-03-10 09:48:13 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-10 09:48:13 -==> Parameters: 26(String)
2020-03-10 09:48:13 -<==      Total: 1
2020-03-10 09:48:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-10 09:48:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-10 09:48:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-10 09:48:13 -此处进行解密+验签+身份验证
2020-03-10 09:48:13 -此处进行解密+验签+身份验证
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 09:48:13 -此处进行解密+验签+身份验证
2020-03-10 09:48:13 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 09:48:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 09:48:13 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 09:48:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-10 09:48:13 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 09:48:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-10 09:48:13 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-10 09:48:13 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 09:48:13 -耗时 : 399
2020-03-10 09:48:13 -耗时 : 16
2020-03-10 09:48:13 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,cacheKey:zfpay_sys_app_img_02
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 09:48:13 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,has cacheKey:zfpay_sys_app_img_02 , return
2020-03-10 09:48:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 09:48:13 -耗时 : 14
2020-03-10 09:48:13 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 09:48:13 -==> Parameters: 181(String), 181(String)
2020-03-10 09:48:13 -<==      Total: 1
2020-03-10 09:48:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 09:48:13 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 09:48:13 -<==      Total: 1
2020-03-10 09:48:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 09:48:13 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 09:48:13 -<==    Updates: 1
2020-03-10 09:48:13 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 09:48:13 -==> Parameters: 181(String), 181(String)
2020-03-10 09:48:13 -<==      Total: 1
2020-03-10 09:48:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 09:48:13 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 09:48:13 -<==      Total: 1
2020-03-10 09:48:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 09:48:13 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 09:48:13 -<==    Updates: 1
2020-03-10 09:48:13 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 09:48:13 -==> Parameters: 
2020-03-10 09:48:14 -<==      Total: 1
2020-03-10 09:48:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 09:48:14 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 09:48:14 -<==      Total: 1
2020-03-10 09:48:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 09:48:14 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 09:48:14 -<==    Updates: 1
2020-03-10 09:48:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 09:48:14 -==> Parameters: 181(String), 181(String)
2020-03-10 09:48:14 -<==      Total: 1
2020-03-10 09:48:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 09:48:14 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 09:48:14 -<==      Total: 1
2020-03-10 09:48:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 09:48:14 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 09:48:14 -<==    Updates: 1
2020-03-10 09:48:14 -耗时 : 209
2020-03-10 09:48:26 -此处进行解密+验签+身份验证
2020-03-10 09:48:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 09:48:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 09:48:26 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-10 09:48:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 09:48:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 09:48:26 -List com.example.longecological.service.activity.impl.OnlineActivityCacheServiceImpl.getTraditionalPosOnlineActivityList(Map) enable cache service,cacheKey:zfpay_sys_activity_list_01_26_20200310
2020-03-10 09:48:26 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? pos_type is null and ? between start_date and end_date 
2020-03-10 09:48:26 -==> Parameters: 26(String), 20200310(String)
2020-03-10 09:48:26 -after List com.example.longecological.service.activity.impl.OnlineActivityCacheServiceImpl.getTraditionalPosOnlineActivityList(Map) proceed,save result to cache,redisKey:zfpay_sys_activity_list_01_26_20200310,save content:null
2020-03-10 09:48:26 -OnlineActivityServiceImpl -- getTraditionalPosOnlineActivityList方法处理异常：
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'pos_type is null
			   
		  and '20200310' between start_date and end_date' at line 12
### The error may exist in file [D:\javaSVN\zf2_qh\zfPayOver\target\classes\mapper\activity\OnlineActivityMapper.xml]
### The error may involve com.example.longecological.mapper.activity.OnlineActivityMapper.getTraditionalPosOnlineActivityList-Inline
### The error occurred while setting parameters
### SQL: SELECT    cast(id as char) as activity_id,    activity_name,    start_date,    end_date,    cover_url   FROM    t_sys_trapos_activity_info    where status = '09'      and manager_id = ?             pos_type is null            and ? between start_date and end_date
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'pos_type is null
			   
		  and '20200310' between start_date and end_date' at line 12
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'pos_type is null
			   
		  and '20200310' between start_date and end_date' at line 12
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy102.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.getTraditionalPosOnlineActivityList(Unknown Source)
	at com.example.longecological.service.activity.impl.OnlineActivityCacheServiceImpl.getTraditionalPosOnlineActivityList(OnlineActivityCacheServiceImpl.java:28)
	at com.example.longecological.service.activity.impl.OnlineActivityCacheServiceImpl$$FastClassBySpringCGLIB$$f68e8486.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:73)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.activity.impl.OnlineActivityCacheServiceImpl$$EnhancerBySpringCGLIB$$7161fff3.getTraditionalPosOnlineActivityList(<generated>)
	at com.example.longecological.service.activity.impl.OnlineActivityServiceImpl.getTraditionalPosOnlineActivityList(OnlineActivityServiceImpl.java:56)
	at com.example.longecological.service.activity.impl.OnlineActivityServiceImpl$$FastClassBySpringCGLIB$$8281b7a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.example.longecological.service.activity.impl.OnlineActivityServiceImpl$$EnhancerBySpringCGLIB$$67de95ab.getTraditionalPosOnlineActivityList(<generated>)
	at com.example.longecological.controller.activity.OnlineActivityController.getTraditionalPosOnlineActivityList(OnlineActivityController.java:35)
	at com.example.longecological.controller.activity.OnlineActivityController$$FastClassBySpringCGLIB$$cdc8cc74.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.activity.OnlineActivityController$$EnhancerBySpringCGLIB$$28c64f6d.getTraditionalPosOnlineActivityList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 09:48:26 -耗时 : 97
2020-03-10 09:48:42 -此处进行解密+验签+身份验证
2020-03-10 09:48:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 09:48:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 09:48:42 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-10 09:48:42 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-10 09:48:42 -==> Parameters: 181(String)
2020-03-10 09:48:42 -<==      Total: 0
2020-03-10 09:48:42 -耗时 : 25
2020-03-10 10:00:27 -此处进行解密+验签+身份验证
2020-03-10 10:00:27 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:00:27 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:00:27 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:00:27 -耗时 : 7
2020-03-10 10:00:42 -此处进行解密+验签+身份验证
2020-03-10 10:00:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:00:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:00:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 10:00:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 10:00:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 10:00:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:00:42 -==> Parameters: 181(String), 181(String)
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:00:42 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:00:42 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 10:00:42 -<==    Updates: 1
2020-03-10 10:00:42 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 10:00:42 -==> Parameters: 181(String), 181(String)
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:00:42 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:00:42 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 10:00:42 -<==    Updates: 1
2020-03-10 10:00:42 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 10:00:42 -==> Parameters: 
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:00:42 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:00:42 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 10:00:42 -<==    Updates: 1
2020-03-10 10:00:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:00:42 -==> Parameters: 181(String), 181(String)
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:00:42 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 10:00:42 -<==      Total: 1
2020-03-10 10:00:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:00:42 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 10:00:42 -<==    Updates: 1
2020-03-10 10:00:42 -耗时 : 190
2020-03-10 10:01:17 -此处进行解密+验签+身份验证
2020-03-10 10:01:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:01:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:01:17 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-10 10:01:17 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-10 10:01:17 -==> Parameters: 181(String)
2020-03-10 10:01:17 -<==      Total: 1004
2020-03-10 10:01:17 -耗时 : 86
2020-03-10 10:02:34 -此处进行解密+验签+身份验证
2020-03-10 10:02:34 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:02:34 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:02:34 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:02:34 -耗时 : 10
2020-03-10 10:06:13 -此处进行解密+验签+身份验证
2020-03-10 10:06:13 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:06:13 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:06:13 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 10:06:13 -耗时 : 28
2020-03-10 10:06:13 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 10:06:13 -Reconnected to 120.25.164.176:10379
2020-03-10 10:06:35 -此处进行解密+验签+身份验证
2020-03-10 10:06:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:06:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:06:35 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectUnbindTraditionalPos
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@34b4b9c2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@45709d48 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@549b468d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@48441bfc (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1f2f20a2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5e7474d2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@50d5febf (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@382694a2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5eea8934 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@23c5a4df (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:06:35 -==>  Preparing: SELECT sn FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND t.del = '0' AND NOT EXISTS(SELECT 1 FROM t_user_trapos_unbind_record_info tt WHERE tt.SN=t.sn AND tt.status='00') 
2020-03-10 10:06:35 -==> Parameters: 181(String)
2020-03-10 10:06:35 -<==      Total: 4
2020-03-10 10:06:35 -耗时 : 206
2020-03-10 10:13:16 -此处进行解密+验签+身份验证
2020-03-10 10:13:16 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:13:16 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:13:16 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:13:16 -耗时 : 18
2020-03-10 10:16:23 -此处进行解密+验签+身份验证
2020-03-10 10:16:23 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:16:23 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:16:23 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:16:23 -耗时 : 17
2020-03-10 10:16:41 -此处进行解密+验签+身份验证
2020-03-10 10:16:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:16:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:16:41 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-10 10:16:41 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-10 10:16:41 -==> Parameters: 181(String), 181(String)
2020-03-10 10:16:58 -此处进行解密+验签+身份验证
2020-03-10 10:16:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:16:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:16:58 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosRecallList
2020-03-10 10:16:58 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_traditional_pos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_trapos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-10 10:16:58 -==> Parameters: 181(String), 181(String)
2020-03-10 10:16:58 -<==      Total: 291
2020-03-10 10:16:58 -耗时 : 72
2020-03-10 10:17:01 -<==      Total: 1365
2020-03-10 10:17:01 -耗时 : 19663
2020-03-10 10:20:32 -此处进行解密+验签+身份验证
2020-03-10 10:20:32 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:20:32 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:20:32 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:20:32 -耗时 : 15
2020-03-10 10:20:34 -此处进行解密+验签+身份验证
2020-03-10 10:20:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:20:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:20:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 10:20:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 10:20:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 10:20:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:20:34 -==> Parameters: 181(String), 181(String)
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:20:34 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:20:34 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 10:20:34 -<==    Updates: 1
2020-03-10 10:20:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 10:20:34 -==> Parameters: 181(String), 181(String)
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:20:34 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:20:34 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 10:20:34 -<==    Updates: 1
2020-03-10 10:20:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 10:20:34 -==> Parameters: 
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:20:34 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:20:34 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 10:20:34 -<==    Updates: 1
2020-03-10 10:20:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:20:34 -==> Parameters: 181(String), 181(String)
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:20:34 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 10:20:34 -<==      Total: 1
2020-03-10 10:20:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:20:34 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 10:20:34 -<==    Updates: 1
2020-03-10 10:20:34 -耗时 : 183
2020-03-10 10:20:36 -此处进行解密+验签+身份验证
2020-03-10 10:20:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:20:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:20:36 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-10 10:20:36 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-10 10:20:36 -==> Parameters: 181(String)
2020-03-10 10:20:36 -<==      Total: 1004
2020-03-10 10:20:36 -耗时 : 55
2020-03-10 10:20:43 -此处进行解密+验签+身份验证
2020-03-10 10:20:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:20:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:20:44 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-10 10:20:44 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-10 10:20:44 -==> Parameters: 181(String), MPOS(String)
2020-03-10 10:20:44 -<==      Total: 7
2020-03-10 10:20:44 -耗时 : 21
2020-03-10 10:20:47 -此处进行解密+验签+身份验证
2020-03-10 10:20:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:20:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:20:47 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-10 10:20:47 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-10 10:20:47 -==> Parameters: 181(String), TraditionalPOS(String)
2020-03-10 10:20:47 -<==      Total: 10
2020-03-10 10:20:47 -耗时 : 20
2020-03-10 10:25:44 -此处进行解密+验签+身份验证
2020-03-10 10:25:44 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:25:44 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:25:44 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:25:44 -耗时 : 14
2020-03-10 10:26:00 -此处进行解密+验签+身份验证
2020-03-10 10:26:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:26:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:26:00 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 10:26:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 10:26:00 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@66224f5d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@60481524 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7078d2d4 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@4d43321 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@79288e8a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@773832c6 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@646f5d3a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@52e1bf8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@23eedf5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@34264176 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:26:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:26:00 -==> Parameters: 181(String), 181(String)
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:26:00 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:26:00 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 10:26:00 -<==    Updates: 1
2020-03-10 10:26:00 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 10:26:00 -==> Parameters: 181(String), 181(String)
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:26:00 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:26:00 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 10:26:00 -<==    Updates: 1
2020-03-10 10:26:00 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 10:26:00 -==> Parameters: 
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:26:00 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:26:00 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 10:26:00 -<==    Updates: 1
2020-03-10 10:26:00 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:26:00 -==> Parameters: 181(String), 181(String)
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:26:00 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 10:26:00 -<==      Total: 1
2020-03-10 10:26:00 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:26:00 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 10:26:00 -<==    Updates: 1
2020-03-10 10:26:00 -耗时 : 186
2020-03-10 10:26:02 -此处进行解密+验签+身份验证
2020-03-10 10:26:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:26:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:26:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-10 10:26:02 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-10 10:26:02 -==> Parameters: 1(String), 181(String), applyRateFlag(String)
2020-03-10 10:26:02 -<==    Updates: 1
2020-03-10 10:26:02 -耗时 : 12
2020-03-10 10:26:17 -此处进行解密+验签+身份验证
2020-03-10 10:26:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:26:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:26:17 -请求地址 : http://192.168.191.1:8080/api/sys/creditcardratesapply/getApplyRateTraditionalPosList
2020-03-10 10:26:17 -==>  Preparing: SELECT t1.sn, t1.credit_card_rate FROM t_user_traditional_pos_info t INNER JOIN t_sys_traditional_pos_info t1 on t.sn = t1.sn where t.user_id = ? and t.state_status = '1' AND NOT EXISTS ( SELECT 1 FROM t_user_apply_cardrate_trapos_record_info t2 WHERE t2.user_id = ? AND t2.sn = t.sn AND t2.status = '00' ) order by t.id desc 
2020-03-10 10:26:17 -==> Parameters: 181(String), 181(String)
2020-03-10 10:26:17 -<==      Total: 536
2020-03-10 10:26:17 -耗时 : 76
2020-03-10 10:31:32 -此处进行解密+验签+身份验证
2020-03-10 10:31:32 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:31:32 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:31:32 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 10:31:32 -耗时 : 6
2020-03-10 10:31:32 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 10:31:32 -Reconnected to 120.25.164.176:10379
2020-03-10 10:32:52 -此处进行解密+验签+身份验证
2020-03-10 10:32:52 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:32:52 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:32:52 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:32:52 -耗时 : 20
2020-03-10 10:34:38 -此处进行解密+验签+身份验证
2020-03-10 10:34:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:34:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:34:38 -请求地址 : http://192.168.191.1:8080/api/sys/creditcardratesapply/getCreditCardRateList
2020-03-10 10:34:38 -List com.example.longecological.service.common.impl.SysParamRateServiceImpl.getRateListByType(String) enable cache service,cacheKey:zfpay_sys_param_rate_list_1
2020-03-10 10:34:38 -List com.example.longecological.service.common.impl.SysParamRateServiceImpl.getRateListByType(String) enable cache service,has cacheKey:zfpay_sys_param_rate_list_1 , return
2020-03-10 10:34:38 -耗时 : 14
2020-03-10 10:43:44 -此处进行解密+验签+身份验证
2020-03-10 10:43:44 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:43:44 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:43:44 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:43:44 -耗时 : 14
2020-03-10 10:46:25 -此处进行解密+验签+身份验证
2020-03-10 10:46:25 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 10:46:25 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 10:46:25 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 10:46:25 -耗时 : 14
2020-03-10 10:46:29 -此处进行解密+验签+身份验证
2020-03-10 10:46:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:46:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:46:29 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 10:46:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 10:46:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1d26f1f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@37be19d8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@41d64671 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@53ee73c3 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@43e85373 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@45fe20f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7749c93b (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5799cc7a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@566b7e31 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2ddfb169 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 10:46:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:46:29 -==> Parameters: 181(String), 181(String)
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:46:29 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:46:29 -==> Parameters: 0(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 10:46:29 -<==    Updates: 1
2020-03-10 10:46:29 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 10:46:29 -==> Parameters: 181(String), 181(String)
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:46:29 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:46:29 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 10:46:29 -<==    Updates: 1
2020-03-10 10:46:29 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 10:46:29 -==> Parameters: 
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:46:29 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:46:29 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 10:46:29 -<==    Updates: 1
2020-03-10 10:46:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 10:46:29 -==> Parameters: 181(String), 181(String)
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 10:46:29 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 10:46:29 -<==      Total: 1
2020-03-10 10:46:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 10:46:29 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 10:46:29 -<==    Updates: 1
2020-03-10 10:46:29 -耗时 : 193
2020-03-10 10:46:34 -此处进行解密+验签+身份验证
2020-03-10 10:46:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 10:46:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 10:46:34 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-10 10:46:34 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' 
2020-03-10 10:46:34 -==> Parameters: 181(String)
2020-03-10 10:46:34 -<==      Total: 1
2020-03-10 10:46:34 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-03-10 10:46:34 -==> Parameters: 181(String), 181(String), 202003(String)
2020-03-10 10:46:34 -<==      Total: 1
2020-03-10 10:46:34 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-10 10:46:34 -==> Parameters: 181(String), 181(String), 20200209(String), 20200310(String), 181(String)
2020-03-10 10:46:34 -<==      Total: 1
2020-03-10 10:46:34 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-10 10:46:34 -==> Parameters: 181(String), 20200110(String), 181(String), 20200110(String), 20200310(String), 181(String)
2020-03-10 10:46:34 -<==      Total: 1
2020-03-10 10:46:34 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-03-10 10:46:34 -==> Parameters: 181(String)
2020-03-10 10:46:34 -<==      Total: 1
2020-03-10 10:46:34 -耗时 : 185
2020-03-10 11:12:07 -此处进行解密+验签+身份验证
2020-03-10 11:12:07 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:12:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:12:07 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 11:12:07 -耗时 : 7
2020-03-10 11:12:07 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 11:12:07 -Reconnected to 120.25.164.176:10379
2020-03-10 11:12:10 -此处进行解密+验签+身份验证
2020-03-10 11:12:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:12:10 -此处进行解密+验签+身份验证
2020-03-10 11:12:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:12:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:12:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:12:10 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-10 11:12:10 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1bc4be36 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@4ad08430 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@dc41df8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@512e7197 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1d0bdc7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7934a0c1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3f5b86c5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@102213ad (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@38175a94 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5e1df49d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:12:10 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-10 11:12:10 -==> Parameters: 181(String)
2020-03-10 11:12:10 -<==      Total: 10
2020-03-10 11:12:10 -耗时 : 101
2020-03-10 11:12:10 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 11:12:10 -==> Parameters: 181(String)
2020-03-10 11:12:10 -<==      Total: 1
2020-03-10 11:12:10 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 11:12:10 -==> Parameters: 181(String)
2020-03-10 11:12:10 -<==      Total: 1
2020-03-10 11:12:10 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? 
2020-03-10 11:12:10 -==> Parameters: 181(String)
2020-03-10 11:12:10 -<==      Total: 1
2020-03-10 11:12:10 -耗时 : 141
2020-03-10 11:14:33 -此处进行解密+验签+身份验证
2020-03-10 11:14:33 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:14:33 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:14:33 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:14:33 -耗时 : 8
2020-03-10 11:16:31 -此处进行解密+验签+身份验证
2020-03-10 11:16:31 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:16:31 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:16:31 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:16:31 -耗时 : 9
2020-03-10 11:24:16 -此处进行解密+验签+身份验证
2020-03-10 11:24:16 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:24:16 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:24:16 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:24:16 -耗时 : 8
2020-03-10 11:24:28 -此处进行解密+验签+身份验证
2020-03-10 11:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:24:28 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 11:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 11:24:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 11:24:28 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 11:24:28 -==> Parameters: 181(String), 181(String)
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:24:28 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:24:28 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 11:24:28 -<==    Updates: 1
2020-03-10 11:24:28 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 11:24:28 -==> Parameters: 181(String), 181(String)
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:24:28 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:24:28 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 11:24:28 -<==    Updates: 1
2020-03-10 11:24:28 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 11:24:28 -==> Parameters: 
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:24:28 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:24:28 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 11:24:28 -<==    Updates: 1
2020-03-10 11:24:28 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 11:24:28 -==> Parameters: 181(String), 181(String)
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:24:28 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 11:24:28 -<==      Total: 1
2020-03-10 11:24:28 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:24:28 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 11:24:28 -<==    Updates: 1
2020-03-10 11:24:28 -耗时 : 186
2020-03-10 11:24:29 -此处进行解密+验签+身份验证
2020-03-10 11:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:24:29 -此处进行解密+验签+身份验证
2020-03-10 11:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:24:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:24:29 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-10 11:24:29 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-10 11:24:29 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-10 11:24:29 -==> Parameters: 202003(String), 181(String)
2020-03-10 11:24:29 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-10 11:24:29 -==> Parameters: 181(String)
2020-03-10 11:24:29 -<==      Total: 1
2020-03-10 11:24:29 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-10 11:24:29 -==> Parameters: 181(String)
2020-03-10 11:24:29 -<==      Total: 1
2020-03-10 11:24:29 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-10 11:24:29 -==> Parameters: 181(String), 181(String)
2020-03-10 11:24:29 -<==      Total: 0
2020-03-10 11:24:29 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-10 11:24:29 -==> Parameters: 202003(String), 181(String)
2020-03-10 11:24:29 -<==      Total: 1
2020-03-10 11:24:29 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-10 11:24:29 -==> Parameters: 181(String)
2020-03-10 11:24:29 -<==      Total: 0
2020-03-10 11:24:29 -耗时 : 63
2020-03-10 11:24:29 -<==      Total: 1
2020-03-10 11:24:29 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-10 11:24:29 -==> Parameters: 181(String), 181(String)
2020-03-10 11:24:29 -<==      Total: 1
2020-03-10 11:24:29 -耗时 : 112
2020-03-10 11:24:35 -此处进行解密+验签+身份验证
2020-03-10 11:24:35 -此处进行解密+验签+身份验证
2020-03-10 11:24:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:24:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:24:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:24:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:24:35 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-03-10 11:24:35 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-03-10 11:24:35 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-10 11:24:35 -==> Parameters: 181(String), 20200310(String)
2020-03-10 11:24:35 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? 
2020-03-10 11:24:35 -==> Parameters: 181(String), 202003(String)
2020-03-10 11:24:35 -<==      Total: 0
2020-03-10 11:24:35 -耗时 : 19
2020-03-10 11:24:35 -<==      Total: 1
2020-03-10 11:24:35 -耗时 : 19
2020-03-10 11:24:49 -此处进行解密+验签+身份验证
2020-03-10 11:24:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:24:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:24:49 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosList
2020-03-10 11:24:49 -==>  Preparing: SELECT t1.date, cast(IFNULL(t2.agency_performance,0.00) as char) as performance, cast(IFNULL(t2.agency_act_num,0) as char) as act_num, cast(IFNULL((t2.under_num - t2.refer_num),0) as char) as user_num from ( SELECT @num :=@num - 1, date_format( adddate(str_to_date(?,'%Y%m%d'), INTERVAL @num MONTH), '%Y%m' ) AS date FROM t_sys_assist_query, (SELECT @num := 1) t) t1 left join t_summary_user_traditional_pos_benefit_month t2 on t1.date = t2.cre_month and t2.user_id = ? order by t1.date 
2020-03-10 11:24:49 -==> Parameters: 20200301(String), 181(String)
2020-03-10 11:24:49 -<==      Total: 7
2020-03-10 11:24:49 -耗时 : 25
2020-03-10 11:32:31 -此处进行解密+验签+身份验证
2020-03-10 11:32:31 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:32:31 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:32:31 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 11:32:31 -耗时 : 16
2020-03-10 11:32:31 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 11:32:31 -Reconnected to 120.25.164.176:10379
2020-03-10 11:32:33 -此处进行解密+验签+身份验证
2020-03-10 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:32:33 -此处进行解密+验签+身份验证
2020-03-10 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:32:33 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayMerchantTraditionalPosDetail
2020-03-10 11:32:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@21c6e0a7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@34a1df77 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthMerchantTraditionalPosDetail
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1582e752 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7750cf02 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3d7fe9d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@71e6aec (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@6fc140e0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@c6564d0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@55a16008 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2d12d8bb (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 11:32:33 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-10 11:32:33 -==> Parameters: 181(String), 20200310(String)
2020-03-10 11:32:33 -<==      Total: 0
2020-03-10 11:32:33 -耗时 : 97
2020-03-10 11:32:33 -==>  Preparing: select cast(merchant_performance as char) as performance, cast(refer_num as char) as user_num, cast(merchant_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? 
2020-03-10 11:32:33 -==> Parameters: 181(String), 202003(String)
2020-03-10 11:32:33 -<==      Total: 1
2020-03-10 11:32:33 -耗时 : 99
2020-03-10 11:34:58 -此处进行解密+验签+身份验证
2020-03-10 11:34:58 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:34:58 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:34:58 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:34:58 -耗时 : 10
2020-03-10 11:36:26 -此处进行解密+验签+身份验证
2020-03-10 11:36:26 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:36:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:36:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:36:26 -耗时 : 9
2020-03-10 11:38:38 -此处进行解密+验签+身份验证
2020-03-10 11:38:38 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:38:38 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:38:38 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:38:38 -耗时 : 8
2020-03-10 11:39:47 -此处进行解密+验签+身份验证
2020-03-10 11:39:47 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:39:47 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:39:47 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:39:47 -耗时 : 9
2020-03-10 11:39:57 -此处进行解密+验签+身份验证
2020-03-10 11:39:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:39:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:39:57 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 11:39:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 11:39:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 11:39:57 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 11:39:57 -==> Parameters: 181(String), 181(String)
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:39:57 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:39:57 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 11:39:57 -<==    Updates: 1
2020-03-10 11:39:57 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 11:39:57 -==> Parameters: 181(String), 181(String)
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:39:57 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:39:57 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 11:39:57 -<==    Updates: 1
2020-03-10 11:39:57 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 11:39:57 -==> Parameters: 
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:39:57 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:39:57 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 11:39:57 -<==    Updates: 1
2020-03-10 11:39:57 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 11:39:57 -==> Parameters: 181(String), 181(String)
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 11:39:57 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 11:39:57 -<==      Total: 1
2020-03-10 11:39:57 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 11:39:57 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 11:39:57 -<==    Updates: 1
2020-03-10 11:39:57 -耗时 : 177
2020-03-10 11:40:03 -此处进行解密+验签+身份验证
2020-03-10 11:40:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:40:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:40:03 -此处进行解密+验签+身份验证
2020-03-10 11:40:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 11:40:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 11:40:03 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-10 11:40:03 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-10 11:40:03 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-10 11:40:03 -==> Parameters: 202003(String), 181(String)
2020-03-10 11:40:03 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-10 11:40:03 -==> Parameters: 181(String)
2020-03-10 11:40:03 -<==      Total: 1
2020-03-10 11:40:03 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-10 11:40:03 -==> Parameters: 181(String)
2020-03-10 11:40:03 -<==      Total: 1
2020-03-10 11:40:03 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-10 11:40:03 -==> Parameters: 181(String), 181(String)
2020-03-10 11:40:03 -<==      Total: 0
2020-03-10 11:40:03 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-10 11:40:03 -==> Parameters: 202003(String), 181(String)
2020-03-10 11:40:03 -<==      Total: 1
2020-03-10 11:40:03 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-10 11:40:03 -==> Parameters: 181(String)
2020-03-10 11:40:03 -<==      Total: 0
2020-03-10 11:40:03 -耗时 : 56
2020-03-10 11:40:03 -<==      Total: 1
2020-03-10 11:40:03 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-10 11:40:03 -==> Parameters: 181(String), 181(String)
2020-03-10 11:40:03 -<==      Total: 1
2020-03-10 11:40:03 -耗时 : 100
2020-03-10 11:41:07 -此处进行解密+验签+身份验证
2020-03-10 11:41:07 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:41:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:41:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:41:07 -耗时 : 9
2020-03-10 11:43:46 -此处进行解密+验签+身份验证
2020-03-10 11:43:46 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:43:46 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:43:46 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 11:43:46 -耗时 : 15
2020-03-10 11:49:36 -此处进行解密+验签+身份验证
2020-03-10 11:49:36 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 11:49:36 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 11:49:36 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 11:49:36 -耗时 : 10
2020-03-10 11:49:36 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 11:49:36 -Reconnected to 120.25.164.176:10379
2020-03-10 12:15:26 -此处进行解密+验签+身份验证
2020-03-10 12:15:26 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 12:15:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 12:15:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 12:15:26 -耗时 : 14
2020-03-10 14:02:42 -此处进行解密+验签+身份验证
2020-03-10 14:02:42 -解密：{
  "login_type" : "token",
  "device_type" : "iOS",
  "sign" : "9AAD11EC20236DB4628E134A99EDBF7A",
  "version_no" : "1.1.1",
  "token" : "181|6S7MPLUKZ3JT90379EZ5KMJWP1HO4HF9",
  "device_no" : "iOS11.4.1"
}
2020-03-10 14:02:42 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-10 14:02:42 -token值=======181|6S7MPLUKZ3JT90379EZ5KMJWP1HO4HF9
2020-03-10 14:02:42 -VerifyTokenServiceImpl -- isToken方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:799)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:253)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:59)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.example.longecological.config.redis.RedisUtils.get(RedisUtils.java:114)
	at com.example.longecological.service.common.impl.VerifyTokenServiceImpl.isToken(VerifyTokenServiceImpl.java:38)
	at com.example.longecological.service.user.impl.UserLoginServiceImpl.userLoginOper(UserLoginServiceImpl.java:123)
	at com.example.longecological.service.user.impl.UserLoginServiceImpl.userLogin(UserLoginServiceImpl.java:75)
	at com.example.longecological.service.user.impl.UserLoginServiceImpl$$FastClassBySpringCGLIB$$b1492584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.example.longecological.service.user.impl.UserLoginServiceImpl$$EnhancerBySpringCGLIB$$710f9c91.userLogin(<generated>)
	at com.example.longecological.controller.user.UserLoginController.userLogin(UserLoginController.java:39)
	at com.example.longecological.controller.user.UserLoginController$$FastClassBySpringCGLIB$$77717560.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.user.UserLoginController$$EnhancerBySpringCGLIB$$93cb3db1.userLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 14:02:42 -耗时 : 10
2020-03-10 14:02:42 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 14:02:42 -Reconnected to 120.25.164.176:10379
2020-03-10 14:02:42 -此处进行解密+验签+身份验证
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:42 -此处进行解密+验签+身份验证
2020-03-10 14:02:42 -此处进行解密+验签+身份验证
2020-03-10 14:02:42 -此处进行解密+验签+身份验证
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:42 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-10 14:02:42 -==> Parameters: 181(String)
2020-03-10 14:02:42 -<==      Total: 2
2020-03-10 14:02:42 -耗时 : 15
2020-03-10 14:02:42 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-10 14:02:42 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,cacheKey:zfpay_sys_app_img_02
2020-03-10 14:02:42 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-10 14:02:42 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-10 14:02:42 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-10 14:02:42 -==> Parameters: 
2020-03-10 14:02:42 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,cacheKey:zfpay_sys_app_img_01
2020-03-10 14:02:42 -此处进行解密+验签+身份验证
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:42 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,has cacheKey:zfpay_sys_app_img_02 , return
2020-03-10 14:02:42 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,has cacheKey:zfpay_sys_app_img_01 , return
2020-03-10 14:02:42 -<==      Total: 3
2020-03-10 14:02:42 -耗时 : 6
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:42 -耗时 : 12
2020-03-10 14:02:42 -耗时 : 12
2020-03-10 14:02:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 14:02:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 14:02:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 14:02:42 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:42 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:42 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 14:02:42 -<==    Updates: 1
2020-03-10 14:02:42 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 14:02:42 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:42 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:42 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 14:02:42 -<==    Updates: 1
2020-03-10 14:02:42 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 14:02:42 -==> Parameters: 
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:42 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:42 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 14:02:42 -此处进行解密+验签+身份验证
2020-03-10 14:02:42 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 14:02:42 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 14:02:42 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 14:02:42 -<==    Updates: 1
2020-03-10 14:02:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 14:02:42 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:42 -耗时 : 8
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:42 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 14:02:42 -<==      Total: 1
2020-03-10 14:02:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:42 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 14:02:42 -<==    Updates: 1
2020-03-10 14:02:42 -耗时 : 92
2020-03-10 14:02:44 -此处进行解密+验签+身份验证
2020-03-10 14:02:44 -解密：{
  "sign" : "4657F79932F5ECF08E9B4E85E8225B1C",
  "login_type" : "account",
  "sys_user_account" : "13322990711",
  "device_no" : "iOS11.4.1",
  "login_password" : "F5B4166AFD7EA843A09FEE4AFD9979F4",
  "token" : "181|6S7MPLUKZ3JT90379EZ5KMJWP1HO4HF9",
  "device_type" : "iOS",
  "version_no" : "1.1.1"
}
2020-03-10 14:02:44 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-10 14:02:44 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-10 14:02:44 -==> Parameters: 13322990711(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-10 14:02:44 -==> Parameters: iOS(String), iOS11.4.1(String), 1.1.1(String), 192.168.191.2(String), 20200310(String), 140244(String), 181(Integer)
2020-03-10 14:02:44 -<==    Updates: 1
2020-03-10 14:02:44 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-10 14:02:44 -==> Parameters: 26(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-10 14:02:44 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-10 14:02:44 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-10 14:02:44 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-10 14:02:44 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-10 14:02:44 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-10 14:02:44 -耗时 : 79
2020-03-10 14:02:44 -此处进行解密+验签+身份验证
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:44 -此处进行解密+验签+身份验证
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:44 -此处进行解密+验签+身份验证
2020-03-10 14:02:44 -此处进行解密+验签+身份验证
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:44 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-10 14:02:44 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-10 14:02:44 -==> Parameters: 181(String)
2020-03-10 14:02:44 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-10 14:02:44 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-10 14:02:44 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-10 14:02:44 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,cacheKey:zfpay_sys_app_img_01
2020-03-10 14:02:44 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,cacheKey:zfpay_sys_app_img_02
2020-03-10 14:02:44 -<==      Total: 2
2020-03-10 14:02:44 -耗时 : 6
2020-03-10 14:02:44 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,has cacheKey:zfpay_sys_app_img_02 , return
2020-03-10 14:02:44 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-10 14:02:44 -List com.example.longecological.service.system.impl.SysAppImgCacheServiceImpl.getAppImgList(Map) enable cache service,has cacheKey:zfpay_sys_app_img_01 , return
2020-03-10 14:02:44 -==> Parameters: 
2020-03-10 14:02:44 -此处进行解密+验签+身份验证
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:44 -耗时 : 10
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:44 -耗时 : 13
2020-03-10 14:02:44 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 14:02:44 -<==      Total: 3
2020-03-10 14:02:44 -耗时 : 20
2020-03-10 14:02:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 14:02:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 14:02:44 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:44 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:44 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 14:02:44 -<==    Updates: 1
2020-03-10 14:02:44 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 14:02:44 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:44 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:44 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 14:02:44 -<==    Updates: 1
2020-03-10 14:02:44 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 14:02:44 -==> Parameters: 
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:44 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:44 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 14:02:44 -<==    Updates: 1
2020-03-10 14:02:44 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 14:02:44 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 14:02:44 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 14:02:44 -<==      Total: 1
2020-03-10 14:02:44 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 14:02:44 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 14:02:44 -<==    Updates: 1
2020-03-10 14:02:44 -耗时 : 90
2020-03-10 14:02:48 -此处进行解密+验签+身份验证
2020-03-10 14:02:48 -此处进行解密+验签+身份验证
2020-03-10 14:02:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:02:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:02:48 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-10 14:02:48 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-10 14:02:48 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-10 14:02:48 -==> Parameters: 181(String)
2020-03-10 14:02:48 -<==      Total: 1
2020-03-10 14:02:48 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_traditional_pos_benefit_all t LEFT JOIN t_summary_user_traditional_pos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-10 14:02:48 -==> Parameters: 202003(String), 181(String)
2020-03-10 14:02:48 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-10 14:02:48 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:48 -<==      Total: 1
2020-03-10 14:02:48 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-10 14:02:48 -==> Parameters: 181(String)
2020-03-10 14:02:48 -<==      Total: 0
2020-03-10 14:02:48 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-10 14:02:48 -==> Parameters: 202003(String), 181(String)
2020-03-10 14:02:48 -<==      Total: 1
2020-03-10 14:02:48 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-10 14:02:48 -==> Parameters: 181(String)
2020-03-10 14:02:48 -<==      Total: 0
2020-03-10 14:02:48 -耗时 : 61
2020-03-10 14:02:48 -<==      Total: 1
2020-03-10 14:02:48 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-10 14:02:48 -==> Parameters: 181(String), 181(String)
2020-03-10 14:02:48 -<==      Total: 1
2020-03-10 14:02:48 -耗时 : 73
2020-03-10 14:29:59 -此处进行解密+验签+身份验证
2020-03-10 14:29:59 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 14:29:59 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 14:29:59 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 14:29:59 -耗时 : 9
2020-03-10 14:29:59 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 14:29:59 -Reconnected to 120.25.164.176:10379
2020-03-10 14:35:26 -此处进行解密+验签+身份验证
2020-03-10 14:35:26 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 14:35:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 14:35:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 14:35:26 -耗时 : 8
2020-03-10 14:36:51 -此处进行解密+验签+身份验证
2020-03-10 14:36:51 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 14:36:51 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 14:36:51 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 14:36:51 -耗时 : 9
2020-03-10 14:42:19 -此处进行解密+验签+身份验证
2020-03-10 14:42:19 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 14:42:19 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 14:42:19 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 14:42:19 -耗时 : 10
2020-03-10 14:44:14 -此处进行解密+验签+身份验证
2020-03-10 14:44:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:44:14 -此处进行解密+验签+身份验证
2020-03-10 14:44:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 14:44:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:44:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 14:44:14 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getDayAgencyTraditionalPosDetail
2020-03-10 14:44:14 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getMonthAgencyTraditionalPosDetail
2020-03-10 14:44:14 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_everyday where user_id = ? and cre_date = ? 
2020-03-10 14:44:14 -==> Parameters: 181(String), 20200310(String)
2020-03-10 14:44:14 -==>  Preparing: select cast(agency_performance as char) as performance, cast((under_num - refer_num) as char) as user_num, cast(agency_trade_num as char) as act_num from t_summary_user_traditional_pos_benefit_month where user_id = ? and cre_month = ? 
2020-03-10 14:44:14 -==> Parameters: 181(String), 202003(String)
2020-03-10 14:44:14 -<==      Total: 1
2020-03-10 14:44:14 -耗时 : 13
2020-03-10 14:44:14 -<==      Total: 0
2020-03-10 14:44:14 -耗时 : 21
2020-03-10 14:46:13 -此处进行解密+验签+身份验证
2020-03-10 14:46:13 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 14:46:13 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 14:46:13 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 14:46:13 -耗时 : 9
2020-03-10 15:01:28 -此处进行解密+验签+身份验证
2020-03-10 15:01:28 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 15:01:28 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 15:01:28 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 15:01:28 -耗时 : 10
2020-03-10 15:24:13 -此处进行解密+验签+身份验证
2020-03-10 15:24:13 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 15:24:13 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 15:24:13 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 15:24:13 -耗时 : 9
2020-03-10 15:24:13 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 15:24:13 -Reconnected to 120.25.164.176:10379
2020-03-10 15:24:16 -此处进行解密+验签+身份验证
2020-03-10 15:24:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 15:24:16 -此处进行解密+验签+身份验证
2020-03-10 15:24:16 -此处进行解密+验签+身份验证
2020-03-10 15:24:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 15:24:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 15:24:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 15:24:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 15:24:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 15:24:16 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-10 15:24:16 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-10 15:24:16 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@18e29b08 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2da260e1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@4918803e (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@322219c8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@30eaa0a4 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1a74eb14 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5fe3f207 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@16c21989 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@419e200a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5a8ae797 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 15:24:16 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 15:24:16 -==> Parameters: 181(String), 202003(String)
2020-03-10 15:24:16 -<==      Total: 1
2020-03-10 15:24:16 -耗时 : 50
2020-03-10 15:24:16 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-10 15:24:16 -==> Parameters: 181(String)
2020-03-10 15:24:16 -<==      Total: 1
2020-03-10 15:24:16 -耗时 : 59
2020-03-10 15:24:16 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 15:24:16 -==> Parameters: 181(String), 202003(String)
2020-03-10 15:24:16 -<==      Total: 1
2020-03-10 15:24:16 -耗时 : 58
2020-03-10 15:27:26 -此处进行解密+验签+身份验证
2020-03-10 15:27:26 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 15:27:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 15:27:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 15:27:26 -耗时 : 9
2020-03-10 15:29:07 -此处进行解密+验签+身份验证
2020-03-10 15:29:07 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 15:29:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 15:29:07 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 15:29:07 -耗时 : 9
2020-03-10 15:29:12 -此处进行解密+验签+身份验证
2020-03-10 15:29:12 -此处进行解密+验签+身份验证
2020-03-10 15:29:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 15:29:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 15:29:12 -此处进行解密+验签+身份验证
2020-03-10 15:29:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 15:29:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 15:29:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 15:29:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 15:29:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-10 15:29:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-10 15:29:12 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-10 15:29:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-10 15:29:12 -==> Parameters: 181(String)
2020-03-10 15:29:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 15:29:12 -==> Parameters: 181(String), 202003(String)
2020-03-10 15:29:12 -<==      Total: 1
2020-03-10 15:29:12 -耗时 : 9
2020-03-10 15:29:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 15:29:12 -==> Parameters: 181(String), 202003(String)
2020-03-10 15:29:12 -<==      Total: 1
2020-03-10 15:29:12 -耗时 : 14
2020-03-10 15:29:12 -<==      Total: 1
2020-03-10 15:29:12 -耗时 : 24
2020-03-10 15:31:29 -此处进行解密+验签+身份验证
2020-03-10 15:31:29 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 15:31:29 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 15:31:29 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 15:31:29 -耗时 : 9
2020-03-10 16:34:43 -此处进行解密+验签+身份验证
2020-03-10 16:34:43 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 16:34:43 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 16:34:43 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$49ca8c4e.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$8738f888.getNewVersion(<generated>)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 16:34:43 -耗时 : 12
2020-03-10 16:34:43 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-10 16:34:43 -Reconnected to 120.25.164.176:10379
2020-03-10 16:37:04 -此处进行解密+验签+身份验证
2020-03-10 16:37:04 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 16:37:04 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 16:37:04 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 16:37:04 -耗时 : 7
2020-03-10 16:37:07 -此处进行解密+验签+身份验证
2020-03-10 16:37:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:07 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardTraditionalPosList
2020-03-10 16:37:07 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-03-10 16:37:07 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-03-10 16:37:07 -<==      Total: 0
2020-03-10 16:37:07 -耗时 : 19
2020-03-10 16:37:08 -此处进行解密+验签+身份验证
2020-03-10 16:37:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:08 -此处进行解密+验签+身份验证
2020-03-10 16:37:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:08 -此处进行解密+验签+身份验证
2020-03-10 16:37:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:08 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-10 16:37:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:08 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-10 16:37:08 -==> Parameters: 181(String)
2020-03-10 16:37:08 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-10 16:37:08 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-10 16:37:08 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 16:37:08 -==> Parameters: 181(String), 202003(String)
2020-03-10 16:37:09 -<==      Total: 1
2020-03-10 16:37:09 -耗时 : 17
2020-03-10 16:37:09 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 16:37:09 -==> Parameters: 181(String), 202003(String)
2020-03-10 16:37:09 -<==      Total: 1
2020-03-10 16:37:09 -耗时 : 20
2020-03-10 16:37:09 -<==      Total: 1
2020-03-10 16:37:09 -耗时 : 19
2020-03-10 16:37:12 -此处进行解密+验签+身份验证
2020-03-10 16:37:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardMposList
2020-03-10 16:37:12 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_mpos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-03-10 16:37:12 -==> Parameters: 181(String), 20200301(String), 20200331(String), 181(String), 20200301(String), 20200331(String)
2020-03-10 16:37:12 -<==      Total: 0
2020-03-10 16:37:12 -耗时 : 16
2020-03-10 16:37:13 -此处进行解密+验签+身份验证
2020-03-10 16:37:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:13 -此处进行解密+验签+身份验证
2020-03-10 16:37:13 -此处进行解密+验签+身份验证
2020-03-10 16:37:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 16:37:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 16:37:13 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-10 16:37:13 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-10 16:37:13 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-10 16:37:13 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-10 16:37:13 -==> Parameters: 181(String)
2020-03-10 16:37:13 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 16:37:13 -==> Parameters: 181(String), 202003(String)
2020-03-10 16:37:13 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-10 16:37:13 -==> Parameters: 181(String), 202003(String)
2020-03-10 16:37:13 -<==      Total: 1
2020-03-10 16:37:13 -耗时 : 17
2020-03-10 16:37:13 -<==      Total: 1
2020-03-10 16:37:13 -耗时 : 19
2020-03-10 16:37:13 -<==      Total: 1
2020-03-10 16:37:13 -耗时 : 19
2020-03-10 17:56:04 -Starting LongEcologicalApplication on PC-201905161910 with PID 15380 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-10 17:56:04 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-10 17:56:04 -No active profile set, falling back to default profiles: default
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 17:56:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 17:56:05 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 17:56:05 -Finished Spring Data repository scanning in 105ms. Found 0 repository interfaces.
2020-03-10 17:56:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 17:56:05 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 17:56:05 -Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2020-03-10 17:56:06 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$98781fbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 17:56:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92fc045e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 17:56:06 -Tomcat initialized with port(s): 8080 (http)
2020-03-10 17:56:06 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 17:56:06 -Starting service [Tomcat]
2020-03-10 17:56:06 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-10 17:56:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-10 17:56:06 -Initializing Spring embedded WebApplicationContext
2020-03-10 17:56:06 -Root WebApplicationContext: initialization completed in 2130 ms
2020-03-10 17:56:06 -Filter xssFilter was not registered (disabled)
2020-03-10 17:56:07 -HikariPool-1 - Starting...
2020-03-10 17:56:07 -HikariPool-1 - Start completed.
2020-03-10 17:56:07 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-10 17:56:07 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-10 17:56:07 -HHH000206: hibernate.properties not found
2020-03-10 17:56:07 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-10 17:56:07 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-10 17:56:07 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-10 17:56:08 -Using default implementation for ThreadExecutor
2020-03-10 17:56:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-10 17:56:08 -Quartz Scheduler v.2.3.0 created.
2020-03-10 17:56:08 -RAMJobStore initialized.
2020-03-10 17:56:08 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-10 17:56:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-10 17:56:08 -Quartz scheduler version: 2.3.0
2020-03-10 17:56:08 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@46cf8c07
2020-03-10 17:56:08 -STAET TaskExecutorConfig
2020-03-10 17:56:08 -Initializing ExecutorService
2020-03-10 17:56:08 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-10 17:56:09 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-10 17:56:09 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-10 17:56:09 -Initializing ExecutorService 'taskScheduler'
2020-03-10 17:56:09 -Starting Quartz Scheduler now
2020-03-10 17:56:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-10 17:56:09 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 17:56:09 -Using a shared selector for servlet write/read
2020-03-10 17:56:09 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-10 17:56:09 -Started LongEcologicalApplication in 5.625 seconds (JVM running for 6.692)
2020-03-10 18:22:18 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 18:22:18 -Initializing Servlet 'dispatcherServlet'
2020-03-10 18:22:18 -Completed initialization in 12 ms
2020-03-10 18:22:18 -此处进行解密+验签+身份验证
2020-03-10 18:22:18 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 18:22:18 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 18:22:18 -Starting without optional epoll library
2020-03-10 18:22:18 -Starting without optional kqueue library
2020-03-10 18:22:18 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 18:22:18 -耗时 : 767
2020-03-10 18:22:27 -此处进行解密+验签+身份验证
2020-03-10 18:22:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:22:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:22:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 18:22:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 18:22:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@56dfb233 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@57930ac5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7cf6742e (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3812a7ea (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@6eceb8d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@49661cb7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@67e56b1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2b7e9c63 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@4a2fba02 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@33559454 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-10 18:22:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 18:22:27 -==> Parameters: 181(String), 181(String)
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:22:27 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:22:27 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 18:22:27 -<==    Updates: 1
2020-03-10 18:22:27 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 18:22:27 -==> Parameters: 181(String), 181(String)
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:22:27 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:22:27 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 18:22:27 -<==    Updates: 1
2020-03-10 18:22:27 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 18:22:27 -==> Parameters: 
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:22:27 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:22:27 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 18:22:27 -<==    Updates: 1
2020-03-10 18:22:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 18:22:27 -==> Parameters: 181(String), 181(String)
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:22:27 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 18:22:27 -<==      Total: 1
2020-03-10 18:22:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:22:27 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 18:22:27 -<==    Updates: 1
2020-03-10 18:22:27 -耗时 : 338
2020-03-10 18:22:39 -此处进行解密+验签+身份验证
2020-03-10 18:22:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:22:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:22:39 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-10 18:22:39 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-10 18:22:39 -==> Parameters: 181(String)
2020-03-10 18:22:39 -<==      Total: 1004
2020-03-10 18:22:39 -耗时 : 92
2020-03-10 18:22:40 -此处进行解密+验签+身份验证
2020-03-10 18:22:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:22:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:22:40 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-10 18:22:40 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-10 18:22:40 -==> Parameters: 181(String), MPOS(String)
2020-03-10 18:22:40 -<==      Total: 7
2020-03-10 18:22:40 -耗时 : 23
2020-03-10 18:22:43 -此处进行解密+验签+身份验证
2020-03-10 18:22:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:22:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:22:43 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-10 18:22:43 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-10 18:22:43 -==> Parameters: 181(String), TraditionalPOS(String)
2020-03-10 18:22:43 -<==      Total: 10
2020-03-10 18:22:43 -耗时 : 23
2020-03-10 18:23:02 -此处进行解密+验签+身份验证
2020-03-10 18:23:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:23:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:23:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 18:23:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 18:23:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 18:23:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 18:23:02 -==> Parameters: 181(String), 181(String)
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:23:02 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:23:02 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 18:23:02 -<==    Updates: 1
2020-03-10 18:23:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 18:23:02 -==> Parameters: 181(String), 181(String)
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:23:02 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:23:02 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 18:23:02 -<==    Updates: 1
2020-03-10 18:23:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 18:23:02 -==> Parameters: 
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:23:02 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:23:02 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 18:23:02 -<==    Updates: 1
2020-03-10 18:23:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 18:23:02 -==> Parameters: 181(String), 181(String)
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:23:02 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 18:23:02 -<==      Total: 1
2020-03-10 18:23:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:23:02 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 18:23:02 -<==    Updates: 1
2020-03-10 18:23:02 -耗时 : 195
2020-03-10 18:23:06 -此处进行解密+验签+身份验证
2020-03-10 18:23:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:23:06 -此处进行解密+验签+身份验证
2020-03-10 18:23:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:23:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:23:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:23:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-10 18:23:06 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-10 18:23:06 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 18:23:06 -==> Parameters: 181(String)
2020-03-10 18:23:06 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-10 18:23:06 -==> Parameters: 181(String)
2020-03-10 18:23:06 -<==      Total: 1
2020-03-10 18:23:06 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 18:23:06 -==> Parameters: 181(String)
2020-03-10 18:23:06 -<==      Total: 10
2020-03-10 18:23:06 -耗时 : 27
2020-03-10 18:23:06 -<==      Total: 1
2020-03-10 18:23:06 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 18:23:06 -==> Parameters: 181(String)
2020-03-10 18:23:06 -<==      Total: 1
2020-03-10 18:23:06 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-10 18:23:06 -==> Parameters: 181(String)
2020-03-10 18:23:06 -<==      Total: 0
2020-03-10 18:23:06 -MerchantManageServiceImpl -- getReferAgencyNum方法处理异常：null
	at java.util.HashMap.putMapEntries(HashMap.java:501)
	at java.util.HashMap.putAll(HashMap.java:785)
	at com.example.longecological.service.merchant.impl.MerchantManageServiceImpl.getReferAgencyNum(MerchantManageServiceImpl.java:400)
	at com.example.longecological.controller.merchant.MerchantManageController.getReferAgencyNum(MerchantManageController.java:178)
	at com.example.longecological.controller.merchant.MerchantManageController$$FastClassBySpringCGLIB$$43a1d8e6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.merchant.MerchantManageController$$EnhancerBySpringCGLIB$$e8334ec4.getReferAgencyNum(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 18:23:06 -耗时 : 68
2020-03-10 18:23:13 -此处进行解密+验签+身份验证
2020-03-10 18:23:13 -此处进行解密+验签+身份验证
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:23:13 -此处进行解密+验签+身份验证
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:23:13 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1977
2020-03-10 18:23:13 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-10 18:23:13 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-10 18:23:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1977
2020-03-10 18:23:13 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1977 ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=1977 and cre_month=202003 and pos_type is null 
2020-03-10 18:23:13 -==> Parameters: 
2020-03-10 18:23:13 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-03-10 18:23:13 -==> Parameters: 1977(String)
2020-03-10 18:23:13 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-03-10 18:23:13 -==> Parameters: 1977(String)
2020-03-10 18:23:13 -<==      Total: 1
2020-03-10 18:23:13 -<==      Total: 1
2020-03-10 18:23:13 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_epos_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1977 ),2) as char),'0') as avg_epos_performance from t_summary_traditional_pos_trans_month where user_id=1977 and cre_month=202003 and pos_type='epos' 
2020-03-10 18:23:13 -==> Parameters: 
2020-03-10 18:23:13 -<==      Total: 1
2020-03-10 18:23:13 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_1977,save content:{referer_id=181, parent_chain=181, user_tel=13316581928, id_card=362525197809264239, real_name=张河清, algebra=2, cre_date=20191109, cre_time=122727, login_password=560dc10b23f03c7c829a70165a5e3dca, manager_id=26, pay_password=82d63dafbd3361e15b134721350579c6, id=1977, auth_status=09, status=0}
2020-03-10 18:23:13 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? 
2020-03-10 18:23:13 -==> Parameters: 1977(String)
2020-03-10 18:23:13 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_1977,save content:{referer_id=181, parent_chain=181, user_tel=13316581928, id_card=362525197809264239, real_name=张河清, algebra=2, cre_date=20191109, cre_time=122727, login_password=560dc10b23f03c7c829a70165a5e3dca, manager_id=26, pay_password=82d63dafbd3361e15b134721350579c6, id=1977, auth_status=09, status=0}
2020-03-10 18:23:13 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-10 18:23:13 -==> Parameters: 1977(String), 1977(String)
2020-03-10 18:23:13 -<==      Total: 1
2020-03-10 18:23:13 -耗时 : 44
2020-03-10 18:23:13 -<==      Total: 1
2020-03-10 18:23:13 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 18:23:13 -==> Parameters: 1977(String)
2020-03-10 18:23:13 -<==      Total: 9
2020-03-10 18:23:13 -耗时 : 54
2020-03-10 18:23:13 -<==      Total: 1
2020-03-10 18:23:13 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=1977 
2020-03-10 18:23:13 -==> Parameters: 
2020-03-10 18:23:13 -<==      Total: 1
2020-03-10 18:23:13 -耗时 : 84
2020-03-10 18:27:34 -此处进行解密+验签+身份验证
2020-03-10 18:27:34 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 18:27:34 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 18:27:34 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 18:27:34 -耗时 : 8
2020-03-10 18:27:46 -此处进行解密+验签+身份验证
2020-03-10 18:27:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:27:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:27:47 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-10 18:27:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_181
2020-03-10 18:27:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_181 , return
2020-03-10 18:27:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 18:27:47 -==> Parameters: 181(String), 181(String)
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:27:47 -==> Parameters: applyRateFlag(String), 181(String)
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:27:47 -==> Parameters: 13(Integer), 13(Integer), 181(String), applyRateFlag(String)
2020-03-10 18:27:47 -<==    Updates: 1
2020-03-10 18:27:47 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-10 18:27:47 -==> Parameters: 181(String), 181(String)
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:27:47 -==> Parameters: recallFlag(String), 181(String)
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:27:47 -==> Parameters: 0(Integer), 0(Integer), 181(String), recallFlag(String)
2020-03-10 18:27:47 -<==    Updates: 1
2020-03-10 18:27:47 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-10 18:27:47 -==> Parameters: 
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:27:47 -==> Parameters: collegeFlag(String), 181(String)
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:27:47 -==> Parameters: 15(Integer), 15(Integer), 181(String), collegeFlag(String)
2020-03-10 18:27:47 -<==    Updates: 1
2020-03-10 18:27:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-10 18:27:47 -==> Parameters: 181(String), 181(String)
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-10 18:27:47 -==> Parameters: cardFlag(String), 181(String)
2020-03-10 18:27:47 -<==      Total: 1
2020-03-10 18:27:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-10 18:27:47 -==> Parameters: 13(Integer), 13(Integer), 181(String), cardFlag(String)
2020-03-10 18:27:47 -<==    Updates: 1
2020-03-10 18:27:47 -耗时 : 218
2020-03-10 18:28:01 -此处进行解密+验签+身份验证
2020-03-10 18:28:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:28:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:28:01 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-10 18:28:01 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-03-10 18:28:01 -==> Parameters: 181(String)
2020-03-10 18:28:01 -<==      Total: 1
2020-03-10 18:28:01 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-03-10 18:28:01 -==> Parameters: 181(String), 181(String), 202003(String)
2020-03-10 18:28:01 -<==      Total: 1
2020-03-10 18:28:01 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-10 18:28:01 -==> Parameters: 181(String), 181(String), 20200209(String), 20200310(String), 181(String)
2020-03-10 18:28:01 -<==      Total: 1
2020-03-10 18:28:01 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-10 18:28:01 -==> Parameters: 181(String), 20200110(String), 181(String), 20200110(String), 20200310(String), 181(String)
2020-03-10 18:28:01 -<==      Total: 1
2020-03-10 18:28:01 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-03-10 18:28:01 -==> Parameters: 181(String)
2020-03-10 18:28:01 -<==      Total: 1
2020-03-10 18:28:01 -耗时 : 133
2020-03-10 18:28:28 -此处进行解密+验签+身份验证
2020-03-10 18:28:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:28:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:28:28 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getAllMerchantTraditionalPosList
2020-03-10 18:28:28 -==>  Preparing: SELECT cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, t1.name, t1.tel FROM t_user_traditional_pos_info t LEFT JOIN t_sys_traditional_pos_info t1 on t.sn = t1.sn WHERE t.user_id = ? AND t.state_status = '1' AND t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-10 18:28:28 -==> Parameters: 181(String)
2020-03-10 18:28:28 -<==      Total: 10
2020-03-10 18:28:28 -耗时 : 23
2020-03-10 18:28:30 -此处进行解密+验签+身份验证
2020-03-10 18:28:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:28:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:28:30 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosDetail
2020-03-10 18:28:30 -==>  Preparing: select t.sn, t.card_settle_price_vip, t.card_settle_price, t.weixin_settle_price, t.zhifubao_settle_price, t.cloud_settle_price, t.single_profit_rate, t.cash_back_rate, t.mer_cap_fee, t1.mer_name, t1.mer_id, t1.name, t1.tel, t1.credit_card_rate, t1.cloud_flash_rate, t1.weixin_rate, t1.zhifubao_rate, t1.act_status, t1.cash_back_status from t_user_traditional_pos_info t left join t_sys_traditional_pos_info t1 on t1.sn = t.sn where t.user_id = ? and t.sn = ? 
2020-03-10 18:28:30 -==> Parameters: 181(String), T20191221084(String)
2020-03-10 18:28:30 -<==      Total: 1
2020-03-10 18:28:30 -==>  Preparing: select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info where sn=? and isuse=1 and module_type=1 
2020-03-10 18:28:30 -==> Parameters: T20191221084(String)
2020-03-10 18:28:30 -<==      Total: 1
2020-03-10 18:28:30 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? 
2020-03-10 18:28:30 -==> Parameters: T20191221084(String)
2020-03-10 18:28:30 -<==      Total: 1
2020-03-10 18:28:30 -==>  Preparing: select cast(performance as char) as performance,cast(num as char) as num FROM t_summary_traditional_pos_trans_all where 1=1 and sn=? and user_id=? 
2020-03-10 18:28:30 -==> Parameters: T20191221084(String), 181(String)
2020-03-10 18:28:30 -<==      Total: 1
2020-03-10 18:28:30 -耗时 : 72
2020-03-10 18:28:42 -此处进行解密+验签+身份验证
2020-03-10 18:28:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:28:42 -此处进行解密+验签+身份验证
2020-03-10 18:28:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:28:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:28:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:28:42 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-10 18:28:42 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-10 18:28:42 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-10 18:28:42 -==> Parameters: 181(String)
2020-03-10 18:28:42 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 18:28:42 -==> Parameters: 181(String)
2020-03-10 18:28:42 -<==      Total: 10
2020-03-10 18:28:42 -耗时 : 22
2020-03-10 18:28:42 -<==      Total: 1
2020-03-10 18:28:42 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 18:28:42 -==> Parameters: 181(String)
2020-03-10 18:28:42 -<==      Total: 1
2020-03-10 18:28:42 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 18:28:42 -==> Parameters: 181(String)
2020-03-10 18:28:42 -<==      Total: 1
2020-03-10 18:28:42 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-10 18:28:42 -==> Parameters: 181(String)
2020-03-10 18:28:42 -<==      Total: 0
2020-03-10 18:28:42 -MerchantManageServiceImpl -- getReferAgencyNum方法处理异常：null
	at java.util.HashMap.putMapEntries(HashMap.java:501)
	at java.util.HashMap.putAll(HashMap.java:785)
	at com.example.longecological.service.merchant.impl.MerchantManageServiceImpl.getReferAgencyNum(MerchantManageServiceImpl.java:400)
	at com.example.longecological.controller.merchant.MerchantManageController.getReferAgencyNum(MerchantManageController.java:178)
	at com.example.longecological.controller.merchant.MerchantManageController$$FastClassBySpringCGLIB$$43a1d8e6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.merchant.MerchantManageController$$EnhancerBySpringCGLIB$$e8334ec4.getReferAgencyNum(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 18:28:42 -耗时 : 75
2020-03-10 18:32:23 -此处进行解密+验签+身份验证
2020-03-10 18:32:23 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 18:32:23 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 18:32:23 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 18:32:23 -耗时 : 8
2020-03-10 18:32:24 -此处进行解密+验签+身份验证
2020-03-10 18:32:24 -此处进行解密+验签+身份验证
2020-03-10 18:32:24 -此处进行解密+验签+身份验证
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:32:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 18:32:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-10 18:32:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-10 18:32:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 18:32:24 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1952 ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=1952 and cre_month=202003 and pos_type is null 
2020-03-10 18:32:24 -==> Parameters: 
2020-03-10 18:32:24 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-03-10 18:32:24 -==> Parameters: 1952(String)
2020-03-10 18:32:24 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-03-10 18:32:24 -==> Parameters: 1952(String)
2020-03-10 18:32:24 -<==      Total: 1
2020-03-10 18:32:24 -<==      Total: 1
2020-03-10 18:32:24 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_epos_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1952 ),2) as char),'0') as avg_epos_performance from t_summary_traditional_pos_trans_month where user_id=1952 and cre_month=202003 and pos_type='epos' 
2020-03-10 18:32:24 -==> Parameters: 
2020-03-10 18:32:24 -<==      Total: 1
2020-03-10 18:32:24 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_1952,save content:{referer_id=181, parent_chain=181, user_tel=13265593759, id_card=331122199512215155, real_name=施嘉诚, algebra=2, cre_date=20191105, cre_time=181938, login_password=ae2ee364801f6c4ebb320079eefcbe6f, manager_id=26, pay_password=bd2717793753ebf4e9599ad0825fbfec, id=1952, auth_status=09, status=0}
2020-03-10 18:32:24 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? 
2020-03-10 18:32:24 -==> Parameters: 1952(String)
2020-03-10 18:32:24 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_1952,save content:{referer_id=181, parent_chain=181, user_tel=13265593759, id_card=331122199512215155, real_name=施嘉诚, algebra=2, cre_date=20191105, cre_time=181938, login_password=ae2ee364801f6c4ebb320079eefcbe6f, manager_id=26, pay_password=bd2717793753ebf4e9599ad0825fbfec, id=1952, auth_status=09, status=0}
2020-03-10 18:32:24 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-10 18:32:24 -==> Parameters: 1952(String), 1952(String)
2020-03-10 18:32:24 -<==      Total: 1
2020-03-10 18:32:24 -<==      Total: 1
2020-03-10 18:32:24 -耗时 : 43
2020-03-10 18:32:24 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 18:32:24 -==> Parameters: 1952(String)
2020-03-10 18:32:24 -<==      Total: 7
2020-03-10 18:32:24 -耗时 : 49
2020-03-10 18:32:24 -<==      Total: 1
2020-03-10 18:32:24 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=1952 
2020-03-10 18:32:24 -==> Parameters: 
2020-03-10 18:32:24 -<==      Total: 1
2020-03-10 18:32:24 -耗时 : 77
2020-03-10 18:33:23 -此处进行解密+验签+身份验证
2020-03-10 18:33:23 -此处进行解密+验签+身份验证
2020-03-10 18:33:23 -此处进行解密+验签+身份验证
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:33:23 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMPosTradeAmountAvg
2020-03-10 18:33:23 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyMposList
2020-03-10 18:33:23 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadMposInfo
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 18:33:23 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_mpos_benefit_all where user_id=1952 ),2) as char),'0') as avg_performance from t_summary_mpos_trans_month where user_id=1952 and cre_month=202003 
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 18:33:23 -==> Parameters: 
2020-03-10 18:33:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 18:33:23 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_mpos_benefit_all where user_id = ? 
2020-03-10 18:33:23 -==> Parameters: 1952(String)
2020-03-10 18:33:23 -==>  Preparing: select cast(t.id as char) as mpos_id, t.sn, t1.name, cast(t2.performance as char) performance,t.state_status from t_user_mpos_info t inner join t_sys_mpos_info t1 on t1.sn = t.sn inner join t_summary_mpos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-10 18:33:23 -==> Parameters: 1952(String), 1952(String)
2020-03-10 18:33:23 -<==      Total: 1
2020-03-10 18:33:23 -耗时 : 35
2020-03-10 18:33:23 -<==      Total: 1
2020-03-10 18:33:23 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 18:33:23 -==> Parameters: 1952(String)
2020-03-10 18:33:23 -<==      Total: 1
2020-03-10 18:33:23 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_mpos_trans_all where user_id=1952 
2020-03-10 18:33:23 -==> Parameters: 
2020-03-10 18:33:23 -<==      Total: 0
2020-03-10 18:33:23 -耗时 : 59
2020-03-10 18:33:23 -<==      Total: 1
2020-03-10 18:33:23 -耗时 : 74
2020-03-10 18:57:17 -Starting LongEcologicalApplication on PC-201905161910 with PID 11880 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-10 18:57:17 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-10 18:57:17 -No active profile set, falling back to default profiles: default
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 18:57:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 18:57:18 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 18:57:18 -Finished Spring Data repository scanning in 94ms. Found 0 repository interfaces.
2020-03-10 18:57:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 18:57:18 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 18:57:18 -Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-03-10 18:57:18 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$4033e15d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 18:57:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3ab7c5fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 18:57:19 -Tomcat initialized with port(s): 8080 (http)
2020-03-10 18:57:19 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 18:57:19 -Starting service [Tomcat]
2020-03-10 18:57:19 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-10 18:57:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-10 18:57:19 -Initializing Spring embedded WebApplicationContext
2020-03-10 18:57:19 -Root WebApplicationContext: initialization completed in 2119 ms
2020-03-10 18:57:19 -Filter xssFilter was not registered (disabled)
2020-03-10 18:57:19 -HikariPool-1 - Starting...
2020-03-10 18:57:20 -HikariPool-1 - Start completed.
2020-03-10 18:57:20 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-10 18:57:20 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-10 18:57:20 -HHH000206: hibernate.properties not found
2020-03-10 18:57:20 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-10 18:57:20 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-10 18:57:20 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-10 18:57:21 -Using default implementation for ThreadExecutor
2020-03-10 18:57:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-10 18:57:21 -Quartz Scheduler v.2.3.0 created.
2020-03-10 18:57:21 -RAMJobStore initialized.
2020-03-10 18:57:21 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-10 18:57:21 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-10 18:57:21 -Quartz scheduler version: 2.3.0
2020-03-10 18:57:21 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@57b9389f
2020-03-10 18:57:21 -STAET TaskExecutorConfig
2020-03-10 18:57:21 -Initializing ExecutorService
2020-03-10 18:57:21 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-10 18:57:21 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-10 18:57:22 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-10 18:57:22 -Initializing ExecutorService 'taskScheduler'
2020-03-10 18:57:22 -Starting Quartz Scheduler now
2020-03-10 18:57:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-10 18:57:22 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 18:57:22 -Using a shared selector for servlet write/read
2020-03-10 18:57:22 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-10 18:57:22 -Started LongEcologicalApplication in 5.752 seconds (JVM running for 7.027)
2020-03-10 18:57:50 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 18:57:50 -Initializing Servlet 'dispatcherServlet'
2020-03-10 18:57:50 -Completed initialization in 12 ms
2020-03-10 18:57:50 -此处进行解密+验签+身份验证
2020-03-10 18:57:50 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 18:57:50 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 18:57:50 -Starting without optional epoll library
2020-03-10 18:57:50 -Starting without optional kqueue library
2020-03-10 18:57:51 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 18:57:51 -耗时 : 754
2020-03-10 18:57:54 -此处进行解密+验签+身份验证
2020-03-10 18:57:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:57:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:57:54 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosDetail
2020-03-10 18:57:54 -==>  Preparing: select t.sn, t.card_settle_price_vip, t.card_settle_price, t.weixin_settle_price, t.zhifubao_settle_price, t.cloud_settle_price, t.single_profit_rate, t.cash_back_rate, t.mer_cap_fee, t1.mer_name, t1.mer_id, t1.name, t1.tel, t1.credit_card_rate, t1.cloud_flash_rate, t1.weixin_rate, t1.zhifubao_rate, t1.act_status, t1.cash_back_status from t_user_traditional_pos_info t left join t_sys_traditional_pos_info t1 on t1.sn = t.sn where t.user_id = ? and t.sn = ? 
2020-03-10 18:57:54 -==> Parameters: 181(String), 000006027280394257(String)
2020-03-10 18:57:54 -<==      Total: 1
2020-03-10 18:57:54 -==>  Preparing: select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info where sn=? and isuse=1 and module_type=1 
2020-03-10 18:57:54 -==> Parameters: 000006027280394257(String)
2020-03-10 18:57:54 -<==      Total: 0
2020-03-10 18:57:54 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? 
2020-03-10 18:57:54 -==> Parameters: 000006027280394257(String)
2020-03-10 18:57:54 -<==      Total: 1
2020-03-10 18:57:54 -==>  Preparing: select cast(performance as char) as performance,cast(num as char) as num FROM t_summary_traditional_pos_trans_all where 1=1 and sn=? and user_id=? 
2020-03-10 18:57:54 -==> Parameters: 000006027280394257(String), 181(String)
2020-03-10 18:57:54 -<==      Total: 1
2020-03-10 18:57:54 -耗时 : 91
2020-03-10 18:58:04 -此处进行解密+验签+身份验证
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:58:04 -此处进行解密+验签+身份验证
2020-03-10 18:58:04 -此处进行解密+验签+身份验证
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:58:04 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-10 18:58:04 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1952 ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=1952 and cre_month=202003 and pos_type is null 
2020-03-10 18:58:04 -==> Parameters: 
2020-03-10 18:58:04 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 18:58:04 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 18:58:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 18:58:04 -<==      Total: 1
2020-03-10 18:58:04 -耗时 : 17
2020-03-10 18:58:04 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' and t1.pos_type is null ORDER BY t.id desc limit 0,10 
2020-03-10 18:58:04 -==> Parameters: 1952(String), 1952(String)
2020-03-10 18:58:04 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-10 18:58:04 -==> Parameters: 1952(String)
2020-03-10 18:58:04 -<==      Total: 7
2020-03-10 18:58:04 -耗时 : 24
2020-03-10 18:58:04 -<==      Total: 1
2020-03-10 18:58:04 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 18:58:04 -==> Parameters: 1952(String)
2020-03-10 18:58:04 -<==      Total: 1
2020-03-10 18:58:04 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=1952 
2020-03-10 18:58:04 -==> Parameters: 
2020-03-10 18:58:04 -<==      Total: 1
2020-03-10 18:58:04 -耗时 : 63
2020-03-10 18:59:37 -此处进行解密+验签+身份验证
2020-03-10 18:59:37 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 18:59:37 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 18:59:37 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 18:59:37 -耗时 : 9
2020-03-10 18:59:45 -此处进行解密+验签+身份验证
2020-03-10 18:59:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:59:45 -此处进行解密+验签+身份验证
2020-03-10 18:59:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 18:59:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:59:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 18:59:45 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-10 18:59:45 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-10 18:59:45 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-10 18:59:45 -==> Parameters: 181(String)
2020-03-10 18:59:45 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 18:59:45 -==> Parameters: 181(String)
2020-03-10 18:59:45 -<==      Total: 10
2020-03-10 18:59:45 -耗时 : 12
2020-03-10 18:59:45 -<==      Total: 1
2020-03-10 18:59:45 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 18:59:45 -==> Parameters: 181(String)
2020-03-10 18:59:45 -<==      Total: 1
2020-03-10 18:59:45 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 18:59:45 -==> Parameters: 181(String)
2020-03-10 18:59:45 -<==      Total: 1
2020-03-10 18:59:45 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-10 18:59:45 -==> Parameters: 181(String)
2020-03-10 18:59:45 -<==      Total: 0
2020-03-10 18:59:45 -MerchantManageServiceImpl -- getReferAgencyNum方法处理异常：null
	at java.util.HashMap.putMapEntries(HashMap.java:501)
	at java.util.HashMap.putAll(HashMap.java:785)
	at com.example.longecological.service.merchant.impl.MerchantManageServiceImpl.getReferAgencyNum(MerchantManageServiceImpl.java:400)
	at com.example.longecological.controller.merchant.MerchantManageController.getReferAgencyNum(MerchantManageController.java:178)
	at com.example.longecological.controller.merchant.MerchantManageController$$FastClassBySpringCGLIB$$43a1d8e6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.merchant.MerchantManageController$$EnhancerBySpringCGLIB$$160423f6.getReferAgencyNum(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 18:59:45 -耗时 : 58
2020-03-10 19:02:38 -此处进行解密+验签+身份验证
2020-03-10 19:02:38 -此处进行解密+验签+身份验证
2020-03-10 19:02:38 -此处进行解密+验签+身份验证
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:02:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-10 19:02:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1977
2020-03-10 19:02:38 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1977 ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=1977 and cre_month=202003 and pos_type is null 
2020-03-10 19:02:38 -==> Parameters: 
2020-03-10 19:02:38 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1977
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1977 , return
2020-03-10 19:02:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1977 , return
2020-03-10 19:02:38 -<==      Total: 1
2020-03-10 19:02:38 -耗时 : 15
2020-03-10 19:02:38 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' and t1.pos_type is null ORDER BY t.id desc limit 0,10 
2020-03-10 19:02:38 -==> Parameters: 1977(String), 1977(String)
2020-03-10 19:02:38 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-10 19:02:38 -==> Parameters: 1977(String)
2020-03-10 19:02:38 -<==      Total: 9
2020-03-10 19:02:38 -耗时 : 24
2020-03-10 19:02:38 -<==      Total: 1
2020-03-10 19:02:38 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 19:02:38 -==> Parameters: 1977(String)
2020-03-10 19:02:38 -<==      Total: 1
2020-03-10 19:02:38 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=1977 
2020-03-10 19:02:38 -==> Parameters: 
2020-03-10 19:02:38 -<==      Total: 1
2020-03-10 19:02:38 -耗时 : 56
2020-03-10 19:02:50 -此处进行解密+验签+身份验证
2020-03-10 19:02:50 -此处进行解密+验签+身份验证
2020-03-10 19:02:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:02:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:02:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:02:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:02:50 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-10 19:02:50 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-10 19:02:50 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-10 19:02:50 -==> Parameters: 181(String)
2020-03-10 19:02:50 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 19:02:50 -==> Parameters: 181(String)
2020-03-10 19:02:50 -<==      Total: 10
2020-03-10 19:02:50 -耗时 : 10
2020-03-10 19:02:50 -<==      Total: 1
2020-03-10 19:02:50 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 19:02:50 -==> Parameters: 181(String)
2020-03-10 19:02:50 -<==      Total: 1
2020-03-10 19:02:50 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 19:02:50 -==> Parameters: 181(String)
2020-03-10 19:02:50 -<==      Total: 1
2020-03-10 19:02:50 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-10 19:02:50 -==> Parameters: 181(String)
2020-03-10 19:02:50 -<==      Total: 0
2020-03-10 19:02:50 -MerchantManageServiceImpl -- getReferAgencyNum方法处理异常：null
	at java.util.HashMap.putMapEntries(HashMap.java:501)
	at java.util.HashMap.putAll(HashMap.java:785)
	at com.example.longecological.service.merchant.impl.MerchantManageServiceImpl.getReferAgencyNum(MerchantManageServiceImpl.java:400)
	at com.example.longecological.controller.merchant.MerchantManageController.getReferAgencyNum(MerchantManageController.java:178)
	at com.example.longecological.controller.merchant.MerchantManageController$$FastClassBySpringCGLIB$$43a1d8e6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.merchant.MerchantManageController$$EnhancerBySpringCGLIB$$160423f6.getReferAgencyNum(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-10 19:02:50 -耗时 : 53
2020-03-10 19:05:11 -Starting LongEcologicalApplication on PC-201905161910 with PID 4356 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-10 19:05:11 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-10 19:05:11 -No active profile set, falling back to default profiles: default
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:05:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 19:05:12 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 19:05:12 -Finished Spring Data repository scanning in 77ms. Found 0 repository interfaces.
2020-03-10 19:05:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 19:05:12 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 19:05:12 -Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-03-10 19:05:12 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$2e7cf657] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 19:05:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2900daf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 19:05:13 -Tomcat initialized with port(s): 8080 (http)
2020-03-10 19:05:13 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 19:05:13 -Starting service [Tomcat]
2020-03-10 19:05:13 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-10 19:05:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-10 19:05:13 -Initializing Spring embedded WebApplicationContext
2020-03-10 19:05:13 -Root WebApplicationContext: initialization completed in 2228 ms
2020-03-10 19:05:13 -Filter xssFilter was not registered (disabled)
2020-03-10 19:05:13 -HikariPool-1 - Starting...
2020-03-10 19:05:14 -HikariPool-1 - Start completed.
2020-03-10 19:05:14 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-10 19:05:14 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-10 19:05:14 -HHH000206: hibernate.properties not found
2020-03-10 19:05:14 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-10 19:05:14 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-10 19:05:14 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-10 19:05:15 -Using default implementation for ThreadExecutor
2020-03-10 19:05:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-10 19:05:15 -Quartz Scheduler v.2.3.0 created.
2020-03-10 19:05:15 -RAMJobStore initialized.
2020-03-10 19:05:15 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-10 19:05:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-10 19:05:15 -Quartz scheduler version: 2.3.0
2020-03-10 19:05:15 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1491cd6c
2020-03-10 19:05:15 -STAET TaskExecutorConfig
2020-03-10 19:05:15 -Initializing ExecutorService
2020-03-10 19:05:15 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-10 19:05:15 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-10 19:05:16 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-10 19:05:16 -Initializing ExecutorService 'taskScheduler'
2020-03-10 19:05:16 -Starting Quartz Scheduler now
2020-03-10 19:05:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-10 19:05:16 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 19:05:16 -Using a shared selector for servlet write/read
2020-03-10 19:05:16 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-10 19:05:16 -Started LongEcologicalApplication in 5.835 seconds (JVM running for 6.869)
2020-03-10 19:05:25 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 19:05:25 -Initializing Servlet 'dispatcherServlet'
2020-03-10 19:05:25 -Completed initialization in 12 ms
2020-03-10 19:05:25 -此处进行解密+验签+身份验证
2020-03-10 19:05:26 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 19:05:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 19:05:26 -Starting without optional epoll library
2020-03-10 19:05:26 -Starting without optional kqueue library
2020-03-10 19:05:26 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 19:05:26 -耗时 : 766
2020-03-10 19:05:33 -此处进行解密+验签+身份验证
2020-03-10 19:05:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:05:33 -此处进行解密+验签+身份验证
2020-03-10 19:05:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:05:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:05:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:05:33 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-10 19:05:33 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-10 19:05:33 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 19:05:33 -==> Parameters: 181(String)
2020-03-10 19:05:33 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-10 19:05:33 -==> Parameters: 181(String)
2020-03-10 19:05:33 -<==      Total: 10
2020-03-10 19:05:33 -<==      Total: 1
2020-03-10 19:05:33 -耗时 : 52
2020-03-10 19:05:33 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 19:05:33 -==> Parameters: 181(String)
2020-03-10 19:05:33 -<==      Total: 1
2020-03-10 19:05:33 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? 
2020-03-10 19:05:33 -==> Parameters: 181(String)
2020-03-10 19:05:33 -<==      Total: 1
2020-03-10 19:05:33 -耗时 : 73
2020-03-10 19:13:12 -Starting LongEcologicalApplication on PC-201905161910 with PID 14968 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-10 19:13:12 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-10 19:13:12 -No active profile set, falling back to default profiles: default
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-10 19:13:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 19:13:13 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 19:13:13 -Finished Spring Data repository scanning in 80ms. Found 0 repository interfaces.
2020-03-10 19:13:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-10 19:13:13 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-10 19:13:14 -Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-03-10 19:13:14 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$721876c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 19:13:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c9c5b64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-10 19:13:14 -Tomcat initialized with port(s): 8080 (http)
2020-03-10 19:13:14 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 19:13:14 -Starting service [Tomcat]
2020-03-10 19:13:14 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-10 19:13:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-10 19:13:15 -Initializing Spring embedded WebApplicationContext
2020-03-10 19:13:15 -Root WebApplicationContext: initialization completed in 2074 ms
2020-03-10 19:13:15 -Filter xssFilter was not registered (disabled)
2020-03-10 19:13:15 -HikariPool-1 - Starting...
2020-03-10 19:13:15 -HikariPool-1 - Start completed.
2020-03-10 19:13:15 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-10 19:13:15 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-10 19:13:15 -HHH000206: hibernate.properties not found
2020-03-10 19:13:15 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-10 19:13:16 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-10 19:13:16 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-10 19:13:16 -Using default implementation for ThreadExecutor
2020-03-10 19:13:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-10 19:13:16 -Quartz Scheduler v.2.3.0 created.
2020-03-10 19:13:16 -RAMJobStore initialized.
2020-03-10 19:13:16 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-10 19:13:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-10 19:13:16 -Quartz scheduler version: 2.3.0
2020-03-10 19:13:16 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@550c973e
2020-03-10 19:13:17 -STAET TaskExecutorConfig
2020-03-10 19:13:17 -Initializing ExecutorService
2020-03-10 19:13:17 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-10 19:13:17 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-10 19:13:17 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-10 19:13:17 -Initializing ExecutorService 'taskScheduler'
2020-03-10 19:13:17 -Starting Quartz Scheduler now
2020-03-10 19:13:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-10 19:13:17 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 19:13:17 -Using a shared selector for servlet write/read
2020-03-10 19:13:17 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-10 19:13:17 -Started LongEcologicalApplication in 5.58 seconds (JVM running for 6.621)
2020-03-10 19:13:37 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 19:13:37 -Initializing Servlet 'dispatcherServlet'
2020-03-10 19:13:37 -Completed initialization in 11 ms
2020-03-10 19:13:37 -此处进行解密+验签+身份验证
2020-03-10 19:13:37 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-10 19:13:37 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_iOS
2020-03-10 19:13:37 -Starting without optional epoll library
2020-03-10 19:13:37 -Starting without optional kqueue library
2020-03-10 19:13:38 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_iOS , return
2020-03-10 19:13:38 -耗时 : 779
2020-03-10 19:13:43 -此处进行解密+验签+身份验证
2020-03-10 19:13:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:13:43 -此处进行解密+验签+身份验证
2020-03-10 19:13:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:13:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:13:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:13:43 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-10 19:13:43 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-10 19:13:43 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-10 19:13:43 -==> Parameters: 181(String)
2020-03-10 19:13:43 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-10 19:13:43 -==> Parameters: 181(String)
2020-03-10 19:13:43 -<==      Total: 1
2020-03-10 19:13:43 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-10 19:13:43 -==> Parameters: 181(String)
2020-03-10 19:13:43 -<==      Total: 10
2020-03-10 19:13:43 -耗时 : 48
2020-03-10 19:13:43 -<==      Total: 1
2020-03-10 19:13:43 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 19:13:43 -==> Parameters: 181(String)
2020-03-10 19:13:43 -<==      Total: 1
2020-03-10 19:13:43 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as epos_act_num,cast((pos_num-act_num) as char) as epos_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-10 19:13:43 -==> Parameters: 181(String)
2020-03-10 19:13:43 -<==      Total: 0
2020-03-10 19:13:43 -耗时 : 61
2020-03-10 19:13:49 -此处进行解密+验签+身份验证
2020-03-10 19:13:49 -此处进行解密+验签+身份验证
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:13:49 -此处进行解密+验签+身份验证
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:13:49 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-10 19:13:49 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1952 ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=1952 and cre_month=202003 and pos_type is null 
2020-03-10 19:13:49 -==> Parameters: 
2020-03-10 19:13:49 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-10 19:13:49 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 19:13:49 -<==      Total: 1
2020-03-10 19:13:49 -耗时 : 11
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 19:13:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 19:13:49 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-10 19:13:49 -==> Parameters: 1952(String)
2020-03-10 19:13:49 -<==      Total: 1
2020-03-10 19:13:49 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 19:13:49 -==> Parameters: 1952(String)
2020-03-10 19:13:49 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' and t1.pos_type is null ORDER BY t.id desc limit 0,10 
2020-03-10 19:13:49 -==> Parameters: 1952(String), 1952(String)
2020-03-10 19:13:49 -<==      Total: 1
2020-03-10 19:13:49 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=1952 
2020-03-10 19:13:49 -==> Parameters: 
2020-03-10 19:13:49 -<==      Total: 1
2020-03-10 19:13:49 -耗时 : 39
2020-03-10 19:13:49 -<==      Total: 7
2020-03-10 19:13:49 -耗时 : 44
2020-03-10 19:14:12 -此处进行解密+验签+身份验证
2020-03-10 19:14:12 -此处进行解密+验签+身份验证
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:14:12 -此处进行解密+验签+身份验证
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_181
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_181 , return
2020-03-10 19:14:12 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 19:14:12 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-10 19:14:12 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_1952
2020-03-10 19:14:12 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=1952 ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=1952 and cre_month=202003 and pos_type is null 
2020-03-10 19:14:12 -==> Parameters: 
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 19:14:12 -<==      Total: 1
2020-03-10 19:14:12 -耗时 : 9
2020-03-10 19:14:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_1952 , return
2020-03-10 19:14:12 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-10 19:14:12 -==> Parameters: 1952(String)
2020-03-10 19:14:12 -<==      Total: 1
2020-03-10 19:14:12 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-10 19:14:12 -==> Parameters: 1952(String)
2020-03-10 19:14:12 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn where t.user_id = ? and t.del = '0' and t1.pos_type is null ORDER BY t.id desc limit 0,10 
2020-03-10 19:14:12 -==> Parameters: 1952(String), 1952(String)
2020-03-10 19:14:12 -<==      Total: 1
2020-03-10 19:14:12 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=1952 
2020-03-10 19:14:12 -==> Parameters: 
2020-03-10 19:14:12 -<==      Total: 1
2020-03-10 19:14:12 -耗时 : 41
2020-03-10 19:14:12 -<==      Total: 7
2020-03-10 19:14:12 -耗时 : 40
