2020-03-26 09:37:02 -Starting LongEcologicalApplication on PC-201905161910 with PID 10360 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-26 09:37:02 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-26 09:37:02 -No active profile set, falling back to default profiles: default
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:07 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 09:37:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-26 09:37:08 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-26 09:37:08 -Finished Spring Data repository scanning in 239ms. Found 0 repository interfaces.
2020-03-26 09:37:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-26 09:37:08 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-26 09:37:08 -Finished Spring Data repository scanning in 55ms. Found 0 repository interfaces.
2020-03-26 09:37:09 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$2faab2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-26 09:37:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2a2e9753] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-26 09:37:10 -Tomcat initialized with port(s): 8080 (http)
2020-03-26 09:37:10 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-26 09:37:10 -Starting service [Tomcat]
2020-03-26 09:37:10 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-26 09:37:10 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-26 09:37:11 -Initializing Spring embedded WebApplicationContext
2020-03-26 09:37:11 -Root WebApplicationContext: initialization completed in 9456 ms
2020-03-26 09:37:11 -Filter xssFilter was not registered (disabled)
2020-03-26 09:37:12 -HikariPool-1 - Starting...
2020-03-26 09:37:12 -HikariPool-1 - Start completed.
2020-03-26 09:37:13 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-26 09:37:13 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-26 09:37:13 -HHH000206: hibernate.properties not found
2020-03-26 09:37:14 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-26 09:37:14 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-26 09:37:15 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-26 09:37:16 -Using default implementation for ThreadExecutor
2020-03-26 09:37:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-26 09:37:16 -Quartz Scheduler v.2.3.0 created.
2020-03-26 09:37:16 -RAMJobStore initialized.
2020-03-26 09:37:16 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-26 09:37:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-26 09:37:16 -Quartz scheduler version: 2.3.0
2020-03-26 09:37:16 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6537ac
2020-03-26 09:37:17 -STAET TaskExecutorConfig
2020-03-26 09:37:17 -Initializing ExecutorService
2020-03-26 09:37:17 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-26 09:37:18 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-26 09:37:18 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-26 09:37:19 -Initializing ExecutorService 'taskScheduler'
2020-03-26 09:37:19 -Starting Quartz Scheduler now
2020-03-26 09:37:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-26 09:37:19 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-26 09:37:19 -Using a shared selector for servlet write/read
2020-03-26 09:37:19 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-26 09:37:19 -Started LongEcologicalApplication in 19.72 seconds (JVM running for 24.27)
2020-03-26 09:37:23 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-26 09:37:23 -Initializing Servlet 'dispatcherServlet'
2020-03-26 09:37:23 -Completed initialization in 24 ms
2020-03-26 09:37:23 -此处进行解密+验签+身份验证
2020-03-26 09:37:23 -此处进行解密+验签+身份验证
2020-03-26 09:37:23 -此处进行解密+验签+身份验证
2020-03-26 09:37:23 -此处进行解密+验签+身份验证
2020-03-26 09:37:23 -此处进行解密+验签+身份验证
2020-03-26 09:37:23 -此处进行解密+验签+身份验证
2020-03-26 09:37:23 -此处进行解密+验签+身份验证
2020-03-26 09:37:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:23 -Starting without optional epoll library
2020-03-26 09:37:23 -Starting without optional kqueue library
2020-03-26 09:37:23 -解密：
2020-03-26 09:37:24 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-26 09:37:24 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-26 09:37:24 -==> Parameters: 01(String), 01(String)
2020-03-26 09:37:24 -<==      Total: 4
2020-03-26 09:37:24 -耗时 : 50
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:37:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-26 09:37:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:37:24 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-26 09:37:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:37:24 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-26 09:37:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 09:37:24 -==> Parameters: 
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:37:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:37:24 -<==      Total: 3
2020-03-26 09:37:24 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-26 09:37:24 -耗时 : 8
2020-03-26 09:37:24 -==> Parameters: 426(String)
2020-03-26 09:37:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 09:37:24 -==> Parameters: 426(String)
2020-03-26 09:37:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 09:37:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:37:24 -==> Parameters: 426(String)
2020-03-26 09:37:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:37:24 -<==      Total: 2
2020-03-26 09:37:24 -耗时 : 17
2020-03-26 09:37:24 -==> Parameters: 426(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -耗时 : 17
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -耗时 : 20
2020-03-26 09:37:24 -==> Parameters: 426(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:37:24 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:37:24 -==> Parameters: 426(String), 426(String)
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:37:24 -==> Parameters: 426(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:37:24 -==> Parameters: 
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -==> Parameters: 
2020-03-26 09:37:24 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:37:24 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:37:24 -==> Parameters: 426(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:37:24 -==> Parameters: 426(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:37:24 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -耗时 : 144
2020-03-26 09:37:24 -<==    Updates: 1
2020-03-26 09:37:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:37:24 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:37:24 -<==      Total: 1
2020-03-26 09:37:24 -耗时 : 157
2020-03-26 09:37:30 -此处进行解密+验签+身份验证
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:30 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 09:37:30 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 09:37:30 -==> Parameters: 426(String)
2020-03-26 09:37:30 -<==      Total: 1
2020-03-26 09:37:30 -耗时 : 4
2020-03-26 09:37:30 -此处进行解密+验签+身份验证
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:30 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 09:37:30 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 09:37:30 -==> Parameters: 426(String), 202003(String)
2020-03-26 09:37:30 -此处进行解密+验签+身份验证
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:30 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 09:37:30 -此处进行解密+验签+身份验证
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:30 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:30 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 09:37:30 -<==      Total: 1
2020-03-26 09:37:30 -耗时 : 37
2020-03-26 09:37:30 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 09:37:30 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 09:37:30 -==> Parameters: 426(String), 202003(String)
2020-03-26 09:37:30 -==> Parameters: 426(String), 202003(String)
2020-03-26 09:37:30 -<==      Total: 1
2020-03-26 09:37:30 -<==      Total: 1
2020-03-26 09:37:30 -耗时 : 38
2020-03-26 09:37:30 -耗时 : 41
2020-03-26 09:37:42 -此处进行解密+验签+身份验证
2020-03-26 09:37:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:37:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:37:42 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardEposList
2020-03-26 09:37:42 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type='epos' and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type='03' and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-03-26 09:37:42 -==> Parameters: 426(String), 20200301(String), 20200331(String), 426(String), 20200301(String), 20200331(String)
2020-03-26 09:37:42 -<==      Total: 0
2020-03-26 09:37:42 -耗时 : 13
2020-03-26 09:37:43 -此处进行解密+验签+身份验证
2020-03-26 09:37:43 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"6994C37FADC9DE97FCDAA2A5DE7C5D5A","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP"}
2020-03-26 09:37:43 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-26 09:37:43 -token值=======426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP
2020-03-26 09:37:43 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-26 09:37:43 -==> Parameters: 426(String)
2020-03-26 09:37:43 -<==      Total: 1
2020-03-26 09:37:43 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-26 09:37:43 -==> Parameters: 25(String)
2020-03-26 09:37:43 -<==      Total: 1
2020-03-26 09:37:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 09:37:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 09:37:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 09:37:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 09:37:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 09:37:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 09:37:43 -耗时 : 23
2020-03-26 09:49:01 -此处进行解密+验签+身份验证
2020-03-26 09:49:01 -此处进行解密+验签+身份验证
2020-03-26 09:49:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:49:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:49:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:49:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:49:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:49:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 09:49:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 09:49:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:49:01 -==> Parameters: 426(String)
2020-03-26 09:49:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -耗时 : 2
2020-03-26 09:49:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:49:01 -==> Parameters: 426(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:49:01 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:49:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:49:01 -<==    Updates: 1
2020-03-26 09:49:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:49:01 -==> Parameters: 426(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:49:01 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:49:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:49:01 -<==    Updates: 1
2020-03-26 09:49:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:49:01 -==> Parameters: 
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:49:01 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:49:01 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:49:01 -<==    Updates: 1
2020-03-26 09:49:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:49:01 -==> Parameters: 426(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:49:01 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:49:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:49:01 -<==    Updates: 1
2020-03-26 09:49:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:49:01 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:49:01 -<==      Total: 1
2020-03-26 09:49:01 -耗时 : 65
2020-03-26 09:49:15 -此处进行解密+验签+身份验证
2020-03-26 09:49:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:49:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:49:15 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getActivityRewardTraditionalPosList
2020-03-26 09:49:15 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS record_id,tt.* from ( SELECT t.order_id, t.money, t.sn, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null and t.activity_id is not null and t.cre_date between ? and ? union select t.order_id, t.money, t.sn, t1.policy_name, t.begin_date, t.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime from t_user_trapos_activity_reward_record t INNER JOIN t_sys_pos_policy_define t1 on t.policy_id=t1.id WHERE t.user_id = ? and t.pos_type is null and t.cre_date between ? and ? )tt,(SELECT @rownum:=0) r ORDER BY tt.cre_datetime desc)t limit 0,10 
2020-03-26 09:49:15 -==> Parameters: 426(String), 20200301(String), 20200331(String), 426(String), 20200301(String), 20200331(String)
2020-03-26 09:49:15 -<==      Total: 1
2020-03-26 09:49:15 -耗时 : 15
2020-03-26 09:50:17 -此处进行解密+验签+身份验证
2020-03-26 09:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:17 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:50:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:50:17 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:17 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:17 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:50:17 -此处进行解密+验签+身份验证
2020-03-26 09:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:17 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 09:50:17 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 09:50:17 -==> Parameters: 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -耗时 : 2
2020-03-26 09:50:17 -<==    Updates: 1
2020-03-26 09:50:17 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:50:17 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:17 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:17 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:50:17 -<==    Updates: 1
2020-03-26 09:50:17 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:50:17 -==> Parameters: 
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:17 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:17 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:50:17 -<==    Updates: 1
2020-03-26 09:50:17 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:50:17 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:17 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:17 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:50:17 -<==    Updates: 1
2020-03-26 09:50:17 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:17 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:50:17 -<==      Total: 1
2020-03-26 09:50:17 -耗时 : 67
2020-03-26 09:50:19 -此处进行解密+验签+身份验证
2020-03-26 09:50:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:50:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:50:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:50:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:50:19 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:19 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:19 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:50:19 -<==    Updates: 1
2020-03-26 09:50:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:50:19 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:19 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:19 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:50:19 -<==    Updates: 1
2020-03-26 09:50:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:50:19 -==> Parameters: 
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:19 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:19 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:50:19 -<==    Updates: 1
2020-03-26 09:50:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:50:19 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:19 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:19 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:50:19 -<==    Updates: 1
2020-03-26 09:50:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:19 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:50:19 -<==      Total: 1
2020-03-26 09:50:19 -耗时 : 67
2020-03-26 09:50:45 -此处进行解密+验签+身份验证
2020-03-26 09:50:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:45 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:50:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:50:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:50:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:50:45 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:45 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:45 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:50:45 -<==    Updates: 1
2020-03-26 09:50:45 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:50:45 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:45 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:45 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:50:45 -<==    Updates: 1
2020-03-26 09:50:45 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:50:45 -==> Parameters: 
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:45 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:45 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:50:45 -<==    Updates: 1
2020-03-26 09:50:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:50:45 -==> Parameters: 426(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:45 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:50:45 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:50:45 -<==    Updates: 1
2020-03-26 09:50:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:50:45 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:50:45 -<==      Total: 1
2020-03-26 09:50:45 -耗时 : 65
2020-03-26 09:50:49 -此处进行解密+验签+身份验证
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:49 -此处进行解密+验签+身份验证
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:49 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 09:50:49 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:50:49 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-26 09:50:49 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-26 09:50:49 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:50:49 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:50:49 -<==      Total: 0
2020-03-26 09:50:49 -耗时 : 13
2020-03-26 09:50:49 -<==      Total: 0
2020-03-26 09:50:49 -耗时 : 14
2020-03-26 09:50:49 -此处进行解密+验签+身份验证
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:49 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:50:49 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:50:49 -==> Parameters: 426(String)
2020-03-26 09:50:49 -<==      Total: 0
2020-03-26 09:50:49 -耗时 : 11
2020-03-26 09:50:49 -此处进行解密+验签+身份验证
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:49 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:50:49 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:50:49 -==> Parameters: 426(String)
2020-03-26 09:50:49 -<==      Total: 1
2020-03-26 09:50:49 -耗时 : 9
2020-03-26 09:50:51 -此处进行解密+验签+身份验证
2020-03-26 09:50:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:50:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:50:51 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-26 09:50:51 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:50:51 -==> Parameters: 426(String)
2020-03-26 09:50:51 -<==      Total: 2
2020-03-26 09:50:51 -耗时 : 3
2020-03-26 09:51:03 -此处进行解密+验签+身份验证
2020-03-26 09:51:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:51:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:51:03 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:51:03 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:51:03 -==> Parameters: 426(String)
2020-03-26 09:51:03 -<==      Total: 0
2020-03-26 09:51:03 -耗时 : 7
2020-03-26 09:51:03 -此处进行解密+验签+身份验证
2020-03-26 09:51:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:51:03 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:51:03 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:51:03 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:51:03 -==> Parameters: 426(String)
2020-03-26 09:51:03 -<==      Total: 1
2020-03-26 09:51:03 -耗时 : 6
2020-03-26 09:51:16 -此处进行解密+验签+身份验证
2020-03-26 09:51:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:51:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:51:16 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 09:51:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:51:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:51:16 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type='epos' and ? between start_date and end_date 
2020-03-26 09:51:16 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:51:16 -<==      Total: 0
2020-03-26 09:51:16 -耗时 : 9
2020-03-26 09:51:33 -此处进行解密+验签+身份验证
2020-03-26 09:51:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:51:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:51:33 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 09:51:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:51:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:51:33 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-26 09:51:33 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:51:33 -<==      Total: 0
2020-03-26 09:51:33 -耗时 : 4
2020-03-26 09:52:11 -此处进行解密+验签+身份验证
2020-03-26 09:52:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:11 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:52:11 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:52:11 -==> Parameters: 426(String)
2020-03-26 09:52:11 -<==      Total: 0
2020-03-26 09:52:11 -耗时 : 2
2020-03-26 09:52:20 -此处进行解密+验签+身份验证
2020-03-26 09:52:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:20 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:52:20 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type='epos' order by t.id desc limit 0,10 
2020-03-26 09:52:20 -==> Parameters: 426(String)
2020-03-26 09:52:20 -<==      Total: 0
2020-03-26 09:52:20 -耗时 : 7
2020-03-26 09:52:50 -此处进行解密+验签+身份验证
2020-03-26 09:52:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:50 -此处进行解密+验签+身份验证
2020-03-26 09:52:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:50 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 09:52:50 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 09:52:50 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:52:50 -==> Parameters: 426(String)
2020-03-26 09:52:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -耗时 : 3
2020-03-26 09:52:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:52:50 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:52:50 -==> Parameters: 426(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:52:50 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:52:50 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:52:50 -<==    Updates: 1
2020-03-26 09:52:50 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:52:50 -==> Parameters: 426(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:52:50 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:52:50 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:52:50 -<==    Updates: 1
2020-03-26 09:52:50 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:52:50 -==> Parameters: 
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:52:50 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:52:50 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:52:50 -<==    Updates: 1
2020-03-26 09:52:50 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:52:50 -==> Parameters: 426(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:52:50 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:52:50 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:52:50 -<==    Updates: 1
2020-03-26 09:52:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:52:50 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:52:50 -<==      Total: 1
2020-03-26 09:52:50 -耗时 : 84
2020-03-26 09:52:52 -此处进行解密+验签+身份验证
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:52:52 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-26 09:52:52 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:52:52 -<==      Total: 0
2020-03-26 09:52:52 -耗时 : 4
2020-03-26 09:52:52 -此处进行解密+验签+身份验证
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:52:52 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:52:52 -==> Parameters: 426(String)
2020-03-26 09:52:52 -<==      Total: 1
2020-03-26 09:52:52 -耗时 : 5
2020-03-26 09:52:52 -此处进行解密+验签+身份验证
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:52:52 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-26 09:52:52 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:52:52 -<==      Total: 0
2020-03-26 09:52:52 -耗时 : 8
2020-03-26 09:52:52 -此处进行解密+验签+身份验证
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:52 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:52:52 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:52:52 -==> Parameters: 426(String)
2020-03-26 09:52:52 -<==      Total: 0
2020-03-26 09:52:52 -耗时 : 4
2020-03-26 09:52:59 -此处进行解密+验签+身份验证
2020-03-26 09:52:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:52:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:52:59 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-26 09:52:59 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:52:59 -==> Parameters: 426(String)
2020-03-26 09:52:59 -<==      Total: 2
2020-03-26 09:52:59 -耗时 : 2
2020-03-26 09:53:38 -此处进行解密+验签+身份验证
2020-03-26 09:53:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:53:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:53:38 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:53:38 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:53:38 -==> Parameters: 426(String)
2020-03-26 09:53:38 -<==      Total: 0
2020-03-26 09:53:38 -耗时 : 3
2020-03-26 09:53:38 -此处进行解密+验签+身份验证
2020-03-26 09:53:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:53:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:53:38 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:53:38 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:53:38 -==> Parameters: 426(String)
2020-03-26 09:53:38 -<==      Total: 1
2020-03-26 09:53:38 -耗时 : 3
2020-03-26 09:53:41 -此处进行解密+验签+身份验证
2020-03-26 09:53:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:53:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:53:41 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 09:53:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:53:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:53:41 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type='epos' and ? between start_date and end_date 
2020-03-26 09:53:41 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:53:41 -<==      Total: 0
2020-03-26 09:53:41 -耗时 : 3
2020-03-26 09:53:44 -此处进行解密+验签+身份验证
2020-03-26 09:53:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:53:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:53:44 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-26 09:53:44 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:53:44 -==> Parameters: 426(String)
2020-03-26 09:53:44 -<==      Total: 0
2020-03-26 09:53:44 -耗时 : 23
2020-03-26 09:54:09 -此处进行解密+验签+身份验证
2020-03-26 09:54:09 -此处进行解密+验签+身份验证
2020-03-26 09:54:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:09 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:54:09 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:54:09 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:54:09 -==> Parameters: 426(String)
2020-03-26 09:54:09 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:54:09 -==> Parameters: 426(String)
2020-03-26 09:54:09 -<==      Total: 1
2020-03-26 09:54:09 -耗时 : 3
2020-03-26 09:54:09 -<==      Total: 0
2020-03-26 09:54:09 -耗时 : 3
2020-03-26 09:54:18 -此处进行解密+验签+身份验证
2020-03-26 09:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:18 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-26 09:54:18 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:54:18 -==> Parameters: 426(String)
2020-03-26 09:54:18 -<==      Total: 0
2020-03-26 09:54:18 -耗时 : 3
2020-03-26 09:54:26 -此处进行解密+验签+身份验证
2020-03-26 09:54:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:26 -此处进行解密+验签+身份验证
2020-03-26 09:54:26 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:54:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:26 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:54:26 -==> Parameters: 426(String)
2020-03-26 09:54:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:26 -<==      Total: 1
2020-03-26 09:54:26 -耗时 : 2
2020-03-26 09:54:26 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:54:26 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:54:26 -==> Parameters: 426(String)
2020-03-26 09:54:26 -<==      Total: 0
2020-03-26 09:54:26 -耗时 : 3
2020-03-26 09:54:36 -此处进行解密+验签+身份验证
2020-03-26 09:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:36 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-26 09:54:36 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:54:36 -==> Parameters: 426(String)
2020-03-26 09:54:36 -<==      Total: 0
2020-03-26 09:54:36 -耗时 : 1
2020-03-26 09:54:43 -此处进行解密+验签+身份验证
2020-03-26 09:54:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:43 -此处进行解密+验签+身份验证
2020-03-26 09:54:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:43 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:43 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:54:43 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:54:43 -==> Parameters: 426(String)
2020-03-26 09:54:43 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:54:43 -<==      Total: 1
2020-03-26 09:54:43 -耗时 : 4
2020-03-26 09:54:43 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:54:43 -==> Parameters: 426(String)
2020-03-26 09:54:43 -<==      Total: 0
2020-03-26 09:54:43 -耗时 : 3
2020-03-26 09:54:48 -此处进行解密+验签+身份验证
2020-03-26 09:54:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:48 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 09:54:48 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 09:54:48 -==> Parameters: 426(String)
2020-03-26 09:54:48 -此处进行解密+验签+身份验证
2020-03-26 09:54:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:48 -<==      Total: 1
2020-03-26 09:54:48 -耗时 : 6
2020-03-26 09:54:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 09:54:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:54:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:54:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:54:48 -==> Parameters: 426(String), 426(String)
2020-03-26 09:54:48 -<==      Total: 1
2020-03-26 09:54:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:54:48 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 09:54:48 -<==      Total: 1
2020-03-26 09:54:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:54:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 09:54:48 -<==    Updates: 1
2020-03-26 09:54:48 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 09:54:48 -==> Parameters: 426(String), 426(String)
2020-03-26 09:54:48 -<==      Total: 1
2020-03-26 09:54:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:54:48 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 09:54:48 -<==      Total: 1
2020-03-26 09:54:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:54:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 09:54:48 -<==    Updates: 1
2020-03-26 09:54:48 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 09:54:48 -==> Parameters: 
2020-03-26 09:54:48 -<==      Total: 1
2020-03-26 09:54:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:54:48 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 09:54:48 -<==      Total: 1
2020-03-26 09:54:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:54:48 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 09:54:49 -<==    Updates: 1
2020-03-26 09:54:49 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 09:54:49 -==> Parameters: 426(String), 426(String)
2020-03-26 09:54:49 -<==      Total: 1
2020-03-26 09:54:49 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:54:49 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 09:54:49 -<==      Total: 1
2020-03-26 09:54:49 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 09:54:49 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 09:54:49 -<==    Updates: 1
2020-03-26 09:54:49 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 09:54:49 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 09:54:49 -<==      Total: 1
2020-03-26 09:54:49 -耗时 : 70
2020-03-26 09:54:50 -此处进行解密+验签+身份验证
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:50 -此处进行解密+验签+身份验证
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:50 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-26 09:54:50 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:54:50 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-26 09:54:50 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-26 09:54:50 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:54:50 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:54:50 -<==      Total: 0
2020-03-26 09:54:50 -<==      Total: 0
2020-03-26 09:54:50 -耗时 : 3
2020-03-26 09:54:50 -耗时 : 4
2020-03-26 09:54:50 -此处进行解密+验签+身份验证
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:50 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:54:50 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:54:50 -==> Parameters: 426(String)
2020-03-26 09:54:50 -<==      Total: 1
2020-03-26 09:54:50 -耗时 : 3
2020-03-26 09:54:50 -此处进行解密+验签+身份验证
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:50 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:54:50 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:54:50 -==> Parameters: 426(String)
2020-03-26 09:54:50 -<==      Total: 0
2020-03-26 09:54:50 -耗时 : 5
2020-03-26 09:54:54 -此处进行解密+验签+身份验证
2020-03-26 09:54:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:54:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:54:54 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-26 09:54:54 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:54:54 -==> Parameters: 426(String)
2020-03-26 09:54:54 -<==      Total: 2
2020-03-26 09:54:54 -耗时 : 8
2020-03-26 09:55:06 -此处进行解密+验签+身份验证
2020-03-26 09:55:06 -此处进行解密+验签+身份验证
2020-03-26 09:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:55:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:55:06 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:55:06 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:55:06 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:55:06 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:55:06 -==> Parameters: 426(String)
2020-03-26 09:55:06 -==> Parameters: 426(String)
2020-03-26 09:55:06 -<==      Total: 0
2020-03-26 09:55:06 -<==      Total: 1
2020-03-26 09:55:06 -耗时 : 1
2020-03-26 09:55:06 -耗时 : 1
2020-03-26 09:55:10 -此处进行解密+验签+身份验证
2020-03-26 09:55:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:55:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:55:10 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 09:55:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 09:55:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 09:55:10 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type='epos' and ? between start_date and end_date 
2020-03-26 09:55:10 -==> Parameters: 25(String), 20200326(String)
2020-03-26 09:55:10 -<==      Total: 0
2020-03-26 09:55:10 -耗时 : 6
2020-03-26 09:55:26 -此处进行解密+验签+身份验证
2020-03-26 09:55:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:55:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:55:26 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-26 09:55:26 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:55:26 -==> Parameters: 426(String)
2020-03-26 09:55:26 -<==      Total: 0
2020-03-26 09:55:26 -耗时 : 3
2020-03-26 09:55:41 -此处进行解密+验签+身份验证
2020-03-26 09:55:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:55:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:55:41 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 09:55:41 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 09:55:41 -==> Parameters: 426(String)
2020-03-26 09:55:41 -<==      Total: 0
2020-03-26 09:55:41 -耗时 : 2
2020-03-26 09:55:41 -此处进行解密+验签+身份验证
2020-03-26 09:55:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:55:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:55:41 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 09:55:41 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:55:41 -==> Parameters: 426(String)
2020-03-26 09:55:41 -<==      Total: 1
2020-03-26 09:55:41 -耗时 : 1
2020-03-26 09:59:53 -此处进行解密+验签+身份验证
2020-03-26 09:59:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 09:59:53 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 09:59:53 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposRewardRecordList
2020-03-26 09:59:53 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_reward_record t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 09:59:53 -==> Parameters: 426(String)
2020-03-26 09:59:53 -<==      Total: 0
2020-03-26 09:59:53 -耗时 : 4
2020-03-26 10:11:56 -此处进行解密+验签+身份验证
2020-03-26 10:11:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:11:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:11:56 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 10:11:56 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 10:11:56 -==> Parameters: 426(String)
2020-03-26 10:11:56 -<==      Total: 0
2020-03-26 10:11:56 -耗时 : 2
2020-03-26 10:11:56 -此处进行解密+验签+身份验证
2020-03-26 10:11:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:11:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:11:56 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 10:11:56 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 10:11:56 -==> Parameters: 426(String)
2020-03-26 10:11:56 -<==      Total: 1
2020-03-26 10:11:56 -耗时 : 2
2020-03-26 10:12:15 -此处进行解密+验签+身份验证
2020-03-26 10:12:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:15 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:12:15 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:12:15 -==> Parameters: 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -耗时 : 5
2020-03-26 10:12:15 -此处进行解密+验签+身份验证
2020-03-26 10:12:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:15 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:12:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:12:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:12:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:12:15 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:15 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:15 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:12:15 -<==    Updates: 1
2020-03-26 10:12:15 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:12:15 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:15 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:15 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:12:15 -<==    Updates: 1
2020-03-26 10:12:15 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:12:15 -==> Parameters: 
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:15 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:15 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:12:15 -<==    Updates: 1
2020-03-26 10:12:15 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:12:15 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:15 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:15 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:12:15 -<==    Updates: 1
2020-03-26 10:12:15 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:15 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:12:15 -<==      Total: 1
2020-03-26 10:12:15 -耗时 : 68
2020-03-26 10:12:22 -此处进行解密+验签+身份验证
2020-03-26 10:12:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:22 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-26 10:12:22 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-26 10:12:22 -==> Parameters: 426(String)
2020-03-26 10:12:22 -此处进行解密+验签+身份验证
2020-03-26 10:12:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:22 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-26 10:12:22 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-26 10:12:22 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:22 -<==      Total: 204
2020-03-26 10:12:22 -耗时 : 135
2020-03-26 10:12:23 -<==      Total: 631
2020-03-26 10:12:23 -耗时 : 457
2020-03-26 10:12:26 -此处进行解密+验签+身份验证
2020-03-26 10:12:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:26 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-26 10:12:26 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-26 10:12:26 -==> Parameters: 426(String), MPOS(String)
2020-03-26 10:12:26 -此处进行解密+验签+身份验证
2020-03-26 10:12:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:26 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPosBatchAllocate
2020-03-26 10:12:26 -==>  Preparing: select * from ( select cast(@rownum:=@rownum+1 as char) AS id,tt.* from ( select cast(count(*) as char) as cnt,cast(min(sn) as char) as min_sn,cast(max(sn) as char) as max_sn,allocate_date,(select real_name from t_user_info where id=user_id) as real_name, cast(user_id as char) as user_id,batch_no,cast(allocate_by as char) as allocate_by from t_user_pos_batch_allocate where allocate_by=? and pos_type=? group by allocate_date,user_id,batch_no,allocate_by order by allocate_date desc ) tt,(SELECT @rownum:=0) r) t where 1=1 order by t.allocate_date desc limit 0,10 
2020-03-26 10:12:26 -==> Parameters: 426(String), TraditionalPOS(String)
2020-03-26 10:12:26 -<==      Total: 10
2020-03-26 10:12:26 -<==      Total: 8
2020-03-26 10:12:26 -耗时 : 21
2020-03-26 10:12:26 -耗时 : 68
2020-03-26 10:12:29 -此处进行解密+验签+身份验证
2020-03-26 10:12:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:29 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:12:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:12:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:12:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:12:29 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:29 -此处进行解密+验签+身份验证
2020-03-26 10:12:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:29 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:12:29 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:12:29 -==> Parameters: 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -耗时 : 1
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:29 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:12:29 -<==    Updates: 1
2020-03-26 10:12:29 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:12:29 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:29 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:12:29 -<==    Updates: 1
2020-03-26 10:12:29 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:12:29 -==> Parameters: 
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:29 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:29 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:12:29 -<==    Updates: 1
2020-03-26 10:12:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:12:29 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:29 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:12:29 -<==    Updates: 1
2020-03-26 10:12:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:29 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:12:29 -<==      Total: 1
2020-03-26 10:12:29 -耗时 : 197
2020-03-26 10:12:31 -此处进行解密+验签+身份验证
2020-03-26 10:12:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:31 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-26 10:12:31 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-26 10:12:31 -==> Parameters: 426(String)
2020-03-26 10:12:31 -此处进行解密+验签+身份验证
2020-03-26 10:12:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:31 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-26 10:12:31 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-26 10:12:31 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:31 -<==      Total: 204
2020-03-26 10:12:31 -耗时 : 102
2020-03-26 10:12:31 -<==      Total: 631
2020-03-26 10:12:31 -耗时 : 376
2020-03-26 10:12:33 -此处进行解密+验签+身份验证
2020-03-26 10:12:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:33 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:12:33 -此处进行解密+验签+身份验证
2020-03-26 10:12:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:12:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:12:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:33 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:12:33 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:12:33 -==> Parameters: 426(String)
2020-03-26 10:12:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:12:33 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -耗时 : 1
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:33 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:12:33 -<==    Updates: 1
2020-03-26 10:12:33 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:12:33 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:33 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:12:33 -<==    Updates: 1
2020-03-26 10:12:33 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:12:33 -==> Parameters: 
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:33 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:33 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:12:33 -<==    Updates: 1
2020-03-26 10:12:33 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:12:33 -==> Parameters: 426(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:33 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:12:33 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:12:33 -<==    Updates: 1
2020-03-26 10:12:33 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:12:33 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:12:33 -<==      Total: 1
2020-03-26 10:12:33 -耗时 : 150
2020-03-26 10:12:34 -此处进行解密+验签+身份验证
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:34 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposOnlineActivityList
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:12:34 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_mpos_activity_info where status = '09' and manager_id = ? and ? between start_date and end_date 
2020-03-26 10:12:34 -==> Parameters: 25(String), 20200326(String)
2020-03-26 10:12:34 -<==      Total: 0
2020-03-26 10:12:34 -耗时 : 7
2020-03-26 10:12:34 -此处进行解密+验签+身份验证
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:34 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosOnlineActivityList
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:12:34 -==>  Preparing: SELECT cast(id as char) as activity_id, activity_name, start_date, end_date, cover_url FROM t_sys_trapos_activity_info where status = '09' and manager_id = ? and pos_type is null and ? between start_date and end_date 
2020-03-26 10:12:34 -==> Parameters: 25(String), 20200326(String)
2020-03-26 10:12:34 -<==      Total: 0
2020-03-26 10:12:34 -耗时 : 6
2020-03-26 10:12:34 -此处进行解密+验签+身份验证
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:34 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 10:12:34 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 10:12:34 -==> Parameters: 426(String)
2020-03-26 10:12:34 -<==      Total: 0
2020-03-26 10:12:34 -耗时 : 3
2020-03-26 10:12:34 -此处进行解密+验签+身份验证
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:34 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 10:12:34 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 10:12:34 -==> Parameters: 426(String)
2020-03-26 10:12:34 -<==      Total: 1
2020-03-26 10:12:34 -耗时 : 13
2020-03-26 10:12:38 -此处进行解密+验签+身份验证
2020-03-26 10:12:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:12:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:12:38 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosRewardRecordList
2020-03-26 10:12:38 -==>  Preparing: SELECT cast(t.id as char) as record_id, t.order_id, t.sn, t.money, t1.activity_name, t1.start_date, t1.end_date, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_reward_record t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 10:12:38 -==> Parameters: 426(String)
2020-03-26 10:12:38 -<==      Total: 2
2020-03-26 10:12:38 -耗时 : 7
2020-03-26 10:13:23 -此处进行解密+验签+身份验证
2020-03-26 10:13:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:13:23 -此处进行解密+验签+身份验证
2020-03-26 10:13:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:13:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:13:23 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getMposActivityApplyList
2020-03-26 10:13:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:13:23 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_activity_apply_info t LEFT JOIN t_sys_mpos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_mpos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? order by t.id desc limit 0,10 
2020-03-26 10:13:23 -==> Parameters: 426(String)
2020-03-26 10:13:23 -请求地址 : http://192.168.191.1:8080/api/sys/onlineactivity/getTraditionalPosActivityApplyList
2020-03-26 10:13:23 -==>  Preparing: SELECT cast(t.id as char) as apply_id, t.order_id, t.status, t1.activity_name, t1.start_date, t1.end_date, t2.pos_num, t2.reward_money, t2.expenditure, DATE_FORMAT(STR_TO_DATE(CONCAT(t.cre_date, t.cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_activity_apply_info t LEFT JOIN t_sys_trapos_activity_info t1 on t.activity_id = t1.id LEFT JOIN t_sys_trapos_activity_reward_info t2 on t.activity_reward_id = t2.id WHERE t.user_id = ? and t1.pos_type is null order by t.id desc limit 0,10 
2020-03-26 10:13:23 -<==      Total: 1
2020-03-26 10:13:23 -==> Parameters: 426(String)
2020-03-26 10:13:23 -耗时 : 1
2020-03-26 10:13:23 -<==      Total: 0
2020-03-26 10:13:23 -耗时 : 4
2020-03-26 10:13:24 -此处进行解密+验签+身份验证
2020-03-26 10:13:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:13:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:13:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:13:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:13:24 -==> Parameters: 426(String)
2020-03-26 10:13:24 -<==      Total: 1
2020-03-26 10:13:24 -耗时 : 1
2020-03-26 10:13:24 -此处进行解密+验签+身份验证
2020-03-26 10:13:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:13:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:13:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:13:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:13:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:13:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:13:24 -==> Parameters: 426(String), 426(String)
2020-03-26 10:13:24 -<==      Total: 1
2020-03-26 10:13:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:13:24 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:13:24 -<==      Total: 1
2020-03-26 10:13:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:13:24 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:13:25 -<==    Updates: 1
2020-03-26 10:13:25 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:13:25 -==> Parameters: 426(String), 426(String)
2020-03-26 10:13:25 -<==      Total: 1
2020-03-26 10:13:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:13:25 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:13:25 -<==      Total: 1
2020-03-26 10:13:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:13:25 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:13:25 -<==    Updates: 1
2020-03-26 10:13:25 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:13:25 -==> Parameters: 
2020-03-26 10:13:25 -<==      Total: 1
2020-03-26 10:13:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:13:25 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:13:25 -<==      Total: 1
2020-03-26 10:13:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:13:25 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:13:25 -<==    Updates: 1
2020-03-26 10:13:25 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:13:25 -==> Parameters: 426(String), 426(String)
2020-03-26 10:13:25 -<==      Total: 1
2020-03-26 10:13:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:13:25 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:13:25 -<==      Total: 1
2020-03-26 10:13:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:13:25 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:13:25 -<==    Updates: 1
2020-03-26 10:13:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:13:25 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:13:25 -<==      Total: 1
2020-03-26 10:13:25 -耗时 : 70
2020-03-26 10:13:31 -此处进行解密+验签+身份验证
2020-03-26 10:13:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:13:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:13:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-26 10:13:31 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-26 10:13:31 -==> Parameters: 426(String)
2020-03-26 10:13:31 -<==      Total: 1
2020-03-26 10:13:31 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-26 10:13:31 -==> Parameters: 426(String), 426(String)
2020-03-26 10:13:31 -此处进行解密+验签+身份验证
2020-03-26 10:13:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:13:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:13:31 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-26 10:13:31 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:13:31 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:13:31 -<==      Total: 1
2020-03-26 10:13:31 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-26 10:13:31 -==> Parameters: 426(String)
2020-03-26 10:13:31 -<==      Total: 0
2020-03-26 10:13:31 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:13:31 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:13:31 -<==      Total: 1
2020-03-26 10:13:31 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-26 10:13:31 -==> Parameters: 426(String)
2020-03-26 10:13:31 -<==      Total: 0
2020-03-26 10:13:31 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:13:31 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:13:31 -<==      Total: 1
2020-03-26 10:13:31 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-26 10:13:31 -==> Parameters: 426(String)
2020-03-26 10:13:31 -<==      Total: 0
2020-03-26 10:13:31 -耗时 : 45
2020-03-26 10:13:32 -<==      Total: 1
2020-03-26 10:13:32 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-26 10:13:32 -==> Parameters: 426(String), 426(String)
2020-03-26 10:13:33 -<==      Total: 1
2020-03-26 10:13:33 -耗时 : 1363
2020-03-26 10:16:51 -此处进行解密+验签+身份验证
2020-03-26 10:16:51 -解密：
2020-03-26 10:16:51 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-26 10:16:51 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-26 10:16:51 -此处进行解密+验签+身份验证
2020-03-26 10:16:51 -==> Parameters: 04(String), 04(String)
2020-03-26 10:16:51 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-26 10:16:51 -<==      Total: 1
2020-03-26 10:16:51 -耗时 : 6
2020-03-26 10:16:51 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-26 10:16:51 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-26 10:16:51 -耗时 : 10
2020-03-26 10:16:51 -此处进行解密+验签+身份验证
2020-03-26 10:16:51 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"6994C37FADC9DE97FCDAA2A5DE7C5D5A","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP"}
2020-03-26 10:16:51 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-26 10:16:51 -token值=======426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP
2020-03-26 10:16:51 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-26 10:16:51 -==> Parameters: 426(String)
2020-03-26 10:16:51 -<==      Total: 1
2020-03-26 10:16:51 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-26 10:16:51 -==> Parameters: 25(String)
2020-03-26 10:16:51 -<==      Total: 1
2020-03-26 10:16:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 10:16:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 10:16:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 10:16:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 10:16:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 10:16:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 10:16:51 -耗时 : 13
2020-03-26 10:16:56 -此处进行解密+验签+身份验证
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:16:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:16:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:16:56 -==> Parameters: 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -耗时 : 2
2020-03-26 10:16:56 -此处进行解密+验签+身份验证
2020-03-26 10:16:56 -解密：
2020-03-26 10:16:56 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-26 10:16:56 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-26 10:16:56 -==> Parameters: 01(String), 01(String)
2020-03-26 10:16:56 -<==      Total: 4
2020-03-26 10:16:56 -耗时 : 2
2020-03-26 10:16:56 -此处进行解密+验签+身份验证
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:16:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-26 10:16:56 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-26 10:16:56 -==> Parameters: 426(String)
2020-03-26 10:16:56 -<==      Total: 2
2020-03-26 10:16:56 -耗时 : 9
2020-03-26 10:16:56 -此处进行解密+验签+身份验证
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:16:56 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-26 10:16:56 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-26 10:16:56 -==> Parameters: 
2020-03-26 10:16:56 -<==      Total: 3
2020-03-26 10:16:56 -耗时 : 3
2020-03-26 10:16:56 -此处进行解密+验签+身份验证
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:16:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:16:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:16:56 -==> Parameters: 426(String), 426(String)
2020-03-26 10:16:56 -此处进行解密+验签+身份验证
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:16:56 -此处进行解密+验签+身份验证
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:16:56 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:16:56 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:16:56 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:16:56 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:16:56 -==> Parameters: 426(String)
2020-03-26 10:16:56 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:16:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:16:56 -==> Parameters: 426(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -耗时 : 13
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:16:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:16:56 -==> Parameters: 426(String), 426(String)
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:16:56 -==> Parameters: 426(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:16:56 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:16:56 -==> Parameters: 
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:16:56 -==> Parameters: 
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:16:56 -==> Parameters: 426(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:16:56 -==> Parameters: 426(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:16:56 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -耗时 : 107
2020-03-26 10:16:56 -<==    Updates: 1
2020-03-26 10:16:56 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:16:56 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:16:56 -<==      Total: 1
2020-03-26 10:16:56 -耗时 : 89
2020-03-26 10:17:10 -此处进行解密+验签+身份验证
2020-03-26 10:17:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:10 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-26 10:17:10 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:17:10 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:17:10 -<==      Total: 1
2020-03-26 10:17:10 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-26 10:17:10 -==> Parameters: 426(String)
2020-03-26 10:17:10 -<==      Total: 0
2020-03-26 10:17:10 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:17:10 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:17:10 -<==      Total: 1
2020-03-26 10:17:10 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-26 10:17:10 -==> Parameters: 426(String)
2020-03-26 10:17:10 -此处进行解密+验签+身份验证
2020-03-26 10:17:10 -<==      Total: 0
2020-03-26 10:17:10 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:17:10 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:17:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:10 -<==      Total: 1
2020-03-26 10:17:10 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-26 10:17:10 -==> Parameters: 426(String)
2020-03-26 10:17:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-26 10:17:10 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-26 10:17:10 -==> Parameters: 426(String)
2020-03-26 10:17:10 -<==      Total: 0
2020-03-26 10:17:10 -耗时 : 23
2020-03-26 10:17:10 -<==      Total: 1
2020-03-26 10:17:10 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-26 10:17:10 -==> Parameters: 426(String), 426(String)
2020-03-26 10:17:11 -<==      Total: 1
2020-03-26 10:17:11 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-26 10:17:11 -==> Parameters: 426(String), 426(String)
2020-03-26 10:17:11 -<==      Total: 1
2020-03-26 10:17:11 -耗时 : 1330
2020-03-26 10:17:12 -此处进行解密+验签+身份验证
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:17:12 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:17:12 -==> Parameters: 426(String)
2020-03-26 10:17:12 -<==      Total: 1
2020-03-26 10:17:12 -耗时 : 6
2020-03-26 10:17:12 -此处进行解密+验签+身份验证
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:17:12 -此处进行解密+验签+身份验证
2020-03-26 10:17:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:12 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:17:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:17:12 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:17:12 -<==      Total: 1
2020-03-26 10:17:12 -耗时 : 4
2020-03-26 10:17:12 -<==      Total: 1
2020-03-26 10:17:12 -耗时 : 4
2020-03-26 10:17:12 -此处进行解密+验签+身份验证
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:17:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:17:12 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:17:12 -<==      Total: 1
2020-03-26 10:17:12 -耗时 : 1
2020-03-26 10:17:38 -此处进行解密+验签+身份验证
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:17:38 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:17:38 -==> Parameters: 426(String)
2020-03-26 10:17:38 -<==      Total: 1
2020-03-26 10:17:38 -耗时 : 2
2020-03-26 10:17:38 -此处进行解密+验签+身份验证
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:38 -此处进行解密+验签+身份验证
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:38 -此处进行解密+验签+身份验证
2020-03-26 10:17:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:17:38 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:17:38 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:17:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:17:38 -<==      Total: 1
2020-03-26 10:17:38 -耗时 : 2
2020-03-26 10:17:38 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:17:38 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:17:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:17:38 -<==      Total: 1
2020-03-26 10:17:38 -耗时 : 6
2020-03-26 10:17:38 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:17:38 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:17:38 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:17:38 -<==      Total: 1
2020-03-26 10:17:38 -耗时 : 2
2020-03-26 10:18:14 -此处进行解密+验签+身份验证
2020-03-26 10:18:14 -此处进行解密+验签+身份验证
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:18:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:18:14 -此处进行解密+验签+身份验证
2020-03-26 10:18:14 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:18:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:18:14 -==> Parameters: 426(String)
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:18:14 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:18:14 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:18:14 -<==      Total: 1
2020-03-26 10:18:14 -耗时 : 1
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:18:14 -<==      Total: 1
2020-03-26 10:18:14 -耗时 : 1
2020-03-26 10:18:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:18:14 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:18:14 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:18:14 -<==      Total: 1
2020-03-26 10:18:14 -耗时 : 2
2020-03-26 10:18:14 -此处进行解密+验签+身份验证
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:18:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:18:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:18:14 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:18:14 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:18:14 -<==      Total: 1
2020-03-26 10:18:14 -耗时 : 1
2020-03-26 10:19:20 -此处进行解密+验签+身份验证
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:19:20 -此处进行解密+验签+身份验证
2020-03-26 10:19:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:19:20 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:19:20 -==> Parameters: 426(String)
2020-03-26 10:19:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:19:20 -<==      Total: 1
2020-03-26 10:19:20 -耗时 : 1
2020-03-26 10:19:20 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:19:20 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:19:20 -<==      Total: 1
2020-03-26 10:19:20 -耗时 : 2
2020-03-26 10:19:20 -此处进行解密+验签+身份验证
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:19:20 -此处进行解密+验签+身份验证
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:19:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:19:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:19:20 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:19:20 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:19:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:19:20 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:19:20 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:19:20 -<==      Total: 1
2020-03-26 10:19:20 -耗时 : 2
2020-03-26 10:19:20 -<==      Total: 1
2020-03-26 10:19:20 -耗时 : 1
2020-03-26 10:23:10 -此处进行解密+验签+身份验证
2020-03-26 10:23:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:23:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:23:10 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-26 10:23:10 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:23:10 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:23:10 -<==      Total: 0
2020-03-26 10:23:10 -耗时 : 20
2020-03-26 10:23:12 -此处进行解密+验签+身份验证
2020-03-26 10:23:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:23:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:23:12 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:23:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:23:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:23:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:23:12 -==> Parameters: 426(String), 426(String)
2020-03-26 10:23:12 -此处进行解密+验签+身份验证
2020-03-26 10:23:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:23:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:23:12 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:23:12 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:23:12 -==> Parameters: 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -耗时 : 2
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:12 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:12 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:23:12 -<==    Updates: 1
2020-03-26 10:23:12 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:23:12 -==> Parameters: 426(String), 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:12 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:12 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:23:12 -<==    Updates: 1
2020-03-26 10:23:12 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:23:12 -==> Parameters: 
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:12 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:12 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:23:12 -<==    Updates: 1
2020-03-26 10:23:12 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:23:12 -==> Parameters: 426(String), 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:12 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:12 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:23:12 -<==    Updates: 1
2020-03-26 10:23:12 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:12 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:23:12 -<==      Total: 1
2020-03-26 10:23:12 -耗时 : 103
2020-03-26 10:23:28 -此处进行解密+验签+身份验证
2020-03-26 10:23:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:23:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:23:28 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-26 10:23:28 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:23:28 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:23:28 -<==      Total: 0
2020-03-26 10:23:28 -耗时 : 3
2020-03-26 10:23:42 -此处进行解密+验签+身份验证
2020-03-26 10:23:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:23:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:23:42 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:23:42 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:23:42 -==> Parameters: 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -耗时 : 3
2020-03-26 10:23:42 -此处进行解密+验签+身份验证
2020-03-26 10:23:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:23:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:23:42 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:23:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:23:42 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:23:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:23:42 -==> Parameters: 426(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:42 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:23:42 -<==    Updates: 1
2020-03-26 10:23:42 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:23:42 -==> Parameters: 426(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:42 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:23:42 -<==    Updates: 1
2020-03-26 10:23:42 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:23:42 -==> Parameters: 
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:42 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:42 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:23:42 -<==    Updates: 1
2020-03-26 10:23:42 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:23:42 -==> Parameters: 426(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:42 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:23:42 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:23:42 -<==    Updates: 1
2020-03-26 10:23:42 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:23:42 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:23:42 -<==      Total: 1
2020-03-26 10:23:42 -耗时 : 63
2020-03-26 10:23:49 -此处进行解密+验签+身份验证
2020-03-26 10:23:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:23:49 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:23:49 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-26 10:23:49 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:23:49 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:23:49 -<==      Total: 0
2020-03-26 10:23:49 -耗时 : 7
2020-03-26 10:30:48 -此处进行解密+验签+身份验证
2020-03-26 10:30:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:30:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:30:48 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:30:48 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:30:48 -==> Parameters: 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -耗时 : 4
2020-03-26 10:30:48 -此处进行解密+验签+身份验证
2020-03-26 10:30:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:30:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:30:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:30:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:30:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:30:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:30:48 -==> Parameters: 426(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:30:48 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:30:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:30:48 -<==    Updates: 1
2020-03-26 10:30:48 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:30:48 -==> Parameters: 426(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:30:48 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:30:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:30:48 -<==    Updates: 1
2020-03-26 10:30:48 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:30:48 -==> Parameters: 
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:30:48 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:30:48 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:30:48 -<==    Updates: 1
2020-03-26 10:30:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:30:48 -==> Parameters: 426(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:30:48 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:30:48 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:30:48 -<==    Updates: 1
2020-03-26 10:30:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:30:48 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:30:48 -<==      Total: 1
2020-03-26 10:30:48 -耗时 : 61
2020-03-26 10:30:58 -此处进行解密+验签+身份验证
2020-03-26 10:30:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:30:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:30:58 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-03-26 10:30:58 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-03-26 10:30:58 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:30:58 -<==      Total: 2
2020-03-26 10:30:58 -耗时 : 9
2020-03-26 10:35:51 -此处进行解密+验签+身份验证
2020-03-26 10:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:35:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:35:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:35:51 -==> Parameters: 426(String), 426(String)
2020-03-26 10:35:51 -<==      Total: 1
2020-03-26 10:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:35:51 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:35:51 -<==      Total: 1
2020-03-26 10:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:35:51 -此处进行解密+验签+身份验证
2020-03-26 10:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:35:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:35:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:35:51 -==> Parameters: 426(String)
2020-03-26 10:35:51 -<==      Total: 1
2020-03-26 10:35:51 -耗时 : 2
2020-03-26 10:35:51 -<==    Updates: 1
2020-03-26 10:35:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:35:51 -==> Parameters: 426(String), 426(String)
2020-03-26 10:35:51 -<==      Total: 1
2020-03-26 10:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:35:51 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:35:51 -<==      Total: 1
2020-03-26 10:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:35:51 -<==    Updates: 1
2020-03-26 10:35:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:35:51 -==> Parameters: 
2020-03-26 10:35:51 -<==      Total: 1
2020-03-26 10:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:35:51 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:35:51 -<==      Total: 1
2020-03-26 10:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:35:51 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:35:51 -<==    Updates: 1
2020-03-26 10:35:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:35:51 -==> Parameters: 426(String), 426(String)
2020-03-26 10:35:52 -<==      Total: 1
2020-03-26 10:35:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:35:52 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:35:52 -<==      Total: 1
2020-03-26 10:35:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:35:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:35:52 -<==    Updates: 1
2020-03-26 10:35:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:35:52 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:35:52 -<==      Total: 1
2020-03-26 10:35:52 -耗时 : 74
2020-03-26 10:35:57 -此处进行解密+验签+身份验证
2020-03-26 10:35:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:35:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:35:57 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-03-26 10:35:57 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-03-26 10:35:57 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:35:57 -<==      Total: 2
2020-03-26 10:35:57 -耗时 : 4
2020-03-26 10:36:06 -此处进行解密+验签+身份验证
2020-03-26 10:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:36:06 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:36:06 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:36:06 -==> Parameters: 426(String), 426(String)
2020-03-26 10:36:06 -此处进行解密+验签+身份验证
2020-03-26 10:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:36:06 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:36:06 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:36:06 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:36:06 -==> Parameters: 426(String)
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -耗时 : 3
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:36:06 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:36:06 -<==    Updates: 1
2020-03-26 10:36:06 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:36:06 -==> Parameters: 426(String), 426(String)
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:36:06 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:36:06 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:36:06 -<==    Updates: 1
2020-03-26 10:36:06 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:36:06 -==> Parameters: 
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:36:06 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:36:06 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:36:06 -<==    Updates: 1
2020-03-26 10:36:06 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:36:06 -==> Parameters: 426(String), 426(String)
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:36:06 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:36:06 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:36:06 -<==    Updates: 1
2020-03-26 10:36:06 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:36:06 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:36:06 -<==      Total: 1
2020-03-26 10:36:06 -耗时 : 59
2020-03-26 10:36:12 -此处进行解密+验签+身份验证
2020-03-26 10:36:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:36:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:36:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-26 10:36:12 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:36:12 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:36:12 -<==      Total: 0
2020-03-26 10:36:12 -耗时 : 21
2020-03-26 10:41:59 -此处进行解密+验签+身份验证
2020-03-26 10:41:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:41:59 -此处进行解密+验签+身份验证
2020-03-26 10:41:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:41:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:41:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:41:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:41:59 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:41:59 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:41:59 -==> Parameters: 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:41:59 -耗时 : 4
2020-03-26 10:41:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:41:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:41:59 -==> Parameters: 426(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:41:59 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:41:59 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:41:59 -<==    Updates: 1
2020-03-26 10:41:59 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:41:59 -==> Parameters: 426(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:41:59 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:41:59 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:41:59 -<==    Updates: 1
2020-03-26 10:41:59 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:41:59 -==> Parameters: 
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:41:59 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:41:59 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:41:59 -<==    Updates: 1
2020-03-26 10:41:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:41:59 -==> Parameters: 426(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:41:59 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:41:59 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:41:59 -<==    Updates: 1
2020-03-26 10:41:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:41:59 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:41:59 -<==      Total: 1
2020-03-26 10:41:59 -耗时 : 85
2020-03-26 10:42:08 -此处进行解密+验签+身份验证
2020-03-26 10:42:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:08 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-26 10:42:08 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:42:08 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:42:08 -<==      Total: 0
2020-03-26 10:42:08 -耗时 : 6
2020-03-26 10:42:13 -此处进行解密+验签+身份验证
2020-03-26 10:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:13 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:42:13 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:42:13 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:13 -<==      Total: 1
2020-03-26 10:42:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:13 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:42:13 -<==      Total: 1
2020-03-26 10:42:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:13 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:42:13 -此处进行解密+验签+身份验证
2020-03-26 10:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:13 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:42:13 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:42:13 -==> Parameters: 426(String)
2020-03-26 10:42:13 -<==      Total: 1
2020-03-26 10:42:13 -耗时 : 2
2020-03-26 10:42:13 -<==    Updates: 1
2020-03-26 10:42:13 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:42:13 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:13 -<==      Total: 1
2020-03-26 10:42:13 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:13 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:42:13 -<==      Total: 1
2020-03-26 10:42:13 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:13 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:42:14 -<==    Updates: 1
2020-03-26 10:42:14 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:42:14 -==> Parameters: 
2020-03-26 10:42:14 -<==      Total: 1
2020-03-26 10:42:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:14 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:42:14 -<==      Total: 1
2020-03-26 10:42:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:14 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:42:14 -<==    Updates: 1
2020-03-26 10:42:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:42:14 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:14 -<==      Total: 1
2020-03-26 10:42:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:14 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:42:14 -<==      Total: 1
2020-03-26 10:42:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:14 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:42:14 -<==    Updates: 1
2020-03-26 10:42:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:14 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:42:14 -<==      Total: 1
2020-03-26 10:42:14 -耗时 : 136
2020-03-26 10:42:23 -此处进行解密+验签+身份验证
2020-03-26 10:42:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:23 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackTraditionalPosList
2020-03-26 10:42:23 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and cre_date between ? and ? and pos_type is null ORDER BY id desc limit 0,10 
2020-03-26 10:42:23 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:42:23 -<==      Total: 2
2020-03-26 10:42:23 -耗时 : 4
2020-03-26 10:42:31 -此处进行解密+验签+身份验证
2020-03-26 10:42:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:31 -此处进行解密+验签+身份验证
2020-03-26 10:42:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:42:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:31 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:42:31 -==> Parameters: 426(String)
2020-03-26 10:42:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -耗时 : 2
2020-03-26 10:42:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:42:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:42:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:42:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:42:31 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:31 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:42:31 -<==    Updates: 1
2020-03-26 10:42:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:42:31 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:31 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:42:31 -<==    Updates: 1
2020-03-26 10:42:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:42:31 -==> Parameters: 
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:31 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:31 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:42:31 -<==    Updates: 1
2020-03-26 10:42:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:42:31 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:31 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:31 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:42:31 -<==    Updates: 1
2020-03-26 10:42:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:31 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:42:31 -<==      Total: 1
2020-03-26 10:42:31 -耗时 : 69
2020-03-26 10:42:39 -此处进行解密+验签+身份验证
2020-03-26 10:42:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:39 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:39 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackMposList
2020-03-26 10:42:39 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_mpos_machine_back_record WHERE user_id = ? and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:42:39 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:42:39 -<==      Total: 2
2020-03-26 10:42:39 -耗时 : 19
2020-03-26 10:42:54 -此处进行解密+验签+身份验证
2020-03-26 10:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:54 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:42:54 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:42:54 -==> Parameters: 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -耗时 : 1
2020-03-26 10:42:54 -此处进行解密+验签+身份验证
2020-03-26 10:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:42:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:42:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:42:54 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:54 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:54 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:42:54 -<==    Updates: 1
2020-03-26 10:42:54 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:42:54 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:54 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:54 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:42:54 -<==    Updates: 1
2020-03-26 10:42:54 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:42:54 -==> Parameters: 
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:54 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:54 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:42:54 -<==    Updates: 1
2020-03-26 10:42:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:42:54 -==> Parameters: 426(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:54 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:42:54 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:42:54 -<==    Updates: 1
2020-03-26 10:42:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:42:54 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:42:54 -<==      Total: 1
2020-03-26 10:42:54 -耗时 : 56
2020-03-26 10:42:59 -此处进行解密+验签+身份验证
2020-03-26 10:42:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:42:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:42:59 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-03-26 10:42:59 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:42:59 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:42:59 -<==      Total: 10
2020-03-26 10:42:59 -耗时 : 95
2020-03-26 10:43:11 -此处进行解密+验签+身份验证
2020-03-26 10:43:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:11 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:43:11 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:43:11 -==> Parameters: 426(String)
2020-03-26 10:43:11 -此处进行解密+验签+身份验证
2020-03-26 10:43:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:11 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:43:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:43:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:43:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:43:11 -==> Parameters: 426(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -耗时 : 15
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:43:11 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:43:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:43:11 -<==    Updates: 1
2020-03-26 10:43:11 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:43:11 -==> Parameters: 426(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:43:11 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:43:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:43:11 -<==    Updates: 1
2020-03-26 10:43:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:43:11 -==> Parameters: 
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:43:11 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:43:11 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:43:11 -<==    Updates: 1
2020-03-26 10:43:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:43:11 -==> Parameters: 426(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:43:11 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:43:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:43:11 -<==    Updates: 1
2020-03-26 10:43:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:43:11 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:43:11 -<==      Total: 1
2020-03-26 10:43:11 -耗时 : 118
2020-03-26 10:43:38 -此处进行解密+验签+身份验证
2020-03-26 10:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:38 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-26 10:43:38 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:43:38 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:43:38 -此处进行解密+验签+身份验证
2020-03-26 10:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:38 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:38 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-26 10:43:38 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-26 10:43:38 -==> Parameters: 426(String)
2020-03-26 10:43:38 -<==      Total: 1
2020-03-26 10:43:38 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-26 10:43:38 -==> Parameters: 426(String), 426(String)
2020-03-26 10:43:38 -<==      Total: 1
2020-03-26 10:43:38 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-26 10:43:38 -==> Parameters: 426(String)
2020-03-26 10:43:38 -<==      Total: 0
2020-03-26 10:43:38 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:43:38 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:43:38 -<==      Total: 1
2020-03-26 10:43:38 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-26 10:43:38 -==> Parameters: 426(String)
2020-03-26 10:43:38 -<==      Total: 0
2020-03-26 10:43:38 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 10:43:38 -==> Parameters: 202003(String), 426(String)
2020-03-26 10:43:38 -<==      Total: 1
2020-03-26 10:43:38 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-26 10:43:38 -==> Parameters: 426(String)
2020-03-26 10:43:38 -<==      Total: 0
2020-03-26 10:43:38 -耗时 : 37
2020-03-26 10:43:39 -<==      Total: 1
2020-03-26 10:43:39 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-26 10:43:39 -==> Parameters: 426(String), 426(String)
2020-03-26 10:43:39 -<==      Total: 1
2020-03-26 10:43:39 -耗时 : 1400
2020-03-26 10:43:46 -此处进行解密+验签+身份验证
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:46 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:43:46 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:43:46 -==> Parameters: 426(String)
2020-03-26 10:43:46 -<==      Total: 1
2020-03-26 10:43:46 -耗时 : 6
2020-03-26 10:43:46 -此处进行解密+验签+身份验证
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:46 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:43:46 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:43:46 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:43:46 -<==      Total: 1
2020-03-26 10:43:46 -耗时 : 5
2020-03-26 10:43:46 -此处进行解密+验签+身份验证
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:46 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:43:46 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:43:46 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:43:46 -此处进行解密+验签+身份验证
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:43:46 -<==      Total: 1
2020-03-26 10:43:46 -耗时 : 2
2020-03-26 10:43:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:43:46 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:43:46 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:43:46 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:43:46 -<==      Total: 1
2020-03-26 10:43:46 -耗时 : 4
2020-03-26 10:44:09 -此处进行解密+验签+身份验证
2020-03-26 10:44:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:09 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-26 10:44:09 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-26 10:44:09 -==> Parameters: 426(String), 20200301(String), 20200331(String)
2020-03-26 10:44:09 -<==      Total: 0
2020-03-26 10:44:09 -耗时 : 16
2020-03-26 10:44:11 -此处进行解密+验签+身份验证
2020-03-26 10:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:11 -此处进行解密+验签+身份验证
2020-03-26 10:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:11 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 10:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 10:44:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 10:44:11 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 10:44:11 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 10:44:11 -==> Parameters: 426(String)
2020-03-26 10:44:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:44:11 -==> Parameters: 426(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -耗时 : 1
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:44:11 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:44:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 10:44:11 -<==    Updates: 1
2020-03-26 10:44:11 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 10:44:11 -==> Parameters: 426(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:44:11 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:44:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 10:44:11 -<==    Updates: 1
2020-03-26 10:44:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 10:44:11 -==> Parameters: 
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:44:11 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:44:11 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 10:44:11 -<==    Updates: 1
2020-03-26 10:44:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 10:44:11 -==> Parameters: 426(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:44:11 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 10:44:11 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 10:44:11 -<==    Updates: 1
2020-03-26 10:44:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 10:44:11 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 10:44:11 -<==      Total: 1
2020-03-26 10:44:11 -耗时 : 102
2020-03-26 10:44:20 -此处进行解密+验签+身份验证
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:44:20 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:44:20 -==> Parameters: 426(String)
2020-03-26 10:44:20 -<==      Total: 1
2020-03-26 10:44:20 -耗时 : 1
2020-03-26 10:44:20 -此处进行解密+验签+身份验证
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:20 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:44:20 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:20 -<==      Total: 1
2020-03-26 10:44:20 -耗时 : 1
2020-03-26 10:44:20 -此处进行解密+验签+身份验证
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:20 -此处进行解密+验签+身份验证
2020-03-26 10:44:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:44:20 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:44:20 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:20 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:20 -<==      Total: 1
2020-03-26 10:44:20 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:44:20 -耗时 : 6
2020-03-26 10:44:20 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:20 -<==      Total: 1
2020-03-26 10:44:20 -耗时 : 2
2020-03-26 10:44:27 -此处进行解密+验签+身份验证
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:44:27 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:44:27 -==> Parameters: 426(String)
2020-03-26 10:44:27 -<==      Total: 1
2020-03-26 10:44:27 -耗时 : 2
2020-03-26 10:44:27 -此处进行解密+验签+身份验证
2020-03-26 10:44:27 -此处进行解密+验签+身份验证
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:27 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:44:27 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:27 -<==      Total: 1
2020-03-26 10:44:27 -耗时 : 4
2020-03-26 10:44:27 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:44:27 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:27 -此处进行解密+验签+身份验证
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:27 -<==      Total: 1
2020-03-26 10:44:27 -耗时 : 9
2020-03-26 10:44:27 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:44:27 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:44:27 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:27 -<==      Total: 1
2020-03-26 10:44:27 -耗时 : 1
2020-03-26 10:44:32 -此处进行解密+验签+身份验证
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:32 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:32 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:44:32 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:32 -<==      Total: 1
2020-03-26 10:44:32 -耗时 : 2
2020-03-26 10:44:32 -此处进行解密+验签+身份验证
2020-03-26 10:44:32 -此处进行解密+验签+身份验证
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:32 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:32 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:44:32 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:32 -此处进行解密+验签+身份验证
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:32 -<==      Total: 1
2020-03-26 10:44:32 -耗时 : 2
2020-03-26 10:44:32 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:44:32 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:32 -==> Parameters: 426(String)
2020-03-26 10:44:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:32 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:32 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:44:32 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:32 -<==      Total: 1
2020-03-26 10:44:32 -耗时 : 2
2020-03-26 10:44:32 -<==      Total: 1
2020-03-26 10:44:32 -耗时 : 12
2020-03-26 10:44:36 -此处进行解密+验签+身份验证
2020-03-26 10:44:36 -此处进行解密+验签+身份验证
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:36 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:36 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:44:36 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:44:36 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:44:36 -==> Parameters: 426(String)
2020-03-26 10:44:36 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:36 -<==      Total: 1
2020-03-26 10:44:36 -<==      Total: 1
2020-03-26 10:44:36 -耗时 : 2
2020-03-26 10:44:36 -耗时 : 1
2020-03-26 10:44:36 -此处进行解密+验签+身份验证
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:36 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:44:36 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:44:36 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:36 -<==      Total: 1
2020-03-26 10:44:36 -耗时 : 2
2020-03-26 10:44:36 -此处进行解密+验签+身份验证
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:36 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:36 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:44:36 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:36 -<==      Total: 1
2020-03-26 10:44:36 -耗时 : 2
2020-03-26 10:44:50 -此处进行解密+验签+身份验证
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:44:50 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:44:50 -==> Parameters: 426(String)
2020-03-26 10:44:50 -<==      Total: 1
2020-03-26 10:44:50 -耗时 : 1
2020-03-26 10:44:50 -此处进行解密+验签+身份验证
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:44:50 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:44:50 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:50 -<==      Total: 1
2020-03-26 10:44:50 -耗时 : 2
2020-03-26 10:44:50 -此处进行解密+验签+身份验证
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:50 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:44:50 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:50 -<==      Total: 1
2020-03-26 10:44:50 -耗时 : 3
2020-03-26 10:44:50 -此处进行解密+验签+身份验证
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:44:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:44:50 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:44:50 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:44:50 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:44:50 -<==      Total: 1
2020-03-26 10:44:50 -耗时 : 2
2020-03-26 10:45:12 -此处进行解密+验签+身份验证
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:45:12 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:45:12 -此处进行解密+验签+身份验证
2020-03-26 10:45:12 -==> Parameters: 426(String)
2020-03-26 10:45:12 -<==      Total: 1
2020-03-26 10:45:12 -耗时 : 1
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:45:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:45:12 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:45:12 -<==      Total: 1
2020-03-26 10:45:12 -耗时 : 2
2020-03-26 10:45:12 -此处进行解密+验签+身份验证
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:45:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:45:12 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:45:12 -<==      Total: 1
2020-03-26 10:45:12 -耗时 : 2
2020-03-26 10:45:12 -此处进行解密+验签+身份验证
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:12 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:45:12 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:45:12 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:45:12 -<==      Total: 1
2020-03-26 10:45:12 -耗时 : 1
2020-03-26 10:45:14 -此处进行解密+验签+身份验证
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 10:45:14 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 10:45:14 -==> Parameters: 426(String)
2020-03-26 10:45:14 -<==      Total: 1
2020-03-26 10:45:14 -耗时 : 1
2020-03-26 10:45:14 -此处进行解密+验签+身份验证
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 10:45:14 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 10:45:14 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:45:14 -此处进行解密+验签+身份验证
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:14 -<==      Total: 1
2020-03-26 10:45:14 -耗时 : 1
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:45:14 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 10:45:14 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:45:14 -<==      Total: 1
2020-03-26 10:45:14 -耗时 : 3
2020-03-26 10:45:14 -此处进行解密+验签+身份验证
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 10:45:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 10:45:14 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 10:45:14 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 10:45:14 -==> Parameters: 426(String), 202003(String)
2020-03-26 10:45:14 -<==      Total: 1
2020-03-26 10:45:14 -耗时 : 1
2020-03-26 11:39:14 -此处进行解密+验签+身份验证
2020-03-26 11:39:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:14 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 11:39:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 11:39:14 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 11:39:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 11:39:14 -==> Parameters: 426(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 11:39:14 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 11:39:14 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 11:39:14 -<==    Updates: 1
2020-03-26 11:39:14 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 11:39:14 -==> Parameters: 426(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 11:39:14 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 11:39:14 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 11:39:14 -<==    Updates: 1
2020-03-26 11:39:14 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 11:39:14 -==> Parameters: 
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 11:39:14 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 11:39:14 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 11:39:14 -<==    Updates: 1
2020-03-26 11:39:14 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 11:39:14 -==> Parameters: 426(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 11:39:14 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 11:39:14 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 11:39:14 -<==    Updates: 1
2020-03-26 11:39:14 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 11:39:14 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 11:39:14 -<==      Total: 1
2020-03-26 11:39:14 -耗时 : 221
2020-03-26 11:39:18 -此处进行解密+验签+身份验证
2020-03-26 11:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:18 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-26 11:39:18 -此处进行解密+验签+身份验证
2020-03-26 11:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:18 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-26 11:39:18 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-26 11:39:18 -==> Parameters: 426(String)
2020-03-26 11:39:18 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-26 11:39:18 -==> Parameters: 426(String)
2020-03-26 11:39:18 -<==      Total: 1
2020-03-26 11:39:18 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-26 11:39:18 -==> Parameters: 426(String)
2020-03-26 11:39:18 -<==      Total: 1
2020-03-26 11:39:18 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-26 11:39:18 -==> Parameters: 426(String)
2020-03-26 11:39:18 -<==      Total: 10
2020-03-26 11:39:18 -耗时 : 21
2020-03-26 11:39:18 -<==      Total: 1
2020-03-26 11:39:18 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-26 11:39:18 -==> Parameters: 426(String)
2020-03-26 11:39:18 -<==      Total: 1
2020-03-26 11:39:18 -耗时 : 16
2020-03-26 11:39:20 -此处进行解密+验签+身份验证
2020-03-26 11:39:20 -此处进行解密+验签+身份验证
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:20 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-26 11:39:20 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 11:39:20 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type is null 
2020-03-26 11:39:20 -==> Parameters: 2621(String)
2020-03-26 11:39:20 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2621 and pos_type is null ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2621 and cre_month=202003 and pos_type is null 
2020-03-26 11:39:20 -==> Parameters: 
2020-03-26 11:39:20 -<==      Total: 1
2020-03-26 11:39:20 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-26 11:39:20 -==> Parameters: 2621(String)
2020-03-26 11:39:20 -<==      Total: 1
2020-03-26 11:39:20 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2621 and pos_type='epos' 
2020-03-26 11:39:20 -==> Parameters: 
2020-03-26 11:39:20 -此处进行解密+验签+身份验证
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 11:39:21 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-26 11:39:21 -==> Parameters: 2621(String), 2621(String)
2020-03-26 11:39:21 -<==      Total: 1
2020-03-26 11:39:21 -耗时 : 256
2020-03-26 11:39:21 -<==      Total: 1
2020-03-26 11:39:21 -耗时 : 266
2020-03-26 11:39:21 -<==      Total: 1
2020-03-26 11:39:21 -耗时 : 198
2020-03-26 11:39:21 -此处进行解密+验签+身份验证
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 11:39:21 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-26 11:39:21 -==> Parameters: 2621(String), 2621(String), 1(String)
2020-03-26 11:39:21 -<==      Total: 1
2020-03-26 11:39:21 -耗时 : 26
2020-03-26 11:39:21 -此处进行解密+验签+身份验证
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:21 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 11:39:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 11:39:21 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type is null and t2.pos_type is null where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-26 11:39:21 -==> Parameters: 2621(String), 2621(String), 0(String)
2020-03-26 11:39:21 -<==      Total: 0
2020-03-26 11:39:21 -耗时 : 17
2020-03-26 11:39:23 -此处进行解密+验签+身份验证
2020-03-26 11:39:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:23 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosDetail
2020-03-26 11:39:23 -==>  Preparing: select t.sn, t.card_settle_price_vip, t.card_settle_price, t.weixin_settle_price, t.zhifubao_settle_price, t.cloud_settle_price, t.single_profit_rate, t.cash_back_rate, t.mer_cap_fee, t1.mer_name, t1.mer_id, t1.name, t1.tel, t1.credit_card_rate, t1.cloud_flash_rate, t1.weixin_rate, t1.zhifubao_rate, t1.act_status, DATE_FORMAT(t1.act_date, '%Y-%m-%d') AS act_date, t1.cash_back_status, t.is_reward from t_user_traditional_pos_info t left join t_sys_traditional_pos_info t1 on t1.sn = t.sn where t.user_id = ? and t.sn = ? 
2020-03-26 11:39:23 -==> Parameters: 426(String), 000006026221540981(String)
2020-03-26 11:39:23 -<==      Total: 1
2020-03-26 11:39:23 -==>  Preparing: select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info where sn=? and isuse=1 and module_type=1 
2020-03-26 11:39:23 -==> Parameters: 000006026221540981(String)
2020-03-26 11:39:23 -<==      Total: 0
2020-03-26 11:39:23 -==>  Preparing: select GROUP_CONCAT(policy_name) as policy_name from t_sys_pos_policy_info where sn=? 
2020-03-26 11:39:23 -==> Parameters: 000006026221540981(String)
2020-03-26 11:39:23 -<==      Total: 1
2020-03-26 11:39:23 -==>  Preparing: select pos_type from t_sys_traditional_pos_info where sn=? 
2020-03-26 11:39:23 -==> Parameters: 000006026221540981(String)
2020-03-26 11:39:23 -<==      Total: 1
2020-03-26 11:39:23 -==>  Preparing: select cast(performance as char) as performance,cast(num as char) as num FROM t_summary_traditional_pos_trans_all where 1=1 and pos_type is null and sn=? and user_id=? 
2020-03-26 11:39:23 -==> Parameters: 000006026221540981(String), 426(String)
2020-03-26 11:39:23 -<==      Total: 1
2020-03-26 11:39:23 -耗时 : 35
2020-03-26 11:39:28 -此处进行解密+验签+身份验证
2020-03-26 11:39:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:28 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:28 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosTradeDetail
2020-03-26 11:39:28 -==>  Preparing: select * from ( select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_trapos_share_benefit_record where user_id=? and sn=? union all select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_mpos_share_benefit_record where user_id=? and sn=? ) tb order by trans_time desc 
2020-03-26 11:39:28 -==> Parameters: 426(String), 000006026221540981(String), 426(String), 000006026221540981(String)
2020-03-26 11:39:29 -<==      Total: 1
2020-03-26 11:39:29 -耗时 : 1330
2020-03-26 11:39:46 -此处进行解密+验签+身份验证
2020-03-26 11:39:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:39:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:39:46 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosTradeDetail
2020-03-26 11:39:46 -==>  Preparing: select * from ( select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_trapos_share_benefit_record where user_id=? and sn=? union all select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_mpos_share_benefit_record where user_id=? and sn=? ) tb order by trans_time desc 
2020-03-26 11:39:46 -==> Parameters: 426(String), 000006026221540981(String), 426(String), 000006026221540981(String)
2020-03-26 11:39:47 -<==      Total: 1
2020-03-26 11:39:47 -耗时 : 1068
2020-03-26 11:40:29 -Starting LongEcologicalApplication on PC-201905161910 with PID 10992 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-26 11:40:29 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-26 11:40:29 -No active profile set, falling back to default profiles: default
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-26 11:40:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-26 11:40:30 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-26 11:40:30 -Finished Spring Data repository scanning in 67ms. Found 0 repository interfaces.
2020-03-26 11:40:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-26 11:40:30 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-26 11:40:30 -Finished Spring Data repository scanning in 42ms. Found 0 repository interfaces.
2020-03-26 11:40:31 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$fedc63a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-26 11:40:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9604843] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-26 11:40:31 -Tomcat initialized with port(s): 8080 (http)
2020-03-26 11:40:31 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-26 11:40:31 -Starting service [Tomcat]
2020-03-26 11:40:31 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-26 11:40:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-26 11:40:32 -Initializing Spring embedded WebApplicationContext
2020-03-26 11:40:32 -Root WebApplicationContext: initialization completed in 2406 ms
2020-03-26 11:40:32 -Filter xssFilter was not registered (disabled)
2020-03-26 11:40:32 -HikariPool-1 - Starting...
2020-03-26 11:40:32 -HikariPool-1 - Start completed.
2020-03-26 11:40:32 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-26 11:40:32 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-26 11:40:32 -HHH000206: hibernate.properties not found
2020-03-26 11:40:33 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-26 11:40:33 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-26 11:40:33 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-26 11:40:33 -Using default implementation for ThreadExecutor
2020-03-26 11:40:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-26 11:40:33 -Quartz Scheduler v.2.3.0 created.
2020-03-26 11:40:33 -RAMJobStore initialized.
2020-03-26 11:40:33 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-26 11:40:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-26 11:40:33 -Quartz scheduler version: 2.3.0
2020-03-26 11:40:33 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@4727e5fc
2020-03-26 11:40:34 -STAET TaskExecutorConfig
2020-03-26 11:40:34 -Initializing ExecutorService
2020-03-26 11:40:34 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-26 11:40:34 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-26 11:40:35 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-26 11:40:35 -Initializing ExecutorService 'taskScheduler'
2020-03-26 11:40:35 -Starting Quartz Scheduler now
2020-03-26 11:40:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-26 11:40:35 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-26 11:40:35 -Using a shared selector for servlet write/read
2020-03-26 11:40:35 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-26 11:40:35 -Started LongEcologicalApplication in 6.939 seconds (JVM running for 8.726)
2020-03-26 11:40:44 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-26 11:40:44 -Initializing Servlet 'dispatcherServlet'
2020-03-26 11:40:44 -Completed initialization in 71 ms
2020-03-26 11:40:45 -此处进行解密+验签+身份验证
2020-03-26 11:40:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:40:45 -Starting without optional epoll library
2020-03-26 11:40:45 -Starting without optional kqueue library
2020-03-26 11:40:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:40:45 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosTradeDetail
2020-03-26 11:41:05 -==>  Preparing: select * from ( select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_trapos_share_benefit_record where user_id=? and sn=? union all select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_mpos_share_benefit_record where user_id=? and sn=? ) tb order by trans_time desc 
2020-03-26 11:41:05 -==> Parameters: 426(String), 000006026221540981(String), 426(String), 000006026221540981(String)
2020-03-26 11:41:06 -<==      Total: 1
2020-03-26 11:41:06 -耗时 : 20439
2020-03-26 11:41:15 -此处进行解密+验签+身份验证
2020-03-26 11:41:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:41:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:41:15 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosTradeDetail
2020-03-26 11:41:15 -==>  Preparing: select * from ( select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_trapos_share_benefit_record where user_id=? and sn=? union all select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_mpos_share_benefit_record where user_id=? and sn=? ) tb order by trans_time desc 
2020-03-26 11:41:15 -==> Parameters: 426(String), 000006026221540981(String), 426(String), 000006026221540981(String)
2020-03-26 11:41:16 -<==      Total: 1
2020-03-26 11:41:16 -耗时 : 943
2020-03-26 11:41:29 -此处进行解密+验签+身份验证
2020-03-26 11:41:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 11:41:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 11:41:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getTraditionalPosTradeDetail
2020-03-26 11:41:29 -==>  Preparing: select * from ( select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_trapos_share_benefit_record where user_id=? and sn=? union all select DATE_FORMAT( STR_TO_DATE( trans_time, '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) as trans_time,trans_amount,benefit_money from t_user_mpos_share_benefit_record where user_id=? and sn=? ) tb order by trans_time desc 
2020-03-26 11:41:29 -==> Parameters: 426(String), 000006026221540981(String), 426(String), 000006026221540981(String)
2020-03-26 11:41:30 -<==      Total: 1
2020-03-26 11:41:30 -耗时 : 892
2020-03-26 12:27:24 -此处进行解密+验签+身份验证
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 12:27:24 -此处进行解密+验签+身份验证
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 12:27:24 -此处进行解密+验签+身份验证
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 12:27:24 -此处进行解密+验签+身份验证
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 12:27:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-26 12:27:24 -此处进行解密+验签+身份验证
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 12:27:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-26 12:27:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosList
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 12:27:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyHeadTraditionalPosInfo
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2621
2020-03-26 12:27:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2621 , return
2020-03-26 12:27:24 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyTraditionalPosTradeAmountAvg
2020-03-26 12:27:24 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as merchant_performance,IFNULL(cast(TRUNCATE(sum(performance)/(select trade_num from t_summary_user_traditional_pos_benefit_all where user_id=2621 and pos_type='epos' ),2) as char),'0') as avg_performance from t_summary_traditional_pos_trans_month where user_id=2621 and cre_month=202003 and pos_type='epos' 
2020-03-26 12:27:24 -==> Parameters: 
2020-03-26 12:27:24 -==>  Preparing: select cast(performance as char) as performance, cast(pos_num as char) as pos_num, cast(trade_num as char) as trade_num from t_summary_user_traditional_pos_benefit_all where user_id = ? and pos_type='epos' 
2020-03-26 12:27:24 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' ORDER BY t.id desc limit 0,10 
2020-03-26 12:27:24 -==> Parameters: 2621(String)
2020-03-26 12:27:24 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' AND t.trade_status = ? and t2.performance=0 ORDER BY t.id desc limit 0,10 
2020-03-26 12:27:24 -==>  Preparing: select cast(t.id as char) as trapos_id, t.sn, t1.mer_name, t1.mer_id, cast(t2.performance as char) performance,t.state_status from t_user_traditional_pos_info t inner join t_sys_traditional_pos_info t1 on t1.sn = t.sn inner join t_summary_traditional_pos_trans_all t2 on t2.user_id = ? and t2.sn = t.sn and t1.pos_type='epos' and t2.pos_type='epos' where t.user_id = ? and t.del = '0' AND t.trade_status = ? ORDER BY t.id desc limit 0,10 
2020-03-26 12:27:24 -==> Parameters: 2621(String), 2621(String)
2020-03-26 12:27:24 -==> Parameters: 2621(String), 2621(String), 1(String)
2020-03-26 12:27:24 -==> Parameters: 2621(String), 2621(String), 0(String)
2020-03-26 12:27:25 -<==      Total: 1
2020-03-26 12:27:25 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-26 12:27:25 -==> Parameters: 2621(String)
2020-03-26 12:27:25 -<==      Total: 1
2020-03-26 12:27:25 -==>  Preparing: select IFNULL(cast(sum(performance) as char),'0') as amount from t_summary_traditional_pos_trans_all where user_id=2621 and pos_type='epos' 
2020-03-26 12:27:25 -==> Parameters: 
2020-03-26 12:27:25 -<==      Total: 0
2020-03-26 12:27:25 -耗时 : 199
2020-03-26 12:27:25 -<==      Total: 1
2020-03-26 12:27:25 -耗时 : 199
2020-03-26 12:27:25 -<==      Total: 1
2020-03-26 12:27:25 -耗时 : 211
2020-03-26 12:27:25 -<==      Total: 1
2020-03-26 12:27:25 -耗时 : 282
2020-03-26 12:27:25 -<==      Total: 1
2020-03-26 12:27:25 -耗时 : 319
2020-03-26 13:25:29 -此处进行解密+验签+身份验证
2020-03-26 13:25:29 -此处进行解密+验签+身份验证
2020-03-26 13:25:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:25:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:25:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:25:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:25:29 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 13:25:29 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 13:25:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 13:25:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 13:25:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 13:25:29 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 13:25:29 -==> Parameters: 426(String)
2020-03-26 13:25:29 -==> Parameters: 426(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -耗时 : 28
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:25:29 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:25:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 13:25:29 -<==    Updates: 1
2020-03-26 13:25:29 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 13:25:29 -==> Parameters: 426(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:25:29 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:25:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 13:25:29 -<==    Updates: 1
2020-03-26 13:25:29 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 13:25:29 -==> Parameters: 
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:25:29 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:25:29 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 13:25:29 -<==    Updates: 1
2020-03-26 13:25:29 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 13:25:29 -==> Parameters: 426(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:25:29 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:25:29 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 13:25:29 -<==    Updates: 1
2020-03-26 13:25:29 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:25:29 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 13:25:29 -<==      Total: 1
2020-03-26 13:25:29 -耗时 : 133
2020-03-26 13:26:56 -此处进行解密+验签+身份验证
2020-03-26 13:26:56 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-26 13:26:56 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-26 13:26:56 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-26 13:26:56 -耗时 : 29
2020-03-26 13:26:56 -此处进行解密+验签+身份验证
2020-03-26 13:26:57 -此处进行解密+验签+身份验证
2020-03-26 13:26:57 -解密：
2020-03-26 13:26:57 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"6994C37FADC9DE97FCDAA2A5DE7C5D5A","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP"}
2020-03-26 13:26:57 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-26 13:26:57 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-26 13:26:57 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-26 13:26:57 -==> Parameters: 04(String), 04(String)
2020-03-26 13:26:57 -<==      Total: 1
2020-03-26 13:26:57 -耗时 : 9
2020-03-26 13:26:57 -token值=======426|RDT9PFSETBEVH3JRNQ9PU2323LLV89FP
2020-03-26 13:26:57 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-26 13:26:57 -==> Parameters: 426(String)
2020-03-26 13:26:57 -<==      Total: 1
2020-03-26 13:26:57 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-26 13:26:57 -==> Parameters: 25(String)
2020-03-26 13:26:57 -<==      Total: 1
2020-03-26 13:26:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 13:26:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 13:26:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 13:26:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 13:26:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-26 13:26:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-26 13:26:57 -耗时 : 49
2020-03-26 13:27:01 -此处进行解密+验签+身份验证
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 13:27:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 13:27:01 -==> Parameters: 426(String)
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -耗时 : 2
2020-03-26 13:27:01 -此处进行解密+验签+身份验证
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-26 13:27:01 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-26 13:27:01 -==> Parameters: 426(String)
2020-03-26 13:27:01 -<==      Total: 2
2020-03-26 13:27:01 -耗时 : 8
2020-03-26 13:27:01 -此处进行解密+验签+身份验证
2020-03-26 13:27:01 -解密：
2020-03-26 13:27:01 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-26 13:27:01 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-26 13:27:01 -==> Parameters: 01(String), 01(String)
2020-03-26 13:27:01 -<==      Total: 4
2020-03-26 13:27:01 -耗时 : 2
2020-03-26 13:27:01 -此处进行解密+验签+身份验证
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 13:27:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 13:27:01 -==> Parameters: 426(String)
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -耗时 : 3
2020-03-26 13:27:01 -此处进行解密+验签+身份验证
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:01 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-26 13:27:01 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-26 13:27:01 -==> Parameters: 
2020-03-26 13:27:01 -此处进行解密+验签+身份验证
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 13:27:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 13:27:01 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:01 -此处进行解密+验签+身份验证
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 13:27:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 13:27:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 13:27:01 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:01 -<==      Total: 3
2020-03-26 13:27:01 -耗时 : 59
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:01 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 13:27:01 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 13:27:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 13:27:01 -<==    Updates: 1
2020-03-26 13:27:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 13:27:01 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:01 -<==    Updates: 1
2020-03-26 13:27:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 13:27:01 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:01 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 13:27:01 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:01 -<==      Total: 1
2020-03-26 13:27:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 13:27:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:01 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 13:27:02 -<==    Updates: 1
2020-03-26 13:27:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 13:27:02 -==> Parameters: 
2020-03-26 13:27:02 -<==    Updates: 1
2020-03-26 13:27:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 13:27:02 -==> Parameters: 
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:02 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:02 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:02 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 13:27:02 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 13:27:02 -<==    Updates: 1
2020-03-26 13:27:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 13:27:02 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:02 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 13:27:02 -<==    Updates: 1
2020-03-26 13:27:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 13:27:02 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:02 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:02 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 13:27:02 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 13:27:02 -<==    Updates: 1
2020-03-26 13:27:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:02 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 13:27:02 -<==    Updates: 1
2020-03-26 13:27:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 13:27:02 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -耗时 : 202
2020-03-26 13:27:02 -<==      Total: 1
2020-03-26 13:27:02 -耗时 : 218
2020-03-26 13:27:15 -此处进行解密+验签+身份验证
2020-03-26 13:27:15 -此处进行解密+验签+身份验证
2020-03-26 13:27:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:15 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:15 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-26 13:27:15 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-26 13:27:15 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-26 13:27:15 -==> Parameters: 426(String)
2020-03-26 13:27:15 -<==      Total: 1
2020-03-26 13:27:15 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-26 13:27:15 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:15 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:27:15 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:27:15 -<==      Total: 1
2020-03-26 13:27:15 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-26 13:27:15 -==> Parameters: 426(String)
2020-03-26 13:27:15 -<==      Total: 1
2020-03-26 13:27:15 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:27:15 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:27:15 -<==      Total: 1
2020-03-26 13:27:15 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-26 13:27:15 -==> Parameters: 426(String)
2020-03-26 13:27:15 -<==      Total: 1
2020-03-26 13:27:15 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:27:15 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:27:15 -<==      Total: 1
2020-03-26 13:27:15 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-26 13:27:15 -==> Parameters: 426(String)
2020-03-26 13:27:15 -<==      Total: 0
2020-03-26 13:27:15 -耗时 : 62
2020-03-26 13:27:16 -<==      Total: 1
2020-03-26 13:27:16 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-26 13:27:16 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:16 -<==      Total: 1
2020-03-26 13:27:16 -耗时 : 1768
2020-03-26 13:27:50 -此处进行解密+验签+身份验证
2020-03-26 13:27:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:50 -此处进行解密+验签+身份验证
2020-03-26 13:27:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:27:50 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-26 13:27:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:27:50 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-26 13:27:50 -==> Parameters: 426(String)
2020-03-26 13:27:50 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-26 13:27:54 -<==      Total: 1
2020-03-26 13:27:54 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-26 13:27:54 -==> Parameters: 426(String), 426(String)
2020-03-26 13:27:54 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:27:54 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:27:54 -<==      Total: 1
2020-03-26 13:28:06 -<==      Total: 1
2020-03-26 13:28:06 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-26 13:28:06 -==> Parameters: 426(String), 426(String)
2020-03-26 13:28:06 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-26 13:28:06 -==> Parameters: 426(String)
2020-03-26 13:28:06 -<==      Total: 1
2020-03-26 13:28:24 -<==      Total: 1
2020-03-26 13:28:24 -耗时 : 33976
2020-03-26 13:28:25 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:28:25 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:28:25 -<==      Total: 1
2020-03-26 13:28:28 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-26 13:28:28 -==> Parameters: 426(String)
2020-03-26 13:28:28 -<==      Total: 1
2020-03-26 13:28:40 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:28:40 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:28:40 -<==      Total: 1
2020-03-26 13:28:43 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-26 13:28:43 -==> Parameters: 426(String)
2020-03-26 13:28:43 -<==      Total: 0
2020-03-26 13:28:59 -耗时 : 69338
2020-03-26 13:29:31 -此处进行解密+验签+身份验证
2020-03-26 13:29:31 -此处进行解密+验签+身份验证
2020-03-26 13:29:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:29:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:29:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:29:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:29:31 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-26 13:29:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-26 13:29:37 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-26 13:29:37 -==> Parameters: 426(String)
2020-03-26 13:29:37 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:29:37 -<==      Total: 1
2020-03-26 13:29:37 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-26 13:29:37 -==> Parameters: 426(String), 426(String)
2020-03-26 13:29:37 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:29:37 -<==      Total: 1
2020-03-26 13:29:43 -<==      Total: 1
2020-03-26 13:29:44 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-26 13:29:44 -==> Parameters: 426(String), 426(String)
2020-03-26 13:29:44 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-26 13:29:44 -==> Parameters: 426(String)
2020-03-26 13:29:44 -<==      Total: 1
2020-03-26 13:29:44 -<==      Total: 1
2020-03-26 13:29:44 -耗时 : 13086
2020-03-26 13:29:54 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:29:54 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:29:54 -<==      Total: 1
2020-03-26 13:29:55 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-26 13:29:55 -==> Parameters: 426(String)
2020-03-26 13:29:55 -<==      Total: 1
2020-03-26 13:29:56 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:29:56 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:29:56 -<==      Total: 1
2020-03-26 13:29:58 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-26 13:29:58 -==> Parameters: 426(String)
2020-03-26 13:29:58 -<==      Total: 0
2020-03-26 13:30:30 -耗时 : 59150
2020-03-26 13:30:30 -HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46s483ms902µs147ns).
2020-03-26 13:31:16 -此处进行解密+验签+身份验证
2020-03-26 13:31:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:31:16 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:31:16 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-26 13:31:17 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:31:17 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:31:17 -此处进行解密+验签+身份验证
2020-03-26 13:31:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 13:31:17 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 13:31:17 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-26 13:31:17 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-26 13:31:17 -==> Parameters: 426(String)
2020-03-26 13:31:17 -<==      Total: 1
2020-03-26 13:31:17 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-26 13:31:17 -==> Parameters: 426(String), 426(String)
2020-03-26 13:31:17 -<==      Total: 1
2020-03-26 13:31:17 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-26 13:31:17 -==> Parameters: 426(String)
2020-03-26 13:31:18 -<==      Total: 1
2020-03-26 13:31:18 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:31:18 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:31:18 -<==      Total: 1
2020-03-26 13:31:18 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-26 13:31:18 -==> Parameters: 426(String)
2020-03-26 13:31:18 -<==      Total: 1
2020-03-26 13:31:18 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-26 13:31:18 -==> Parameters: 202003(String), 426(String)
2020-03-26 13:31:18 -<==      Total: 1
2020-03-26 13:31:18 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-26 13:31:18 -==> Parameters: 426(String)
2020-03-26 13:31:18 -<==      Total: 0
2020-03-26 13:31:18 -耗时 : 1716
2020-03-26 13:31:19 -<==      Total: 1
2020-03-26 13:31:19 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-26 13:31:19 -==> Parameters: 426(String), 426(String)
2020-03-26 13:31:19 -<==      Total: 1
2020-03-26 13:31:19 -耗时 : 1370
2020-03-26 16:00:44 -此处进行解密+验签+身份验证
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:00:44 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-26 16:00:44 -此处进行解密+验签+身份验证
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:00:44 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 16:00:44 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast(money as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-26 16:00:44 -==> Parameters: 426(String)
2020-03-26 16:00:44 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-26 16:00:44 -==> Parameters: 426(String), 202003(String)
2020-03-26 16:00:44 -此处进行解密+验签+身份验证
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:00:44 -<==      Total: 1
2020-03-26 16:00:44 -<==      Total: 1
2020-03-26 16:00:44 -耗时 : 30
2020-03-26 16:00:44 -耗时 : 25
2020-03-26 16:00:44 -此处进行解密+验签+身份验证
2020-03-26 16:00:44 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-26 16:00:44 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:00:44 -==> Parameters: 426(String), 202003(String)
2020-03-26 16:00:44 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:00:44 -<==      Total: 1
2020-03-26 16:00:44 -耗时 : 2
2020-03-26 16:00:44 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-26 16:00:44 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-26 16:00:44 -==> Parameters: 426(String), 202003(String)
2020-03-26 16:00:44 -<==      Total: 1
2020-03-26 16:00:44 -耗时 : 5
2020-03-26 16:00:47 -此处进行解密+验签+身份验证
2020-03-26 16:00:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:00:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:00:47 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 16:00:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 16:00:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 16:00:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:00:47 -==> Parameters: 426(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:00:47 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:00:47 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 16:00:47 -<==    Updates: 1
2020-03-26 16:00:47 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 16:00:47 -==> Parameters: 426(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:00:47 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:00:47 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 16:00:47 -<==    Updates: 1
2020-03-26 16:00:47 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 16:00:47 -==> Parameters: 
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:00:47 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:00:47 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 16:00:47 -<==    Updates: 1
2020-03-26 16:00:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:00:47 -==> Parameters: 426(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:00:47 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:00:47 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 16:00:47 -<==    Updates: 1
2020-03-26 16:00:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:00:47 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 16:00:47 -<==      Total: 1
2020-03-26 16:00:47 -耗时 : 109
2020-03-26 16:01:20 -此处进行解密+验签+身份验证
2020-03-26 16:01:20 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-03-26 16:01:21 -耗时 : 591
2020-03-26 16:01:23 -此处进行解密+验签+身份验证
2020-03-26 16:01:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:01:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:01:23 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 16:01:23 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 16:01:23 -==> Parameters: 426(String)
2020-03-26 16:01:23 -此处进行解密+验签+身份验证
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -耗时 : 11
2020-03-26 16:01:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:01:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:01:23 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 16:01:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 16:01:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 16:01:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:01:23 -==> Parameters: 426(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:23 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:23 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 16:01:23 -<==    Updates: 1
2020-03-26 16:01:23 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 16:01:23 -==> Parameters: 426(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:23 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:23 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 16:01:23 -<==    Updates: 1
2020-03-26 16:01:23 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 16:01:23 -==> Parameters: 
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:23 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:23 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 16:01:23 -<==    Updates: 1
2020-03-26 16:01:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:01:23 -==> Parameters: 426(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:23 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:23 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 16:01:23 -<==    Updates: 1
2020-03-26 16:01:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:23 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 16:01:23 -<==      Total: 1
2020-03-26 16:01:23 -耗时 : 70
2020-03-26 16:01:26 -此处进行解密+验签+身份验证
2020-03-26 16:01:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:01:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:01:26 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 16:01:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 16:01:26 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 16:01:26 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:01:26 -==> Parameters: 426(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:26 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:26 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 16:01:26 -<==    Updates: 1
2020-03-26 16:01:26 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 16:01:26 -==> Parameters: 426(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:26 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:26 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 16:01:26 -<==    Updates: 1
2020-03-26 16:01:26 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 16:01:26 -==> Parameters: 
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:26 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:26 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 16:01:26 -<==    Updates: 1
2020-03-26 16:01:26 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:01:26 -==> Parameters: 426(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:26 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:01:26 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 16:01:26 -<==    Updates: 1
2020-03-26 16:01:26 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:01:26 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 16:01:26 -<==      Total: 1
2020-03-26 16:01:26 -耗时 : 66
2020-03-26 16:28:45 -此处进行解密+验签+身份验证
2020-03-26 16:28:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:28:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:28:45 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 16:28:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 16:28:45 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 16:28:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:28:45 -==> Parameters: 426(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:45 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:45 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 16:28:45 -<==    Updates: 1
2020-03-26 16:28:45 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 16:28:45 -==> Parameters: 426(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:45 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:45 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 16:28:45 -<==    Updates: 1
2020-03-26 16:28:45 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 16:28:45 -==> Parameters: 
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:45 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:45 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 16:28:45 -<==    Updates: 1
2020-03-26 16:28:45 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:28:45 -==> Parameters: 426(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:45 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:45 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 16:28:45 -<==    Updates: 1
2020-03-26 16:28:45 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:45 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 16:28:45 -<==      Total: 1
2020-03-26 16:28:45 -耗时 : 103
2020-03-26 16:28:52 -此处进行解密+验签+身份验证
2020-03-26 16:28:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:28:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:28:52 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-26 16:28:52 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-26 16:28:52 -==> Parameters: 426(String)
2020-03-26 16:28:52 -此处进行解密+验签+身份验证
2020-03-26 16:28:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:28:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:28:52 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 16:28:52 -耗时 : 6
2020-03-26 16:28:52 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 16:28:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:28:52 -==> Parameters: 426(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:52 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 16:28:52 -<==    Updates: 1
2020-03-26 16:28:52 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 16:28:52 -==> Parameters: 426(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:52 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 16:28:52 -<==    Updates: 1
2020-03-26 16:28:52 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 16:28:52 -==> Parameters: 
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:52 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:52 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 16:28:52 -<==    Updates: 1
2020-03-26 16:28:52 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:28:52 -==> Parameters: 426(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:52 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:28:52 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 16:28:52 -<==    Updates: 1
2020-03-26 16:28:52 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:28:52 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 16:28:52 -<==      Total: 1
2020-03-26 16:28:52 -耗时 : 60
2020-03-26 16:29:04 -此处进行解密+验签+身份验证
2020-03-26 16:29:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:29:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:29:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-26 16:29:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 16:29:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 16:29:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:29:04 -==> Parameters: 426(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:29:04 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:29:04 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-26 16:29:04 -<==    Updates: 1
2020-03-26 16:29:04 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-26 16:29:04 -==> Parameters: 426(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:29:04 -==> Parameters: recallFlag(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:29:04 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-26 16:29:04 -<==    Updates: 1
2020-03-26 16:29:04 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-26 16:29:04 -==> Parameters: 
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:29:04 -==> Parameters: collegeFlag(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:29:04 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-26 16:29:04 -<==    Updates: 1
2020-03-26 16:29:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-26 16:29:04 -==> Parameters: 426(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:29:04 -==> Parameters: cardFlag(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-26 16:29:04 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-26 16:29:04 -<==    Updates: 1
2020-03-26 16:29:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-26 16:29:04 -==> Parameters: appImgFlag(String), 426(String)
2020-03-26 16:29:04 -<==      Total: 1
2020-03-26 16:29:04 -耗时 : 68
2020-03-26 16:29:08 -此处进行解密+验签+身份验证
2020-03-26 16:29:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:29:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:29:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-26 16:29:08 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-03-26 16:29:08 -==> Parameters: 426(String)
2020-03-26 16:29:08 -此处进行解密+验签+身份验证
2020-03-26 16:29:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:29:08 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:29:08 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryMposList
2020-03-26 16:29:08 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND del='0' 
2020-03-26 16:29:08 -==> Parameters: 426(String)
2020-03-26 16:29:08 -<==      Total: 1
2020-03-26 16:29:08 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-03-26 16:29:08 -==> Parameters: 426(String), 426(String), 202003(String)
2020-03-26 16:29:08 -<==      Total: 1
2020-03-26 16:29:08 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-26 16:29:08 -==> Parameters: 426(String), 426(String), 20200225(String), 20200326(String), 426(String)
2020-03-26 16:29:08 -<==      Total: 1
2020-03-26 16:29:08 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_mpos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-03-26 16:29:08 -==> Parameters: 426(String), 426(String), 202003(String)
2020-03-26 16:29:09 -<==      Total: 1
2020-03-26 16:29:09 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-26 16:29:09 -==> Parameters: 426(String), 426(String), 20200225(String), 20200326(String), 426(String)
2020-03-26 16:29:09 -<==      Total: 1
2020-03-26 16:29:09 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-26 16:29:09 -==> Parameters: 426(String), 20200126(String), 426(String), 20200126(String), 20200326(String), 426(String)
2020-03-26 16:29:10 -<==      Total: 1
2020-03-26 16:29:10 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-03-26 16:29:10 -==> Parameters: 426(String)
2020-03-26 16:29:10 -<==      Total: 1
2020-03-26 16:29:10 -耗时 : 2468
2020-03-26 16:29:10 -<==      Total: 1
2020-03-26 16:29:10 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-26 16:29:10 -==> Parameters: 426(String), 20200126(String), 426(String), 20200126(String), 20200326(String), 426(String)
2020-03-26 16:29:11 -<==      Total: 1
2020-03-26 16:29:11 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='02' 
2020-03-26 16:29:11 -==> Parameters: 426(String)
2020-03-26 16:29:11 -<==      Total: 1
2020-03-26 16:29:11 -耗时 : 3288
2020-03-26 16:29:19 -此处进行解密+验签+身份验证
2020-03-26 16:29:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-26 16:29:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-26 16:29:19 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPolicy3Record
2020-03-26 16:29:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-26 16:29:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-26 16:29:19 -==>  Preparing: select sn,mer_id,mer_name,max(trade_amount) as trade_amount,(case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(end_date,'%Y%m%d')) else 0 end) as expire_day, max(begin_date) as begin_date,max(end_date) as end_date,max(choose) as choose,GROUP_CONCAT(policy_id) as policy_id from t_sys_pos_policy3_record where user_id=? and pos_type=? group by sn,mer_id,mer_name,begin_date,end_date,choose order by choose 
2020-03-26 16:29:19 -==> Parameters: 426(String), 01(String)
2020-03-26 16:29:19 -<==      Total: 1
2020-03-26 16:29:19 -==>  Preparing: select * from t_sys_pos_policy_define where policy_type=3 and manager_id=? and id in(select policy_id from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1) order by policy_quantity asc 
2020-03-26 16:29:19 -==> Parameters: 25(String), 000006027280394103(String)
2020-03-26 16:29:19 -<==      Total: 4
2020-03-26 16:29:19 -耗时 : 59
2020-03-26 18:45:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-26 18:45:59 -Shutting down ExecutorService 'taskScheduler'
2020-03-26 18:45:59 -Shutting down ExecutorService 'getAsyncExecutor'
2020-03-26 18:45:59 -Shutting down Quartz Scheduler
2020-03-26 18:45:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-03-26 18:45:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-26 18:45:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-03-26 18:45:59 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-03-26 18:45:59 -HikariPool-1 - Shutdown initiated...
2020-03-26 18:45:59 -HikariPool-1 - Shutdown completed.
