2020-03-21 09:49:25 -Starting LongEcologicalApplication on PC-201905161910 with PID 21068 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-21 09:49:25 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-21 09:49:25 -No active profile set, falling back to default profiles: default
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 09:49:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 09:49:27 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-21 09:49:27 -Finished Spring Data repository scanning in 96ms. Found 0 repository interfaces.
2020-03-21 09:49:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 09:49:27 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-21 09:49:27 -Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-03-21 09:49:27 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$f6254e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 09:49:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9e63986] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 09:49:28 -Tomcat initialized with port(s): 8080 (http)
2020-03-21 09:49:28 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-21 09:49:28 -Starting service [Tomcat]
2020-03-21 09:49:28 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-21 09:49:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-21 09:49:28 -Initializing Spring embedded WebApplicationContext
2020-03-21 09:49:28 -Root WebApplicationContext: initialization completed in 2901 ms
2020-03-21 09:49:28 -Filter xssFilter was not registered (disabled)
2020-03-21 09:49:29 -HikariPool-1 - Starting...
2020-03-21 09:49:29 -HikariPool-1 - Start completed.
2020-03-21 09:49:29 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-21 09:49:29 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-21 09:49:29 -HHH000206: hibernate.properties not found
2020-03-21 09:49:30 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-21 09:49:30 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-21 09:49:30 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-21 09:49:31 -Using default implementation for ThreadExecutor
2020-03-21 09:49:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-21 09:49:31 -Quartz Scheduler v.2.3.0 created.
2020-03-21 09:49:31 -RAMJobStore initialized.
2020-03-21 09:49:31 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-21 09:49:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-21 09:49:31 -Quartz scheduler version: 2.3.0
2020-03-21 09:49:31 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@eaf8427
2020-03-21 09:49:31 -STAET TaskExecutorConfig
2020-03-21 09:49:31 -Initializing ExecutorService
2020-03-21 09:49:31 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-21 09:49:32 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-21 09:49:32 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-21 09:49:32 -Initializing ExecutorService 'taskScheduler'
2020-03-21 09:49:32 -Starting Quartz Scheduler now
2020-03-21 09:49:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-21 09:49:32 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-21 09:49:32 -Using a shared selector for servlet write/read
2020-03-21 09:49:32 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-21 09:49:32 -Started LongEcologicalApplication in 7.859 seconds (JVM running for 10.192)
2020-03-21 10:00:16 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-21 10:00:16 -Initializing Servlet 'dispatcherServlet'
2020-03-21 10:00:16 -Completed initialization in 11 ms
2020-03-21 10:00:16 -此处进行解密+验签+身份验证
2020-03-21 10:00:16 -此处进行解密+验签+身份验证
2020-03-21 10:00:16 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-21 10:00:16 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-21 10:00:17 -Starting without optional epoll library
2020-03-21 10:00:17 -Starting without optional kqueue library
2020-03-21 10:00:17 -解密：
2020-03-21 10:00:17 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 10:00:17 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 10:00:17 -==> Parameters: 04(String), 04(String)
2020-03-21 10:00:17 -<==      Total: 1
2020-03-21 10:00:17 -耗时 : 64
2020-03-21 10:00:17 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-21 10:00:17 -耗时 : 917
2020-03-21 10:00:17 -此处进行解密+验签+身份验证
2020-03-21 10:00:17 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"E0B85B77F3116FFB00AFC789C54D2E5E","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5"}
2020-03-21 10:00:17 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-21 10:00:17 -token值=======469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5
2020-03-21 10:00:17 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-21 10:00:17 -==> Parameters: 469(String)
2020-03-21 10:00:17 -<==      Total: 1
2020-03-21 10:00:17 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-21 10:00:17 -==> Parameters: 25(String)
2020-03-21 10:00:17 -<==      Total: 1
2020-03-21 10:00:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 10:00:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 10:00:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 10:00:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 10:00:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 10:00:17 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 10:00:17 -耗时 : 87
2020-03-21 10:00:21 -此处进行解密+验签+身份验证
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:00:21 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:00:21 -==> Parameters: 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -耗时 : 27
2020-03-21 10:00:21 -此处进行解密+验签+身份验证
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:21 -此处进行解密+验签+身份验证
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:21 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-21 10:00:21 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-21 10:00:21 -==> Parameters: 
2020-03-21 10:00:21 -此处进行解密+验签+身份验证
2020-03-21 10:00:21 -此处进行解密+验签+身份验证
2020-03-21 10:00:21 -解密：
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:21 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:21 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 10:00:21 -==> Parameters: 01(String), 01(String)
2020-03-21 10:00:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:00:21 -<==      Total: 3
2020-03-21 10:00:21 -耗时 : 18
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:00:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-21 10:00:21 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-21 10:00:21 -==> Parameters: 469(String)
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:00:21 -<==      Total: 4
2020-03-21 10:00:21 -耗时 : 22
2020-03-21 10:00:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:21 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 2
2020-03-21 10:00:21 -耗时 : 15
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:00:21 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:00:21 -此处进行解密+验签+身份验证
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:21 -此处进行解密+验签+身份验证
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:00:21 -==> Parameters: 
2020-03-21 10:00:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:00:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:00:21 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:00:21 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:00:21 -==> Parameters: 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:00:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:21 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -耗时 : 15
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:21 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:00:21 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -耗时 : 225
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:00:21 -==> Parameters: 
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:21 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:21 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:00:21 -<==    Updates: 1
2020-03-21 10:00:21 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:21 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:00:21 -<==      Total: 1
2020-03-21 10:00:21 -耗时 : 215
2020-03-21 10:00:31 -此处进行解密+验签+身份验证
2020-03-21 10:00:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:31 -此处进行解密+验签+身份验证
2020-03-21 10:00:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:00:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:31 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:00:31 -==> Parameters: 469(String)
2020-03-21 10:00:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:00:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:00:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -耗时 : 21
2020-03-21 10:00:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:31 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:31 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:31 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:00:31 -<==    Updates: 1
2020-03-21 10:00:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:00:31 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:31 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:31 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:00:31 -<==    Updates: 1
2020-03-21 10:00:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:00:31 -==> Parameters: 
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:31 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:31 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:00:31 -<==    Updates: 1
2020-03-21 10:00:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:31 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:31 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:31 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:00:31 -<==    Updates: 1
2020-03-21 10:00:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:31 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:00:31 -<==      Total: 1
2020-03-21 10:00:31 -耗时 : 245
2020-03-21 10:00:34 -此处进行解密+验签+身份验证
2020-03-21 10:00:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:34 -此处进行解密+验签+身份验证
2020-03-21 10:00:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserAuthStatus
2020-03-21 10:00:34 -请求地址 : http://192.168.191.1:8080/api/sys/reportforms/getHomePageInfo
2020-03-21 10:00:34 -==>  Preparing: select auth_status,id_card, card_photo, real_name, auth_remark from t_user_info where id = ? 
2020-03-21 10:00:34 -==> Parameters: 469(String)
2020-03-21 10:00:34 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type is null ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type is null) t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-21 10:00:34 -==> Parameters: 202003(String), 469(String)
2020-03-21 10:00:34 -<==      Total: 1
2020-03-21 10:00:34 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_everyday where user_id=? and cre_date=CURRENT_DATE union select sum(performance) as amount from t_summary_mpos_trans_everyday where user_id=? and cre_date=CURRENT_DATE ) t 
2020-03-21 10:00:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:34 -<==      Total: 1
2020-03-21 10:00:34 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type is null and cre_date=CURRENT_DATE 
2020-03-21 10:00:34 -==> Parameters: 469(String)
2020-03-21 10:00:34 -<==      Total: 0
2020-03-21 10:00:34 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM t_summary_user_mpos_benefit_all t LEFT JOIN t_summary_user_mpos_benefit_month t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-21 10:00:34 -==> Parameters: 202003(String), 469(String)
2020-03-21 10:00:34 -<==      Total: 1
2020-03-21 10:00:34 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_mpos_benefit_everyday where user_id=? and cre_date=CURRENT_DATE 
2020-03-21 10:00:34 -==> Parameters: 469(String)
2020-03-21 10:00:34 -<==      Total: 0
2020-03-21 10:00:34 -==>  Preparing: SELECT cast(IFNULL(truncate((t1.performance/t.trade_num),2),0) as char) as pos_avg, cast(t.trade_num as char) as pos_num, cast(IFNULL(t1.performance,0.00) as char) as performance, cast(IFNULL(t1.merchant_trade_num+t1.agency_trade_num,0) as char) as act_num FROM (select * from t_summary_user_traditional_pos_benefit_all t where t.pos_type='epos' ) t LEFT JOIN (select * from t_summary_user_traditional_pos_benefit_month t where t.pos_type='epos') t1 ON t.user_id = t1.user_id AND t1.cre_month = ? WHERE t.user_id = ? 
2020-03-21 10:00:34 -==> Parameters: 202003(String), 469(String)
2020-03-21 10:00:34 -<==      Total: 1
2020-03-21 10:00:34 -==>  Preparing: select IFNULL(cast(merchant_trade_num+agency_trade_num as char),'0') as act_num_day from t_summary_user_traditional_pos_benefit_everyday where user_id=? and pos_type='epos' and cre_date=CURRENT_DATE 
2020-03-21 10:00:34 -==> Parameters: 469(String)
2020-03-21 10:00:34 -<==      Total: 0
2020-03-21 10:00:34 -耗时 : 98
2020-03-21 10:00:34 -<==      Total: 1
2020-03-21 10:00:34 -==>  Preparing: select IFNULL(cast(sum(amount) as char),'0') as amount from ( select sum(performance) as amount from t_summary_traditional_pos_trans_all where user_id=? union select sum(performance) as amount from t_summary_mpos_trans_all where user_id=? ) t 
2020-03-21 10:00:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:34 -<==      Total: 1
2020-03-21 10:00:34 -耗时 : 243
2020-03-21 10:00:41 -此处进行解密+验签+身份验证
2020-03-21 10:00:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:00:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:00:41 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:00:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:00:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:00:41 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:41 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:41 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:41 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:00:41 -<==    Updates: 1
2020-03-21 10:00:41 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:00:41 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:41 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:41 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:00:41 -<==    Updates: 1
2020-03-21 10:00:41 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:00:41 -==> Parameters: 
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:41 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:41 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:00:41 -<==    Updates: 1
2020-03-21 10:00:41 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:00:41 -==> Parameters: 469(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:41 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:00:41 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:00:41 -<==    Updates: 1
2020-03-21 10:00:41 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:00:41 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:00:41 -<==      Total: 1
2020-03-21 10:00:41 -耗时 : 227
2020-03-21 10:01:01 -此处进行解密+验签+身份验证
2020-03-21 10:01:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-21 10:01:01 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-21 10:01:01 -==> Parameters: 469(String)
2020-03-21 10:01:01 -<==      Total: 82
2020-03-21 10:01:01 -耗时 : 79
2020-03-21 10:01:01 -此处进行解密+验签+身份验证
2020-03-21 10:01:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-21 10:01:01 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-21 10:01:01 -==> Parameters: 469(String), 469(String)
2020-03-21 10:01:01 -<==      Total: 7
2020-03-21 10:01:01 -耗时 : 314
2020-03-21 10:01:04 -此处进行解密+验签+身份验证
2020-03-21 10:01:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:04 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTrafficCardAllocationList
2020-03-21 10:01:04 -==>  Preparing: SELECT card_no FROM t_user_traffic_card_info WHERE user_id = ? AND state_status = '1' AND del = '0' order by card_no 
2020-03-21 10:01:04 -==> Parameters: 469(String)
2020-03-21 10:01:04 -<==      Total: 0
2020-03-21 10:01:04 -耗时 : 23
2020-03-21 10:01:06 -此处进行解密+验签+身份验证
2020-03-21 10:01:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:06 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTrafficCardAllocationList
2020-03-21 10:01:06 -==>  Preparing: SELECT card_no FROM t_user_traffic_card_info WHERE user_id = ? AND state_status = '1' AND del = '0' order by card_no 
2020-03-21 10:01:06 -==> Parameters: 469(String)
2020-03-21 10:01:06 -<==      Total: 0
2020-03-21 10:01:06 -耗时 : 22
2020-03-21 10:01:07 -此处进行解密+验签+身份验证
2020-03-21 10:01:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:07 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:07 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-21 10:01:07 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-21 10:01:07 -==> Parameters: 469(String)
2020-03-21 10:01:07 -<==      Total: 5
2020-03-21 10:01:07 -耗时 : 34
2020-03-21 10:01:09 -此处进行解密+验签+身份验证
2020-03-21 10:01:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:09 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:09 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-21 10:01:09 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-21 10:01:09 -==> Parameters: 469(String)
2020-03-21 10:01:09 -<==      Total: 5
2020-03-21 10:01:09 -耗时 : 36
2020-03-21 10:01:10 -此处进行解密+验签+身份验证
2020-03-21 10:01:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:10 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-21 10:01:10 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-21 10:01:10 -==> Parameters: 469(String)
2020-03-21 10:01:10 -<==      Total: 0
2020-03-21 10:01:10 -耗时 : 37
2020-03-21 10:01:11 -此处进行解密+验签+身份验证
2020-03-21 10:01:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:11 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-21 10:01:11 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-21 10:01:11 -==> Parameters: 469(String)
2020-03-21 10:01:11 -<==      Total: 0
2020-03-21 10:01:11 -耗时 : 36
2020-03-21 10:01:12 -此处进行解密+验签+身份验证
2020-03-21 10:01:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:12 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:12 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-21 10:01:12 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-21 10:01:12 -==> Parameters: 469(String)
2020-03-21 10:01:12 -<==      Total: 82
2020-03-21 10:01:12 -耗时 : 51
2020-03-21 10:01:13 -此处进行解密+验签+身份验证
2020-03-21 10:01:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:13 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:13 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-21 10:01:13 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-21 10:01:13 -==> Parameters: 469(String)
2020-03-21 10:01:13 -<==      Total: 82
2020-03-21 10:01:13 -耗时 : 56
2020-03-21 10:01:18 -此处进行解密+验签+身份验证
2020-03-21 10:01:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:18 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-21 10:01:18 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-21 10:01:18 -==> Parameters: 469(String)
2020-03-21 10:01:18 -此处进行解密+验签+身份验证
2020-03-21 10:01:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:18 -<==      Total: 3
2020-03-21 10:01:18 -耗时 : 25
2020-03-21 10:01:18 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposSysParamRateList
2020-03-21 10:01:18 -==>  Preparing: select * from t_user_mpos_info where user_id=? and sn=? 
2020-03-21 10:01:18 -==> Parameters: 469(String), M351846116651(String)
2020-03-21 10:01:18 -<==      Total: 1
2020-03-21 10:01:18 -==>  Preparing: select FORMAT(rate,3) as rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-21 10:01:18 -==> Parameters: 
2020-03-21 10:01:18 -<==      Total: 101
2020-03-21 10:01:18 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-21 10:01:18 -==> Parameters: M351846116651(String)
2020-03-21 10:01:18 -<==      Total: 0
2020-03-21 10:01:18 -耗时 : 104
2020-03-21 10:01:34 -此处进行解密+验签+身份验证
2020-03-21 10:01:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:34 -此处进行解密+验签+身份验证
2020-03-21 10:01:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:01:34 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:01:34 -==> Parameters: 469(String)
2020-03-21 10:01:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:01:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:01:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -耗时 : 19
2020-03-21 10:01:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:01:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:34 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:01:34 -<==    Updates: 1
2020-03-21 10:01:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:01:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:34 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:34 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:01:34 -<==    Updates: 1
2020-03-21 10:01:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:01:34 -==> Parameters: 
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:34 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:34 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:01:34 -<==    Updates: 1
2020-03-21 10:01:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:01:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:34 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:01:34 -<==    Updates: 1
2020-03-21 10:01:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:34 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:01:34 -<==      Total: 1
2020-03-21 10:01:34 -耗时 : 225
2020-03-21 10:01:37 -此处进行解密+验签+身份验证
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-21 10:01:37 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-21 10:01:37 -==> Parameters: 469(String)
2020-03-21 10:01:37 -此处进行解密+验签+身份验证
2020-03-21 10:01:37 -<==      Total: 1
2020-03-21 10:01:37 -耗时 : 24
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-21 10:01:37 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-21 10:01:37 -==> Parameters: 469(String), 202003(String)
2020-03-21 10:01:37 -<==      Total: 0
2020-03-21 10:01:37 -耗时 : 22
2020-03-21 10:01:37 -此处进行解密+验签+身份验证
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-21 10:01:37 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-21 10:01:37 -==> Parameters: 469(String), 202003(String)
2020-03-21 10:01:37 -<==      Total: 1
2020-03-21 10:01:37 -耗时 : 15
2020-03-21 10:01:37 -此处进行解密+验签+身份验证
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:37 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:37 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-21 10:01:37 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-21 10:01:37 -==> Parameters: 469(String), 202003(String)
2020-03-21 10:01:37 -<==      Total: 1
2020-03-21 10:01:37 -耗时 : 15
2020-03-21 10:01:40 -此处进行解密+验签+身份验证
2020-03-21 10:01:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:01:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:01:40 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:01:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:01:40 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:01:40 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:01:40 -==> Parameters: 469(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:40 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:40 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:01:40 -<==    Updates: 1
2020-03-21 10:01:40 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:01:40 -==> Parameters: 469(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:40 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:40 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:01:40 -<==    Updates: 1
2020-03-21 10:01:40 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:01:40 -==> Parameters: 
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:40 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:40 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:01:40 -<==    Updates: 1
2020-03-21 10:01:40 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:01:40 -==> Parameters: 469(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:40 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:01:40 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:01:40 -<==    Updates: 1
2020-03-21 10:01:40 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:01:40 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:01:40 -<==      Total: 1
2020-03-21 10:01:40 -耗时 : 225
2020-03-21 10:02:29 -此处进行解密+验签+身份验证
2020-03-21 10:02:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:02:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:02:29 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getShareBenefitEposList
2020-03-21 10:02:29 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, benefit_money, sn, trans_amount, trans_type, trans_product, card_type, benefit_type, state_type, single_amount, DATE_FORMAT(STR_TO_DATE(trans_time,'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS trans_datetime, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_share_benefit_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-21 10:02:29 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-21 10:02:30 -<==      Total: 0
2020-03-21 10:02:30 -耗时 : 434
2020-03-21 10:02:31 -此处进行解密+验签+身份验证
2020-03-21 10:02:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:02:31 -此处进行解密+验签+身份验证
2020-03-21 10:02:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:02:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:02:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:02:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:02:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:02:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:02:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:02:31 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:02:31 -==> Parameters: 469(String)
2020-03-21 10:02:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:02:31 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:31 -<==      Total: 1
2020-03-21 10:02:31 -耗时 : 21
2020-03-21 10:02:31 -<==      Total: 1
2020-03-21 10:02:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:31 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:02:31 -<==      Total: 1
2020-03-21 10:02:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:31 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:02:31 -<==    Updates: 1
2020-03-21 10:02:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:02:31 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:32 -<==      Total: 1
2020-03-21 10:02:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:32 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:02:32 -<==      Total: 1
2020-03-21 10:02:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:32 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:02:32 -<==    Updates: 1
2020-03-21 10:02:32 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:02:32 -==> Parameters: 
2020-03-21 10:02:32 -<==      Total: 1
2020-03-21 10:02:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:32 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:02:32 -<==      Total: 1
2020-03-21 10:02:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:32 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:02:32 -<==    Updates: 1
2020-03-21 10:02:32 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:02:32 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:32 -<==      Total: 1
2020-03-21 10:02:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:32 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:02:32 -<==      Total: 1
2020-03-21 10:02:32 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:32 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:02:32 -<==    Updates: 1
2020-03-21 10:02:32 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:32 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:02:32 -<==      Total: 1
2020-03-21 10:02:32 -耗时 : 231
2020-03-21 10:02:33 -此处进行解密+验签+身份验证
2020-03-21 10:02:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:02:33 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:02:33 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getMachineBackEposList
2020-03-21 10:02:33 -==>  Preparing: SELECT cast(id as char) as record_id, order_id, money, sn, frozen_time, return_amt, DATE_FORMAT(STR_TO_DATE(CONCAT(cre_date, cre_time),'%Y%m%d%H%i%s'),'%Y-%m-%d %H:%i:%s') AS cre_datetime FROM t_user_trapos_machine_back_record WHERE user_id = ? and pos_type='03' and cre_date between ? and ? ORDER BY id desc limit 0,10 
2020-03-21 10:02:33 -==> Parameters: 469(String), 20200301(String), 20200331(String)
2020-03-21 10:02:33 -<==      Total: 0
2020-03-21 10:02:33 -耗时 : 24
2020-03-21 10:02:34 -此处进行解密+验签+身份验证
2020-03-21 10:02:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:02:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:02:34 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:02:34 -此处进行解密+验签+身份验证
2020-03-21 10:02:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:02:34 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:02:34 -==> Parameters: 469(String)
2020-03-21 10:02:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:02:34 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:02:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:02:34 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -耗时 : 21
2020-03-21 10:02:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:02:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:34 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:02:34 -<==    Updates: 1
2020-03-21 10:02:34 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:02:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:34 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:34 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:02:34 -<==    Updates: 1
2020-03-21 10:02:34 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:02:34 -==> Parameters: 
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:34 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:34 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:02:34 -<==    Updates: 1
2020-03-21 10:02:34 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:02:34 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:34 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:34 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:02:34 -<==    Updates: 1
2020-03-21 10:02:34 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:34 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:02:34 -<==      Total: 1
2020-03-21 10:02:34 -耗时 : 219
2020-03-21 10:02:54 -此处进行解密+验签+身份验证
2020-03-21 10:02:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:02:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:02:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:02:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:02:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:02:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:02:54 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:54 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:54 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:02:54 -<==    Updates: 1
2020-03-21 10:02:54 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:02:54 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:54 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:54 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:02:54 -<==    Updates: 1
2020-03-21 10:02:54 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:02:54 -==> Parameters: 
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:54 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:54 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:02:54 -<==    Updates: 1
2020-03-21 10:02:54 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:02:54 -==> Parameters: 469(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:54 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:02:54 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:02:54 -<==    Updates: 1
2020-03-21 10:02:54 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:02:54 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:02:54 -<==      Total: 1
2020-03-21 10:02:54 -耗时 : 226
2020-03-21 10:03:29 -此处进行解密+验签+身份验证
2020-03-21 10:03:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:03:29 -此处进行解密+验签+身份验证
2020-03-21 10:03:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:03:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:03:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:03:29 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:03:29 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:03:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:03:29 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:03:29 -==> Parameters: 469(String)
2020-03-21 10:03:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:03:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:03:30 -==> Parameters: 469(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -耗时 : 20
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:30 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:30 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:03:30 -<==    Updates: 1
2020-03-21 10:03:30 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:03:30 -==> Parameters: 469(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:30 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:30 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:03:30 -<==    Updates: 1
2020-03-21 10:03:30 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:03:30 -==> Parameters: 
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:30 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:30 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:03:30 -<==    Updates: 1
2020-03-21 10:03:30 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:03:30 -==> Parameters: 469(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:30 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:30 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:03:30 -<==    Updates: 1
2020-03-21 10:03:30 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:30 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:03:30 -<==      Total: 1
2020-03-21 10:03:30 -耗时 : 226
2020-03-21 10:03:35 -此处进行解密+验签+身份验证
2020-03-21 10:03:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:03:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:03:35 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:03:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:03:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:03:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:03:35 -==> Parameters: 469(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:35 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:35 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:03:35 -<==    Updates: 1
2020-03-21 10:03:35 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:03:35 -==> Parameters: 469(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:35 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:35 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:03:35 -<==    Updates: 1
2020-03-21 10:03:35 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:03:35 -==> Parameters: 
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:35 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:35 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:03:35 -<==    Updates: 1
2020-03-21 10:03:35 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:03:35 -==> Parameters: 469(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:35 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:03:35 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:03:35 -<==    Updates: 1
2020-03-21 10:03:35 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:03:35 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:03:35 -<==      Total: 1
2020-03-21 10:03:35 -耗时 : 225
2020-03-21 10:04:27 -此处进行解密+验签+身份验证
2020-03-21 10:04:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:04:27 -此处进行解密+验签+身份验证
2020-03-21 10:04:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:04:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:04:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:04:27 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:04:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:04:27 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:04:27 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:04:27 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:04:27 -==> Parameters: 469(String)
2020-03-21 10:04:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:04:27 -==> Parameters: 469(String), 469(String)
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -耗时 : 20
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:04:27 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:04:27 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:04:27 -<==    Updates: 1
2020-03-21 10:04:27 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:04:27 -==> Parameters: 469(String), 469(String)
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:04:27 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:04:27 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:04:27 -<==    Updates: 1
2020-03-21 10:04:27 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:04:27 -==> Parameters: 
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:04:27 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:04:27 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:04:27 -<==    Updates: 1
2020-03-21 10:04:27 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:04:27 -==> Parameters: 469(String), 469(String)
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:04:27 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:04:27 -<==      Total: 1
2020-03-21 10:04:27 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:04:27 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:04:27 -<==    Updates: 1
2020-03-21 10:04:27 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:04:27 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:04:28 -<==      Total: 1
2020-03-21 10:04:28 -耗时 : 233
2020-03-21 10:05:23 -此处进行解密+验签+身份验证
2020-03-21 10:05:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:05:23 -此处进行解密+验签+身份验证
2020-03-21 10:05:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:05:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:05:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:05:23 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:05:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:05:23 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:05:23 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5b9f6a76 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1510fe23 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@693b44dc (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@251602f8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@4cc73ee2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@49d74f57 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@c50e608 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2b5fd81d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1ea3e047 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@51674627 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:05:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:05:23 -==> Parameters: 469(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:05:23 -==> Parameters: 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -耗时 : 125
2020-03-21 10:05:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:05:23 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:05:23 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:05:23 -<==    Updates: 1
2020-03-21 10:05:23 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:05:23 -==> Parameters: 469(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:05:23 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:05:23 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:05:23 -<==    Updates: 1
2020-03-21 10:05:23 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:05:23 -==> Parameters: 
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:05:23 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:05:23 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:05:23 -<==    Updates: 1
2020-03-21 10:05:23 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:05:23 -==> Parameters: 469(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:05:23 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:05:23 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:05:23 -<==    Updates: 1
2020-03-21 10:05:23 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:05:23 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:05:23 -<==      Total: 1
2020-03-21 10:05:23 -耗时 : 324
2020-03-21 10:07:24 -此处进行解密+验签+身份验证
2020-03-21 10:07:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:07:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:07:24 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:07:24 -此处进行解密+验签+身份验证
2020-03-21 10:07:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:07:24 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:07:24 -==> Parameters: 469(String)
2020-03-21 10:07:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:07:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:07:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -耗时 : 22
2020-03-21 10:07:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:07:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:07:24 -==> Parameters: 469(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:07:24 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:07:24 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:07:24 -<==    Updates: 1
2020-03-21 10:07:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:07:24 -==> Parameters: 469(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:07:24 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:07:24 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:07:24 -<==    Updates: 1
2020-03-21 10:07:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:07:24 -==> Parameters: 
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:07:24 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:07:24 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:07:24 -<==    Updates: 1
2020-03-21 10:07:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:07:24 -==> Parameters: 469(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:07:24 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:07:24 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:07:24 -<==    Updates: 1
2020-03-21 10:07:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:07:24 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:07:24 -<==      Total: 1
2020-03-21 10:07:24 -耗时 : 221
2020-03-21 10:20:21 -此处进行解密+验签+身份验证
2020-03-21 10:20:21 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:20:21 -解密异常：{sign=21249687C81A83A3C01B74D065CDC649, token=469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5}
2020-03-21 10:20:21 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:20:21 -耗时 : 0
2020-03-21 10:20:21 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-21 10:20:21 -Reconnected to 120.25.164.176:10379
2020-03-21 10:23:19 -此处进行解密+验签+身份验证
2020-03-21 10:23:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:23:19 -此处进行解密+验签+身份验证
2020-03-21 10:23:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:23:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:23:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:23:19 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:23:19 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:23:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2e885c19 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2c31c2eb (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@53c4c144 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@65a67a7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3f4037b1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2987a8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@52a0407f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3e6ac5a3 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@48bb9238 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@591aa522 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 10:23:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:23:19 -==> Parameters: 469(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:23:19 -==> Parameters: 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -耗时 : 67
2020-03-21 10:23:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:23:19 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:23:19 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:23:19 -<==    Updates: 1
2020-03-21 10:23:19 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:23:19 -==> Parameters: 469(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:23:19 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:23:19 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:23:19 -<==    Updates: 1
2020-03-21 10:23:19 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:23:19 -==> Parameters: 
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:23:19 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:23:19 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:23:19 -<==    Updates: 1
2020-03-21 10:23:19 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:23:19 -==> Parameters: 469(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:23:19 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:23:19 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:23:19 -<==    Updates: 1
2020-03-21 10:23:19 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:23:19 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:23:19 -<==      Total: 1
2020-03-21 10:23:19 -耗时 : 171
2020-03-21 10:59:41 -此处进行解密+验签+身份验证
2020-03-21 10:59:41 -解密：
2020-03-21 10:59:41 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 10:59:41 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 10:59:41 -==> Parameters: 04(String), 04(String)
2020-03-21 10:59:41 -<==      Total: 1
2020-03-21 10:59:41 -耗时 : 13
2020-03-21 10:59:41 -此处进行解密+验签+身份验证
2020-03-21 10:59:41 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-21 10:59:41 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-21 10:59:41 -SysVersionServiceImpl -- getNewVersion方法处理异常：Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.exists(LettuceKeyCommands.java:80)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.exists(DefaultedRedisConnection.java:55)
	at org.springframework.data.redis.core.RedisTemplate.lambda$hasKey$6(RedisTemplate.java:769)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:769)
	at com.example.longecological.annotations.impl.CacheServiceAspect.processQuery(CacheServiceAspect.java:67)
	at com.example.longecological.annotations.impl.CacheServiceAspect.dealCacheService(CacheServiceAspect.java:54)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.system.impl.SysVersionCacheServiceImpl$$EnhancerBySpringCGLIB$$3ebf32f3.getNewVersion(<generated>)
	at com.example.longecological.service.system.impl.SysVersionServiceImpl.getNewVersion(SysVersionServiceImpl.java:55)
	at com.example.longecological.controller.system.SysVersionController.getNewVersion(SysVersionController.java:38)
	at com.example.longecological.controller.system.SysVersionController$$FastClassBySpringCGLIB$$18e1599d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.system.SysVersionController$$EnhancerBySpringCGLIB$$7aabe05a.getNewVersion(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-03-21 10:59:41 -耗时 : 22
2020-03-21 10:59:41 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-21 10:59:41 -Reconnected to 120.25.164.176:10379
2020-03-21 10:59:42 -此处进行解密+验签+身份验证
2020-03-21 10:59:42 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"E0B85B77F3116FFB00AFC789C54D2E5E","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5"}
2020-03-21 10:59:42 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-21 10:59:42 -token值=======469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5
2020-03-21 10:59:42 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-21 10:59:42 -==> Parameters: 469(String)
2020-03-21 10:59:42 -<==      Total: 1
2020-03-21 10:59:42 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-21 10:59:42 -==> Parameters: 25(String)
2020-03-21 10:59:42 -<==      Total: 1
2020-03-21 10:59:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 10:59:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 10:59:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 10:59:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 10:59:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 10:59:42 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 10:59:42 -耗时 : 76
2020-03-21 10:59:46 -此处进行解密+验签+身份验证
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:59:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:59:46 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:59:46 -==> Parameters: 469(String)
2020-03-21 10:59:46 -<==      Total: 1
2020-03-21 10:59:46 -耗时 : 13
2020-03-21 10:59:46 -此处进行解密+验签+身份验证
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:59:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-21 10:59:46 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-21 10:59:46 -==> Parameters: 469(String)
2020-03-21 10:59:46 -<==      Total: 2
2020-03-21 10:59:46 -耗时 : 13
2020-03-21 10:59:46 -此处进行解密+验签+身份验证
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:59:46 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-21 10:59:46 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-21 10:59:46 -==> Parameters: 
2020-03-21 10:59:46 -<==      Total: 3
2020-03-21 10:59:46 -耗时 : 9
2020-03-21 10:59:46 -此处进行解密+验签+身份验证
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:59:46 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 10:59:46 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 10:59:46 -==> Parameters: 469(String)
2020-03-21 10:59:46 -<==      Total: 1
2020-03-21 10:59:46 -耗时 : 8
2020-03-21 10:59:46 -此处进行解密+验签+身份验证
2020-03-21 10:59:46 -解密：
2020-03-21 10:59:46 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 10:59:46 -此处进行解密+验签+身份验证
2020-03-21 10:59:46 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 10:59:46 -==> Parameters: 01(String), 01(String)
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:59:46 -<==      Total: 4
2020-03-21 10:59:46 -耗时 : 9
2020-03-21 10:59:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:59:46 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:59:46 -==> Parameters: 469(String), 469(String)
2020-03-21 10:59:46 -此处进行解密+验签+身份验证
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 10:59:46 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 10:59:46 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:59:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:59:47 -==> Parameters: 469(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:59:47 -==> Parameters: 469(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 10:59:47 -==> Parameters: 469(String), 469(String)
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:59:47 -==> Parameters: 
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:59:47 -==> Parameters: 469(String), 469(String)
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: 
2020-03-21 10:59:47 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -耗时 : 300
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 10:59:47 -==> Parameters: 469(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 10:59:47 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 10:59:47 -<==    Updates: 1
2020-03-21 10:59:47 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 10:59:47 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 10:59:47 -<==      Total: 1
2020-03-21 10:59:47 -耗时 : 374
2020-03-21 11:00:04 -此处进行解密+验签+身份验证
2020-03-21 11:00:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:05 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:00:05 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:00:05 -==> Parameters: 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -耗时 : 14
2020-03-21 11:00:05 -此处进行解密+验签+身份验证
2020-03-21 11:00:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:05 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:00:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:00:05 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:00:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:00:05 -==> Parameters: 469(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:05 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:05 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:00:05 -<==    Updates: 1
2020-03-21 11:00:05 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:00:05 -==> Parameters: 469(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:05 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:05 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:00:05 -<==    Updates: 1
2020-03-21 11:00:05 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:00:05 -==> Parameters: 
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:05 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:05 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:00:05 -<==    Updates: 1
2020-03-21 11:00:05 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:00:05 -==> Parameters: 469(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:05 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:05 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:00:05 -<==    Updates: 1
2020-03-21 11:00:05 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:05 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:00:05 -<==      Total: 1
2020-03-21 11:00:05 -耗时 : 140
2020-03-21 11:00:18 -此处进行解密+验签+身份验证
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-21 11:00:18 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-21 11:00:18 -==> Parameters: 469(String)
2020-03-21 11:00:18 -<==      Total: 1
2020-03-21 11:00:18 -耗时 : 14
2020-03-21 11:00:18 -此处进行解密+验签+身份验证
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-21 11:00:18 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-21 11:00:18 -==> Parameters: 469(String), 202003(String)
2020-03-21 11:00:18 -此处进行解密+验签+身份验证
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:18 -<==      Total: 0
2020-03-21 11:00:18 -耗时 : 10
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-21 11:00:18 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-21 11:00:18 -==> Parameters: 469(String), 202003(String)
2020-03-21 11:00:18 -<==      Total: 1
2020-03-21 11:00:18 -耗时 : 10
2020-03-21 11:00:18 -此处进行解密+验签+身份验证
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:18 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:18 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-21 11:00:18 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-21 11:00:18 -==> Parameters: 469(String), 202003(String)
2020-03-21 11:00:18 -<==      Total: 1
2020-03-21 11:00:18 -耗时 : 10
2020-03-21 11:00:54 -此处进行解密+验签+身份验证
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:54 -请求地址 : http://192.168.191.1:8080/api/sys/notice/updateNewsReadFlag
2020-03-21 11:00:54 -==>  Preparing: update t_news_read_state set unread_num=0,read_flag=? where user_id=? and news_type=? 
2020-03-21 11:00:54 -==> Parameters: 1(String), 469(String), recallFlag(String)
2020-03-21 11:00:54 -<==    Updates: 1
2020-03-21 11:00:54 -耗时 : 29
2020-03-21 11:00:54 -此处进行解密+验签+身份验证
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRecallTraditionalPosList
2020-03-21 11:00:54 -==>  Preparing: SELECT cast(id as char) as recall_id, sn, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_datetime FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? and pos_type is null AND status = ? ORDER BY id desc limit 0,10 
2020-03-21 11:00:54 -==> Parameters: 469(String), 00(String)
2020-03-21 11:00:54 -<==      Total: 0
2020-03-21 11:00:54 -耗时 : 15
2020-03-21 11:00:54 -此处进行解密+验签+身份验证
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRecallTraditionalPosList
2020-03-21 11:00:54 -==>  Preparing: SELECT cast(id as char) as recall_id, sn, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_datetime FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? and pos_type is null AND status = ? ORDER BY id desc limit 0,10 
2020-03-21 11:00:54 -==> Parameters: 469(String), 08(String)
2020-03-21 11:00:54 -<==      Total: 0
2020-03-21 11:00:54 -耗时 : 8
2020-03-21 11:00:54 -此处进行解密+验签+身份验证
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:54 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:54 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRecallTraditionalPosList
2020-03-21 11:00:54 -==>  Preparing: SELECT cast(id as char) as recall_id, sn, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_datetime FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? and pos_type is null AND status = ? ORDER BY id desc limit 0,10 
2020-03-21 11:00:54 -==> Parameters: 469(String), 09(String)
2020-03-21 11:00:54 -<==      Total: 0
2020-03-21 11:00:54 -耗时 : 8
2020-03-21 11:00:59 -此处进行解密+验签+身份验证
2020-03-21 11:00:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:00:59 -此处进行解密+验签+身份验证
2020-03-21 11:00:59 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:00:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:00:59 -==> Parameters: 469(String)
2020-03-21 11:00:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -耗时 : 17
2020-03-21 11:00:59 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:00:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:00:59 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:00:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:00:59 -==> Parameters: 469(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:59 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:59 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:00:59 -<==    Updates: 1
2020-03-21 11:00:59 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:00:59 -==> Parameters: 469(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:59 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:59 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:00:59 -<==    Updates: 1
2020-03-21 11:00:59 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:00:59 -==> Parameters: 
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:59 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:59 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:00:59 -<==    Updates: 1
2020-03-21 11:00:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:00:59 -==> Parameters: 469(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:59 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:00:59 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:00:59 -<==    Updates: 1
2020-03-21 11:00:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:00:59 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:00:59 -<==      Total: 1
2020-03-21 11:00:59 -耗时 : 149
2020-03-21 11:28:48 -此处进行解密+验签+身份验证
2020-03-21 11:28:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:28:48 -解密异常：{sign=21249687C81A83A3C01B74D065CDC649, token=469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5}
2020-03-21 11:28:48 -请求地址 : http://192.168.191.1:8080/api/sys/message/getMessageRecordList
2020-03-21 11:28:48 -耗时 : 7
2020-03-21 11:28:48 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-21 11:28:48 -Reconnected to 120.25.164.176:10379
2020-03-21 11:28:48 -此处进行解密+验签+身份验证
2020-03-21 11:28:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:28:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:28:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNoticeList
2020-03-21 11:28:48 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc LIMIT ?,? 
2020-03-21 11:28:48 -==> Parameters: 469(String), 0(Integer), 10(Integer)
2020-03-21 11:28:48 -<==      Total: 3
2020-03-21 11:28:48 -耗时 : 19
2020-03-21 11:28:50 -此处进行解密+验签+身份验证
2020-03-21 11:28:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:28:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:28:50 -此处进行解密+验签+身份验证
2020-03-21 11:28:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:28:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:28:50 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:28:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:28:50 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:28:50 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:28:50 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:28:50 -==> Parameters: 469(String)
2020-03-21 11:28:50 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:28:50 -==> Parameters: 469(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:28:50 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -耗时 : 16
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:28:50 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:28:50 -<==    Updates: 1
2020-03-21 11:28:50 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:28:50 -==> Parameters: 469(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:28:50 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:28:50 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:28:50 -<==    Updates: 1
2020-03-21 11:28:50 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:28:50 -==> Parameters: 
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:28:50 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:28:50 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:28:50 -<==    Updates: 1
2020-03-21 11:28:50 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:28:50 -==> Parameters: 469(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:28:50 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:28:50 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:28:50 -<==    Updates: 1
2020-03-21 11:28:50 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:28:50 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:28:50 -<==      Total: 1
2020-03-21 11:28:50 -耗时 : 136
2020-03-21 11:34:43 -此处进行解密+验签+身份验证
2020-03-21 11:34:43 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-21 11:34:43 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-21 11:34:43 -此处进行解密+验签+身份验证
2020-03-21 11:34:43 -解密：
2020-03-21 11:34:43 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 11:34:43 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-21 11:34:43 -耗时 : 8
2020-03-21 11:34:43 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 11:34:43 -==> Parameters: 04(String), 04(String)
2020-03-21 11:34:43 -<==      Total: 1
2020-03-21 11:34:43 -耗时 : 16
2020-03-21 11:34:43 -此处进行解密+验签+身份验证
2020-03-21 11:34:43 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"E0B85B77F3116FFB00AFC789C54D2E5E","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5"}
2020-03-21 11:34:43 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-21 11:34:43 -token值=======469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5
2020-03-21 11:34:43 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-21 11:34:43 -==> Parameters: 469(String)
2020-03-21 11:34:43 -<==      Total: 1
2020-03-21 11:34:43 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-21 11:34:43 -==> Parameters: 25(String)
2020-03-21 11:34:43 -<==      Total: 1
2020-03-21 11:34:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 11:34:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 11:34:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 11:34:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 11:34:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 11:34:43 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 11:34:43 -耗时 : 56
2020-03-21 11:34:47 -此处进行解密+验签+身份验证
2020-03-21 11:34:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:34:47 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:34:47 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:34:47 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:34:47 -==> Parameters: 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -耗时 : 17
2020-03-21 11:34:48 -此处进行解密+验签+身份验证
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:34:48 -此处进行解密+验签+身份验证
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:34:48 -解密：
2020-03-21 11:34:48 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 11:34:48 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 11:34:48 -==> Parameters: 01(String), 01(String)
2020-03-21 11:34:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-21 11:34:48 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-21 11:34:48 -==> Parameters: 469(String)
2020-03-21 11:34:48 -<==      Total: 4
2020-03-21 11:34:48 -耗时 : 12
2020-03-21 11:34:48 -<==      Total: 2
2020-03-21 11:34:48 -耗时 : 11
2020-03-21 11:34:48 -此处进行解密+验签+身份验证
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:34:48 -此处进行解密+验签+身份验证
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:34:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:34:48 -此处进行解密+验签+身份验证
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:34:48 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:34:48 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:34:48 -==> Parameters: 469(String)
2020-03-21 11:34:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:34:48 -==> Parameters: 469(String), 469(String)
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -耗时 : 7
2020-03-21 11:34:48 -此处进行解密+验签+身份验证
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:34:48 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:34:48 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:34:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:34:48 -==> Parameters: 469(String), 469(String)
2020-03-21 11:34:48 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-21 11:34:48 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-21 11:34:48 -==> Parameters: 
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 3
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -耗时 : 13
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:34:48 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:34:48 -==> Parameters: 469(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:34:48 -==> Parameters: 469(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:34:48 -==> Parameters: 
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:34:48 -==> Parameters: 
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:34:48 -==> Parameters: 469(String), 469(String)
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:34:48 -==> Parameters: 469(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:34:48 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -耗时 : 132
2020-03-21 11:34:48 -<==    Updates: 1
2020-03-21 11:34:48 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:34:48 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:34:48 -<==      Total: 1
2020-03-21 11:34:48 -耗时 : 185
2020-03-21 11:35:01 -此处进行解密+验签+身份验证
2020-03-21 11:35:01 -此处进行解密+验签+身份验证
2020-03-21 11:35:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:35:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:35:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:35:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:35:01 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:35:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:35:01 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:35:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:35:01 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:35:01 -==> Parameters: 469(String)
2020-03-21 11:35:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:35:01 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -耗时 : 15
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:01 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:01 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:35:01 -<==    Updates: 1
2020-03-21 11:35:01 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:35:01 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:01 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:01 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:35:01 -<==    Updates: 1
2020-03-21 11:35:01 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:35:01 -==> Parameters: 
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:01 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:01 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:35:01 -<==    Updates: 1
2020-03-21 11:35:01 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:35:01 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:01 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:01 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:35:01 -<==    Updates: 1
2020-03-21 11:35:01 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:01 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:35:01 -<==      Total: 1
2020-03-21 11:35:01 -耗时 : 137
2020-03-21 11:35:04 -此处进行解密+验签+身份验证
2020-03-21 11:35:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:35:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:35:04 -此处进行解密+验签+身份验证
2020-03-21 11:35:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:35:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:35:04 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:35:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:35:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:35:04 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:35:04 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:35:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:35:04 -==> Parameters: 469(String)
2020-03-21 11:35:04 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:04 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -耗时 : 18
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:04 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:35:04 -<==    Updates: 1
2020-03-21 11:35:04 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:35:04 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:04 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:04 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:35:04 -<==    Updates: 1
2020-03-21 11:35:04 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:35:04 -==> Parameters: 
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:04 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:04 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:35:04 -<==    Updates: 1
2020-03-21 11:35:04 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:35:04 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:04 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:04 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:35:04 -<==    Updates: 1
2020-03-21 11:35:04 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:04 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:35:04 -<==      Total: 1
2020-03-21 11:35:04 -耗时 : 156
2020-03-21 11:35:11 -此处进行解密+验签+身份验证
2020-03-21 11:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:35:11 -此处进行解密+验签+身份验证
2020-03-21 11:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:35:11 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:35:11 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:35:11 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:35:11 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 11:35:11 -==> Parameters: 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -耗时 : 11
2020-03-21 11:35:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:35:11 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:11 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:11 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:35:11 -<==    Updates: 1
2020-03-21 11:35:11 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:35:11 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:11 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:11 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:35:11 -<==    Updates: 1
2020-03-21 11:35:11 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:35:11 -==> Parameters: 
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:11 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:11 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:35:11 -<==    Updates: 1
2020-03-21 11:35:11 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:35:11 -==> Parameters: 469(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:11 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:35:11 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:35:11 -<==    Updates: 1
2020-03-21 11:35:11 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:35:11 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:35:11 -<==      Total: 1
2020-03-21 11:35:11 -耗时 : 186
2020-03-21 11:56:31 -此处进行解密+验签+身份验证
2020-03-21 11:56:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:56:31 -解密异常：{sign=21249687C81A83A3C01B74D065CDC649, token=469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5}
2020-03-21 11:56:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 11:56:31 -耗时 : 0
2020-03-21 11:56:31 -此处进行解密+验签+身份验证
2020-03-21 11:56:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 11:56:31 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-21 11:56:31 -Reconnected to 120.25.164.176:10379
2020-03-21 11:56:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 11:56:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 11:56:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 11:56:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 11:56:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:56:31 -==> Parameters: 469(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:56:31 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:56:31 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 11:56:31 -<==    Updates: 1
2020-03-21 11:56:31 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 11:56:31 -==> Parameters: 469(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:56:31 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:56:31 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 11:56:31 -<==    Updates: 1
2020-03-21 11:56:31 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 11:56:31 -==> Parameters: 
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:56:31 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:56:31 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 11:56:31 -<==    Updates: 1
2020-03-21 11:56:31 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 11:56:31 -==> Parameters: 469(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:56:31 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 11:56:31 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 11:56:31 -<==    Updates: 1
2020-03-21 11:56:31 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 11:56:31 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 11:56:31 -<==      Total: 1
2020-03-21 11:56:31 -耗时 : 130
2020-03-21 14:10:56 -Starting LongEcologicalApplication on PC-201905161910 with PID 12216 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-21 14:10:56 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-21 14:10:56 -No active profile set, falling back to default profiles: default
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 14:10:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 14:10:57 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-21 14:10:57 -Finished Spring Data repository scanning in 68ms. Found 0 repository interfaces.
2020-03-21 14:10:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 14:10:57 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-21 14:10:58 -Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-03-21 14:10:58 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$4427a9d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:10:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3eab8e76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:10:58 -Tomcat initialized with port(s): 8080 (http)
2020-03-21 14:10:58 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-21 14:10:58 -Starting service [Tomcat]
2020-03-21 14:10:58 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-21 14:10:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-21 14:10:59 -Initializing Spring embedded WebApplicationContext
2020-03-21 14:10:59 -Root WebApplicationContext: initialization completed in 2499 ms
2020-03-21 14:10:59 -Filter xssFilter was not registered (disabled)
2020-03-21 14:10:59 -HikariPool-1 - Starting...
2020-03-21 14:10:59 -HikariPool-1 - Start completed.
2020-03-21 14:10:59 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-21 14:10:59 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-21 14:10:59 -HHH000206: hibernate.properties not found
2020-03-21 14:11:00 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-21 14:11:00 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-21 14:11:00 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-21 14:11:00 -Using default implementation for ThreadExecutor
2020-03-21 14:11:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-21 14:11:00 -Quartz Scheduler v.2.3.0 created.
2020-03-21 14:11:00 -RAMJobStore initialized.
2020-03-21 14:11:00 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-21 14:11:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-21 14:11:00 -Quartz scheduler version: 2.3.0
2020-03-21 14:11:00 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@100bba26
2020-03-21 14:11:01 -STAET TaskExecutorConfig
2020-03-21 14:11:01 -Initializing ExecutorService
2020-03-21 14:11:01 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-21 14:11:01 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-21 14:11:01 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-21 14:11:02 -Initializing ExecutorService 'taskScheduler'
2020-03-21 14:11:02 -Starting Quartz Scheduler now
2020-03-21 14:11:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-21 14:11:02 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-21 14:11:02 -Using a shared selector for servlet write/read
2020-03-21 14:11:02 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-21 14:11:02 -Started LongEcologicalApplication in 6.284 seconds (JVM running for 7.215)
2020-03-21 15:34:31 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-21 15:34:31 -Initializing Servlet 'dispatcherServlet'
2020-03-21 15:34:31 -Completed initialization in 18 ms
2020-03-21 15:34:31 -此处进行解密+验签+身份验证
2020-03-21 15:34:31 -此处进行解密+验签+身份验证
2020-03-21 15:34:31 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-03-21 15:34:31 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-03-21 15:34:31 -Starting without optional epoll library
2020-03-21 15:34:31 -Starting without optional kqueue library
2020-03-21 15:34:32 -解密：
2020-03-21 15:34:32 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@163d2c5f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@329f6550 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@170c162f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@68ac9f45 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@629d22b1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@2be16e57 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5c2bb86a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@50f1521d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5b726a18 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7bc134f7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 15:34:32 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 15:34:32 -==> Parameters: 04(String), 04(String)
2020-03-21 15:34:32 -<==      Total: 1
2020-03-21 15:34:32 -耗时 : 113
2020-03-21 15:34:32 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-03-21 15:34:32 -耗时 : 827
2020-03-21 15:34:32 -此处进行解密+验签+身份验证
2020-03-21 15:34:32 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"E0B85B77F3116FFB00AFC789C54D2E5E","device_no":"1.0.9","device_type":"android","sys_user_account":"","token":"469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5"}
2020-03-21 15:34:32 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-21 15:34:32 -token值=======469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5
2020-03-21 15:34:32 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-21 15:34:32 -==> Parameters: 469(String)
2020-03-21 15:34:32 -<==      Total: 1
2020-03-21 15:34:32 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-21 15:34:32 -==> Parameters: 25(String)
2020-03-21 15:34:32 -<==      Total: 1
2020-03-21 15:34:32 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 15:34:32 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 15:34:32 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 15:34:32 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 15:34:32 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 15:34:32 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 15:34:32 -耗时 : 125
2020-03-21 15:34:35 -此处进行解密+验签+身份验证
2020-03-21 15:34:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 15:34:35 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 15:34:35 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 15:34:35 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 15:34:35 -==> Parameters: 469(String)
2020-03-21 15:34:35 -<==      Total: 1
2020-03-21 15:34:35 -耗时 : 20
2020-03-21 15:34:45 -Starting LongEcologicalApplication on PC-201905161910 with PID 4316 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-03-21 15:34:45 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-03-21 15:34:45 -No active profile set, falling back to default profiles: default
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-03-21 15:34:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 15:34:46 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-21 15:34:47 -Finished Spring Data repository scanning in 80ms. Found 0 repository interfaces.
2020-03-21 15:34:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 15:34:47 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-21 15:34:47 -Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-03-21 15:34:47 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$4965a4e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:34:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43e98983] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:34:48 -Tomcat initialized with port(s): 8080 (http)
2020-03-21 15:34:48 -Initializing ProtocolHandler ["http-nio-8080"]
2020-03-21 15:34:48 -Starting service [Tomcat]
2020-03-21 15:34:48 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-03-21 15:34:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-03-21 15:34:48 -Initializing Spring embedded WebApplicationContext
2020-03-21 15:34:48 -Root WebApplicationContext: initialization completed in 2447 ms
2020-03-21 15:34:48 -Filter xssFilter was not registered (disabled)
2020-03-21 15:34:48 -HikariPool-1 - Starting...
2020-03-21 15:34:49 -HikariPool-1 - Start completed.
2020-03-21 15:34:49 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-03-21 15:34:49 -HHH000412: Hibernate Core {5.3.7.Final}
2020-03-21 15:34:49 -HHH000206: hibernate.properties not found
2020-03-21 15:34:49 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-03-21 15:34:49 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-03-21 15:34:50 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-21 15:34:50 -Using default implementation for ThreadExecutor
2020-03-21 15:34:50 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-21 15:34:50 -Quartz Scheduler v.2.3.0 created.
2020-03-21 15:34:50 -RAMJobStore initialized.
2020-03-21 15:34:50 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-21 15:34:50 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-03-21 15:34:50 -Quartz scheduler version: 2.3.0
2020-03-21 15:34:50 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7affee54
2020-03-21 15:34:51 -STAET TaskExecutorConfig
2020-03-21 15:34:51 -Initializing ExecutorService
2020-03-21 15:34:51 -Initializing ExecutorService 'getAsyncExecutor'
2020-03-21 15:34:51 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-21 15:34:52 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-21 15:34:52 -Initializing ExecutorService 'taskScheduler'
2020-03-21 15:34:52 -Starting Quartz Scheduler now
2020-03-21 15:34:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-03-21 15:34:52 -Starting ProtocolHandler ["http-nio-8080"]
2020-03-21 15:34:52 -Using a shared selector for servlet write/read
2020-03-21 15:34:52 -Tomcat started on port(s): 8080 (http) with context path ''
2020-03-21 15:34:52 -Started LongEcologicalApplication in 7.803 seconds (JVM running for 9.835)
2020-03-21 15:35:19 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-21 15:35:19 -Initializing Servlet 'dispatcherServlet'
2020-03-21 15:35:19 -Completed initialization in 18 ms
2020-03-21 15:35:19 -此处进行解密+验签+身份验证
2020-03-21 15:35:19 -此处进行解密+验签+身份验证
2020-03-21 15:35:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 15:35:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 15:35:19 -Starting without optional epoll library
2020-03-21 15:35:19 -Starting without optional kqueue library
2020-03-21 15:35:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 15:35:20 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 15:35:20 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-21 15:35:20 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-21 15:35:20 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-21 15:35:20 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-21 15:35:20 -==> Parameters: 469(String), 469(String)
2020-03-21 15:35:20 -==> Parameters: 469(String)
2020-03-21 15:35:20 -<==      Total: 82
2020-03-21 15:35:20 -耗时 : 121
2020-03-21 15:35:20 -<==      Total: 7
2020-03-21 15:35:20 -耗时 : 326
2020-03-21 15:35:22 -此处进行解密+验签+身份验证
2020-03-21 15:35:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 15:35:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 15:35:22 -此处进行解密+验签+身份验证
2020-03-21 15:35:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 15:35:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 15:35:22 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 15:35:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 15:35:22 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 15:35:22 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 15:35:22 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 15:35:22 -==> Parameters: 469(String)
2020-03-21 15:35:22 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:22 -==> Parameters: 469(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:22 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -耗时 : 22
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:22 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 15:35:22 -<==    Updates: 1
2020-03-21 15:35:22 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 15:35:22 -==> Parameters: 469(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:22 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:22 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 15:35:22 -<==    Updates: 1
2020-03-21 15:35:22 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 15:35:22 -==> Parameters: 
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:22 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:22 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 15:35:22 -<==    Updates: 1
2020-03-21 15:35:22 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:22 -==> Parameters: 469(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:22 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:22 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 15:35:22 -<==    Updates: 1
2020-03-21 15:35:22 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:22 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 15:35:22 -<==      Total: 1
2020-03-21 15:35:22 -耗时 : 176
2020-03-21 15:35:27 -此处进行解密+验签+身份验证
2020-03-21 15:35:27 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogOut
2020-03-21 15:35:27 -token值=======469|4PJOSLKDDN5DBTLME0L5SUC581YORWA5
2020-03-21 15:35:27 -==>  Preparing: update t_user_info set device_token=? where id=? 
2020-03-21 15:35:27 -==> Parameters: null, 469(String)
2020-03-21 15:35:27 -<==    Updates: 1
2020-03-21 15:35:27 -耗时 : 78
2020-03-21 15:35:50 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -解密：{"version_no":"","login_password":"8A6F2805B4515AC12058E79E66539BE9","login_type":"account","sign":"30BFEAF2100BB5BE6AB2DCC5E3A4588D","device_no":"1.0.9","device_type":"android","sys_user_account":"18802671616"}
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-21 15:35:51 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-21 15:35:51 -==> Parameters: 18802671616(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-21 15:35:51 -==> Parameters: android(String), 1.0.9(String), (String), null, 192.168.191.1(String), 20200321(String), 153551(String), 426(Integer)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-21 15:35:51 -==> Parameters: 25(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 15:35:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 15:35:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 15:35:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 15:35:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 15:35:51 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 15:35:51 -耗时 : 140
2020-03-21 15:35:51 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 15:35:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 15:35:51 -==> Parameters: 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -耗时 : 13
2020-03-21 15:35:51 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:51 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-21 15:35:51 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-21 15:35:51 -==> Parameters: 
2020-03-21 15:35:51 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-21 15:35:51 -<==      Total: 3
2020-03-21 15:35:51 -耗时 : 18
2020-03-21 15:35:51 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-21 15:35:51 -==> Parameters: 426(String)
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:51 -<==      Total: 2
2020-03-21 15:35:51 -耗时 : 11
2020-03-21 15:35:51 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 15:35:51 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 15:35:51 -==> Parameters: 426(String)
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -耗时 : 14
2020-03-21 15:35:51 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -解密：
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 15:35:51 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 15:35:51 -==> Parameters: 01(String), 01(String)
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-21 15:35:51 -<==      Total: 4
2020-03-21 15:35:51 -耗时 : 12
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-21 15:35:51 -此处进行解密+验签+身份验证
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:51 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-21 15:35:51 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-21 15:35:51 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 15:35:51 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:51 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: recallFlag(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 15:35:51 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: recallFlag(String), 426(String)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 15:35:51 -==> Parameters: 
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: collegeFlag(String), 426(String)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 15:35:51 -==> Parameters: 
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: collegeFlag(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:51 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:51 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: cardFlag(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: cardFlag(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:51 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: appImgFlag(String), 426(String)
2020-03-21 15:35:51 -<==    Updates: 1
2020-03-21 15:35:51 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:51 -==> Parameters: appImgFlag(String), 426(String)
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -耗时 : 164
2020-03-21 15:35:51 -<==      Total: 1
2020-03-21 15:35:51 -耗时 : 215
2020-03-21 15:35:57 -此处进行解密+验签+身份验证
2020-03-21 15:35:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:57 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-21 15:35:57 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-21 15:35:57 -==> Parameters: 426(String)
2020-03-21 15:35:57 -此处进行解密+验签+身份验证
2020-03-21 15:35:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:57 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:57 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-21 15:35:57 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-21 15:35:57 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:57 -<==      Total: 204
2020-03-21 15:35:57 -耗时 : 51
2020-03-21 15:35:57 -<==      Total: 637
2020-03-21 15:35:57 -耗时 : 265
2020-03-21 15:35:58 -此处进行解密+验签+身份验证
2020-03-21 15:35:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:58 -此处进行解密+验签+身份验证
2020-03-21 15:35:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:35:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:35:58 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 15:35:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_426
2020-03-21 15:35:58 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_426 , return
2020-03-21 15:35:59 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 15:35:59 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 15:35:59 -==> Parameters: 426(String)
2020-03-21 15:35:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:59 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:59 -==> Parameters: applyRateFlag(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -耗时 : 20
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:59 -==> Parameters: 0(Integer), 0(Integer), 426(String), applyRateFlag(String)
2020-03-21 15:35:59 -<==    Updates: 1
2020-03-21 15:35:59 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 15:35:59 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:59 -==> Parameters: recallFlag(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:59 -==> Parameters: 0(Integer), 0(Integer), 426(String), recallFlag(String)
2020-03-21 15:35:59 -<==    Updates: 1
2020-03-21 15:35:59 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 15:35:59 -==> Parameters: 
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:59 -==> Parameters: collegeFlag(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:59 -==> Parameters: 25(Integer), 25(Integer), 426(String), collegeFlag(String)
2020-03-21 15:35:59 -<==    Updates: 1
2020-03-21 15:35:59 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 15:35:59 -==> Parameters: 426(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:59 -==> Parameters: cardFlag(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 15:35:59 -==> Parameters: 0(Integer), 0(Integer), 426(String), cardFlag(String)
2020-03-21 15:35:59 -<==    Updates: 1
2020-03-21 15:35:59 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 15:35:59 -==> Parameters: appImgFlag(String), 426(String)
2020-03-21 15:35:59 -<==      Total: 1
2020-03-21 15:35:59 -耗时 : 165
2020-03-21 15:36:01 -此处进行解密+验签+身份验证
2020-03-21 15:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:36:01 -此处进行解密+验签+身份验证
2020-03-21 15:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:36:01 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:36:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposAllocationList
2020-03-21 15:36:01 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_mpos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' order by sn 
2020-03-21 15:36:01 -==> Parameters: 426(String)
2020-03-21 15:36:01 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getMposRecallList
2020-03-21 15:36:01 -==>  Preparing: SELECT t.sn, t.user_id FROM t_user_mpos_info t WHERE t.state_status = '1' AND t.activity_status = '0' AND t.trade_status = '0' AND del = '0' AND t.user_id in (select id from t_user_info where referer_id = ?) AND NOT EXISTS ( SELECT 1 FROM t_user_mpos_recall_record_info t1 WHERE t1.send_user_id = ? AND t1.sn = t.sn AND t1.status = '00') order by t.sn 
2020-03-21 15:36:01 -==> Parameters: 426(String), 426(String)
2020-03-21 15:36:01 -<==      Total: 204
2020-03-21 15:36:01 -耗时 : 43
2020-03-21 15:36:01 -<==      Total: 637
2020-03-21 15:36:01 -耗时 : 34
2020-03-21 15:36:04 -此处进行解密+验签+身份验证
2020-03-21 15:36:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:36:04 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:36:04 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-21 15:36:04 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type='epos' order by sn 
2020-03-21 15:36:04 -==> Parameters: 426(String)
2020-03-21 15:36:04 -<==      Total: 1
2020-03-21 15:36:04 -耗时 : 26
2020-03-21 15:36:06 -此处进行解密+验签+身份验证
2020-03-21 15:36:06 -此处进行解密+验签+身份验证
2020-03-21 15:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 15:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:36:06 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 15:36:06 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getRefererAgency
2020-03-21 15:36:06 -==>  Preparing: SELECT cast(id as char) as user_id, user_tel, real_name, head_photo FROM t_user_info WHERE referer_id = ? and auth_status = '09' 
2020-03-21 15:36:06 -==> Parameters: 426(String)
2020-03-21 15:36:06 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosSysParamRateList
2020-03-21 15:36:06 -<==      Total: 25
2020-03-21 15:36:06 -耗时 : 14
2020-03-21 15:36:06 -==>  Preparing: select * from t_user_traditional_pos_info where user_id=? and sn=? 
2020-03-21 15:36:06 -==> Parameters: 426(String), 0000060262215440946(String)
2020-03-21 15:36:06 -<==      Total: 1
2020-03-21 15:36:06 -==>  Preparing: select FORMAT(rate,3) as rate, type from t_sys_param_rate order by type, cast(rate as decimal(20,2)) 
2020-03-21 15:36:06 -==> Parameters: 
2020-03-21 15:36:06 -<==      Total: 101
2020-03-21 15:36:09 -==>  Preparing: select policy_name from t_sys_pos_policy_info where sn=? and module_type=3 and isuse=1 
2020-03-21 15:36:09 -==> Parameters: 0000060262215440946(String)
2020-03-21 15:36:09 -<==      Total: 0
2020-03-21 15:37:26 -HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m37s689ms902µs561ns).
2020-03-21 15:37:26 -耗时 : 79920
2020-03-21 18:29:31 -此处进行解密+验签+身份验证
2020-03-21 18:29:31 -此处进行解密+验签+身份验证
2020-03-21 18:29:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 18:29:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_426
2020-03-21 18:29:31 -解密异常：{sign=5342846BBE8A91FCF1D7FCE96FA4140B, token=426|FIWJU33OT3I01VB0NV18E3KVXJFR9WJ5}
2020-03-21 18:29:31 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 18:29:31 -耗时 : 1
2020-03-21 18:29:31 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-21 18:29:31 -Reconnected to 120.25.164.176:10379
2020-03-21 18:29:31 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_426 , return
2020-03-21 18:29:31 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 18:29:31 -耗时 : 0
2020-03-21 18:30:09 -此处进行解密+验签+身份验证
2020-03-21 18:30:09 -解密：{"version_no":"","login_password":"8A6F2805B4515AC12058E79E66539BE9","login_type":"account","sign":"CB22A8339FFA3C82D47D502E18B961FA","device_no":"1.0.9","device_type":"android","sys_user_account":"15019499979"}
2020-03-21 18:30:09 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3698fec3 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5bac6070 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@330b0e72 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@42949036 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@49821e5f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@719548ff (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1a06a021 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7cf58677 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@255c1f50 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7e5569b4 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2020-03-21 18:30:09 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-03-21 18:30:09 -==> Parameters: 15019499979(String)
2020-03-21 18:30:09 -<==      Total: 1
2020-03-21 18:30:09 -==>  Preparing: update t_user_info set device_type=?,device_no=?,version_no=?,device_token=?, last_login_ip=?,last_login_date=?,last_login_time=? where id=? 
2020-03-21 18:30:09 -==> Parameters: android(String), 1.0.9(String), (String), null, 192.168.191.1(String), 20200321(String), 183009(String), 469(Integer)
2020-03-21 18:30:09 -<==    Updates: 1
2020-03-21 18:30:09 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-03-21 18:30:09 -==> Parameters: 25(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 18:30:10 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 18:30:10 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 18:30:10 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 18:30:10 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-03-21 18:30:10 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-03-21 18:30:10 -耗时 : 183
2020-03-21 18:30:10 -此处进行解密+验签+身份验证
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:30:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 18:30:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 18:30:10 -==> Parameters: 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -耗时 : 9
2020-03-21 18:30:10 -此处进行解密+验签+身份验证
2020-03-21 18:30:10 -解密：
2020-03-21 18:30:10 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-03-21 18:30:10 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.yhswl.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num 
2020-03-21 18:30:10 -==> Parameters: 01(String), 01(String)
2020-03-21 18:30:10 -<==      Total: 4
2020-03-21 18:30:10 -耗时 : 10
2020-03-21 18:30:10 -此处进行解密+验签+身份验证
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:30:10 -此处进行解密+验签+身份验证
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:30:10 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-03-21 18:30:10 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-03-21 18:30:10 -==> Parameters: 
2020-03-21 18:30:10 -<==      Total: 3
2020-03-21 18:30:10 -耗时 : 9
2020-03-21 18:30:10 -此处进行解密+验签+身份验证
2020-03-21 18:30:10 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:30:10 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-03-21 18:30:10 -==> Parameters: 469(String)
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -耗时 : 13
2020-03-21 18:30:10 -此处进行解密+验签+身份验证
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:30:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 18:30:10 -此处进行解密+验签+身份验证
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:30:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-03-21 18:30:10 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-03-21 18:30:10 -==> Parameters: 469(String)
2020-03-21 18:30:10 -<==      Total: 2
2020-03-21 18:30:10 -耗时 : 7
2020-03-21 18:30:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 18:30:10 -==> Parameters: 469(String), 469(String)
2020-03-21 18:30:10 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 18:30:10 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 18:30:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 18:30:10 -==> Parameters: 469(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 18:30:10 -==> Parameters: 469(String), 469(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 18:30:10 -==> Parameters: 469(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 18:30:10 -==> Parameters: 
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 18:30:10 -==> Parameters: 
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 18:30:10 -==> Parameters: 469(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 18:30:10 -==> Parameters: 469(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -耗时 : 191
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:30:10 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 18:30:10 -<==    Updates: 1
2020-03-21 18:30:10 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:30:10 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 18:30:10 -<==      Total: 1
2020-03-21 18:30:10 -耗时 : 270
2020-03-21 18:32:55 -此处进行解密+验签+身份验证
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:32:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getHeaderInformation
2020-03-21 18:32:55 -此处进行解密+验签+身份验证
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:32:55 -==>  Preparing: SELECT cast(today_benefit as char) as today_benefit, cast((money - today_benefit) as char) AS withdraw_money, cast(settle_money as char) as settle_money, cast(total_benefit as char) as total_benefit FROM t_user_info WHERE id = ? 
2020-03-21 18:32:55 -==> Parameters: 469(String)
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:32:55 -此处进行解密+验签+身份验证
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:32:55 -<==      Total: 1
2020-03-21 18:32:55 -耗时 : 20
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:32:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-21 18:32:55 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type is null 
2020-03-21 18:32:55 -==> Parameters: 469(String), 202003(String)
2020-03-21 18:32:55 -此处进行解密+验签+身份验证
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:32:55 -<==      Total: 0
2020-03-21 18:32:55 -耗时 : 9
2020-03-21 18:32:55 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:32:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreTraditionalPosDetail
2020-03-21 18:32:55 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_traditional_pos_benefit_month WHERE user_id = ? and cre_month = ? and pos_type='epos' 
2020-03-21 18:32:55 -==> Parameters: 469(String), 202003(String)
2020-03-21 18:32:55 -<==      Total: 1
2020-03-21 18:32:55 -耗时 : 8
2020-03-21 18:32:55 -请求地址 : http://192.168.191.1:8080/api/sys/benefitcentre/getBenefitCentreMposDetail
2020-03-21 18:32:55 -==>  Preparing: SELECT cast(benefit as char) benefit, cast(merchant_benefit as char) as merchant_benefit, cast(agency_benefit as char) as agency_benefit, cast(( share_benefit + single_benefit ) as char) AS share_benefit, cast(return_benefit as char) as return_benefit, cast(activity_benefit as char) as activity_benefit, cast(deduct_money as char) as deduct_money FROM t_summary_user_mpos_benefit_month WHERE user_id = ? and cre_month = ? 
2020-03-21 18:32:55 -==> Parameters: 469(String), 202003(String)
2020-03-21 18:32:55 -<==      Total: 1
2020-03-21 18:32:55 -耗时 : 11
2020-03-21 18:34:24 -此处进行解密+验签+身份验证
2020-03-21 18:34:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:34:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:34:24 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 18:34:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 18:34:24 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 18:34:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 18:34:24 -==> Parameters: 469(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:34:24 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:34:24 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 18:34:24 -<==    Updates: 1
2020-03-21 18:34:24 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 18:34:24 -==> Parameters: 469(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:34:24 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:34:24 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 18:34:24 -<==    Updates: 1
2020-03-21 18:34:24 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 18:34:24 -==> Parameters: 
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:34:24 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:34:24 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 18:34:24 -<==    Updates: 1
2020-03-21 18:34:24 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 18:34:24 -==> Parameters: 469(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:34:24 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 18:34:24 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 18:34:24 -<==    Updates: 1
2020-03-21 18:34:24 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 18:34:24 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 18:34:24 -<==      Total: 1
2020-03-21 18:34:24 -耗时 : 148
2020-03-21 18:34:29 -此处进行解密+验签+身份验证
2020-03-21 18:34:29 -此处进行解密+验签+身份验证
2020-03-21 18:34:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:34:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:34:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:34:29 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:34:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyNum
2020-03-21 18:34:29 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getReferAgencyList
2020-03-21 18:34:29 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-03-21 18:34:29 -==> Parameters: 469(String)
2020-03-21 18:34:29 -==>  Preparing: select cast(id as char) as user_id, head_photo, real_name, user_tel from t_user_info where referer_id = ? ORDER BY id desc limit 0,10 
2020-03-21 18:34:29 -==> Parameters: 469(String)
2020-03-21 18:34:29 -<==      Total: 1
2020-03-21 18:34:29 -==>  Preparing: select cast(pos_num as char) as m_pos_num,cast(act_num as char) as m_act_num,cast((pos_num-act_num) as char) as m_inact_num from t_summary_user_mpos_benefit_all where user_id=? 
2020-03-21 18:34:29 -==> Parameters: 469(String)
2020-03-21 18:34:29 -<==      Total: 1
2020-03-21 18:34:29 -==>  Preparing: select cast(pos_num as char) as tra_pos_num,cast(act_num as char) as tra_act_num,cast((pos_num-act_num) as char) as tra_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type is null 
2020-03-21 18:34:29 -==> Parameters: 469(String)
2020-03-21 18:34:29 -<==      Total: 4
2020-03-21 18:34:29 -耗时 : 26
2020-03-21 18:34:29 -<==      Total: 1
2020-03-21 18:34:29 -==>  Preparing: select cast(pos_num as char) as e_pos_num,cast(act_num as char) as e_act_num,cast((pos_num-act_num) as char) as e_inact_num from t_summary_user_traditional_pos_benefit_all where user_id=? and pos_type='epos' 
2020-03-21 18:34:29 -==> Parameters: 469(String)
2020-03-21 18:34:29 -<==      Total: 1
2020-03-21 18:34:29 -耗时 : 46
2020-03-21 18:34:32 -此处进行解密+验签+身份验证
2020-03-21 18:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:34:32 -此处进行解密+验签+身份验证
2020-03-21 18:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:34:32 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type is null 
2020-03-21 18:34:32 -==> Parameters: 469(String)
2020-03-21 18:34:32 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type is null 
2020-03-21 18:34:32 -==> Parameters: 469(String), 469(String), 202003(String)
2020-03-21 18:34:32 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryMposList
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info WHERE user_id = ? AND state_status = '1' AND del='0' 
2020-03-21 18:34:32 -==> Parameters: 469(String)
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type is null AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-21 18:34:32 -==> Parameters: 469(String), 469(String), 20200220(String), 20200321(String), 469(String)
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type is null AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-21 18:34:32 -==> Parameters: 469(String), 20200121(String), 469(String), 20200121(String), 20200321(String), 469(String)
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_mpos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) 
2020-03-21 18:34:32 -==> Parameters: 469(String), 469(String), 202003(String)
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='01' 
2020-03-21 18:34:32 -==> Parameters: 469(String)
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -耗时 : 83
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-21 18:34:32 -==> Parameters: 469(String), 469(String), 20200220(String), 20200321(String), 469(String)
2020-03-21 18:34:32 -<==      Total: 1
2020-03-21 18:34:32 -==>  Preparing: SELECT count(*) FROM t_user_mpos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_mpos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-21 18:34:32 -==> Parameters: 469(String), 20200121(String), 469(String), 20200121(String), 20200321(String), 469(String)
2020-03-21 18:34:33 -<==      Total: 1
2020-03-21 18:34:33 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='02' 
2020-03-21 18:34:33 -==> Parameters: 469(String)
2020-03-21 18:34:33 -<==      Total: 1
2020-03-21 18:34:33 -耗时 : 422
2020-03-21 18:34:36 -此处进行解密+验签+身份验证
2020-03-21 18:34:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:34:36 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:34:36 -请求地址 : http://192.168.191.1:8080/api/sys/merchant/getSummaryTraditionalPosList
2020-03-21 18:34:36 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND del = '0' and pos_type='epos' 
2020-03-21 18:34:36 -==> Parameters: 469(String)
2020-03-21 18:34:36 -<==      Total: 1
2020-03-21 18:34:36 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND EXISTS ( SELECT 1 FROM t_summary_traditional_pos_trans_month t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance >= 50000 AND t1.cre_month = ? ) and t.pos_type='epos' 
2020-03-21 18:34:36 -==> Parameters: 469(String), 469(String), 202003(String)
2020-03-21 18:34:36 -<==      Total: 1
2020-03-21 18:34:36 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' and t.pos_type='epos' AND EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_performance) as merchant_performance, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_performance>=10 AND t1.merchant_num>=2) 
2020-03-21 18:34:36 -==> Parameters: 469(String), 469(String), 20200220(String), 20200321(String), 469(String)
2020-03-21 18:34:36 -<==      Total: 1
2020-03-21 18:34:36 -==>  Preparing: SELECT count(*) FROM t_user_traditional_pos_info t WHERE t.user_id = ? AND t.state_status = '1' AND t.cre_date <= ? and t.pos_type='epos' AND NOT EXISTS ( SELECT 1 FROM ( SELECT user_id, sn, sum(merchant_num) as merchant_num FROM t_summary_traditional_pos_trans_everyday WHERE user_id = ? AND cre_date BETWEEN ? AND ? GROUP BY user_id, sn) t1 WHERE t1.user_id = ? AND t1.sn = t.sn AND t1.merchant_num>0) 
2020-03-21 18:34:36 -==> Parameters: 469(String), 20200121(String), 469(String), 20200121(String), 20200321(String), 469(String)
2020-03-21 18:34:36 -<==      Total: 1
2020-03-21 18:34:36 -==>  Preparing: select count(distinct mer_id) as cnt from t_sys_pos_policy3_record where user_id=? and pos_type='03' 
2020-03-21 18:34:36 -==> Parameters: 469(String)
2020-03-21 18:34:36 -<==      Total: 1
2020-03-21 18:34:36 -耗时 : 152
2020-03-21 18:34:41 -此处进行解密+验签+身份验证
2020-03-21 18:34:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 18:34:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 18:34:41 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/selectPolicy3Record
2020-03-21 18:34:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 18:34:41 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 18:34:41 -==>  Preparing: select sn,mer_id,mer_name,max(trade_amount) as trade_amount,(case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(end_date,'%Y%m%d')) else 0 end) as expire_day, max(begin_date) as begin_date,max(end_date) as end_date,max(choose) as choose,GROUP_CONCAT(policy_id) as policy_id from t_sys_pos_policy3_record where user_id=? and pos_type=? group by sn,mer_id,mer_name,begin_date,end_date,choose order by choose 
2020-03-21 18:34:41 -==> Parameters: 469(String), 03(String)
2020-03-21 18:34:41 -<==      Total: 0
2020-03-21 18:34:41 -耗时 : 29
2020-03-21 19:04:02 -此处进行解密+验签+身份验证
2020-03-21 19:04:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 19:04:02 -解密异常：{sign=2323F3A63FA7F180B86CFCFA0C59FFF4, token=469|408J1ODC31X28GZRHF4I42F1DTG7NENF}
2020-03-21 19:04:02 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-03-21 19:04:02 -耗时 : 0
2020-03-21 19:04:02 -此处进行解密+验签+身份验证
2020-03-21 19:04:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 19:04:02 -Reconnecting, last destination was /120.25.164.176:10379
2020-03-21 19:04:02 -Reconnected to 120.25.164.176:10379
2020-03-21 19:04:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 19:04:02 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-03-21 19:04:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_469
2020-03-21 19:04:02 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_469 , return
2020-03-21 19:04:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 19:04:02 -==> Parameters: 469(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 19:04:02 -==> Parameters: applyRateFlag(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 19:04:02 -==> Parameters: 5(Integer), 5(Integer), 469(String), applyRateFlag(String)
2020-03-21 19:04:02 -<==    Updates: 1
2020-03-21 19:04:02 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-03-21 19:04:02 -==> Parameters: 469(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 19:04:02 -==> Parameters: recallFlag(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 19:04:02 -==> Parameters: 0(Integer), 0(Integer), 469(String), recallFlag(String)
2020-03-21 19:04:02 -<==    Updates: 1
2020-03-21 19:04:02 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-03-21 19:04:02 -==> Parameters: 
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 19:04:02 -==> Parameters: collegeFlag(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 19:04:02 -==> Parameters: 25(Integer), 25(Integer), 469(String), collegeFlag(String)
2020-03-21 19:04:02 -<==    Updates: 1
2020-03-21 19:04:02 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-03-21 19:04:02 -==> Parameters: 469(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 19:04:02 -==> Parameters: cardFlag(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-03-21 19:04:02 -==> Parameters: 5(Integer), 5(Integer), 469(String), cardFlag(String)
2020-03-21 19:04:02 -<==    Updates: 1
2020-03-21 19:04:02 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-03-21 19:04:02 -==> Parameters: appImgFlag(String), 469(String)
2020-03-21 19:04:02 -<==      Total: 1
2020-03-21 19:04:02 -耗时 : 153
2020-03-21 19:04:19 -此处进行解密+验签+身份验证
2020-03-21 19:04:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_469
2020-03-21 19:04:19 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_469 , return
2020-03-21 19:04:19 -请求地址 : http://192.168.191.1:8080/api/sys/machinesmanage/getTraditionalPosAllocationList
2020-03-21 19:04:19 -==>  Preparing: SELECT sn, IFNULL(card_settle_price, '无') AS card_settle_price, IFNULL(weixin_settle_price, '无') AS weixin_settle_price, IFNULL(zhifubao_settle_price,'无') AS zhifubao_settle_price, IFNULL(cloud_settle_price, '无') AS cloud_settle_price, IFNULL(card_settle_price_vip, '无') AS card_settle_price_vip, IFNULL(weixin_settle_price_vip, '无') AS weixin_settle_price_vip, IFNULL(zhifubao_settle_price_vip,'无') AS zhifubao_settle_price_vip, IFNULL(cloud_settle_price_vip, '无') AS cloud_settle_price_vip, IFNULL(single_profit_rate, '无') AS single_profit_rate, IFNULL(cash_back_rate, '无') AS cash_back_rate, (select GROUP_CONCAT(policy_name) from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn) as policy_name, cast((select (case when TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d'))>=0 then TIMESTAMPDIFF(day,CURRENT_DATE,str_to_date(module1_end_date,'%Y%m%d')) else 0 end) as expire_day from t_sys_pos_policy_info tt where tt.sn=t_user_traditional_pos_info.sn and tt.module_type=1) as char) as expire_day FROM t_user_traditional_pos_info WHERE user_id = ? AND state_status = '1' AND activity_status = '0' AND trade_status = '0' AND del = '0' AND pos_type is null order by sn 
2020-03-21 19:04:19 -==> Parameters: 469(String)
2020-03-21 19:04:19 -<==      Total: 0
2020-03-21 19:04:19 -耗时 : 26
2020-03-21 19:12:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-21 19:12:44 -Shutting down ExecutorService 'taskScheduler'
2020-03-21 19:12:44 -Shutting down ExecutorService 'getAsyncExecutor'
2020-03-21 19:12:44 -Shutting down Quartz Scheduler
2020-03-21 19:12:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-03-21 19:12:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-03-21 19:12:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-03-21 19:12:44 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-03-21 19:12:44 -HikariPool-1 - Shutdown initiated...
2020-03-21 19:12:44 -HikariPool-1 - Shutdown completed.
