2020-06-02 10:46:01 -Starting LongEcologicalApplication on PC-201905161910 with PID 8616 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-06-02 10:46:01 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-06-02 10:46:01 -No active profile set, falling back to default profiles: default
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:46:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-02 10:46:02 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-02 10:46:02 -Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2020-06-02 10:46:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-02 10:46:02 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-02 10:46:02 -Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
2020-06-02 10:46:02 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$81678942] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 10:46:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7beb6de2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 10:46:03 -Tomcat initialized with port(s): 8080 (http)
2020-06-02 10:46:03 -Initializing ProtocolHandler ["http-nio-8080"]
2020-06-02 10:46:03 -Starting service [Tomcat]
2020-06-02 10:46:03 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-06-02 10:46:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;D:\360Downloads\apache-maven-3.6.1\apache-maven-3.6.1\bin;"C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;";C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-06-02 10:46:03 -Initializing Spring embedded WebApplicationContext
2020-06-02 10:46:03 -Root WebApplicationContext: initialization completed in 1842 ms
2020-06-02 10:46:03 -Filter xssFilter was not registered (disabled)
2020-06-02 10:46:03 -HikariPool-1 - Starting...
2020-06-02 10:46:04 -HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'zf_123'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:927)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1709)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1252)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2486)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2519)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2304)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:346)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:151)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:112)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051.CGLIB$jpaVendorAdapter$7(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051$$FastClassBySpringCGLIB$$5686cd5f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.example.longecological.LongEcologicalApplication.main(LongEcologicalApplication.java:23)
2020-06-02 10:46:04 -Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'zf_123'@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:112)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051.CGLIB$jpaVendorAdapter$7(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051$$FastClassBySpringCGLIB$$5686cd5f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.example.longecological.LongEcologicalApplication.main(LongEcologicalApplication.java:23)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'zf_123'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 62 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'zf_123'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:927)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1709)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1252)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2486)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2519)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2304)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:346)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:151)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 63 common frames omitted
2020-06-02 10:46:04 -HikariPool-1 - Starting...
2020-06-02 10:46:05 -HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'zf_123'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:927)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1709)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1252)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2486)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2519)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2304)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:346)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:151)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:324)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:123)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:130)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:91)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:143)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:138)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051.CGLIB$entityManagerFactory$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051$$FastClassBySpringCGLIB$$5686cd5f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$9ac23051.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.example.longecological.LongEcologicalApplication.main(LongEcologicalApplication.java:23)
2020-06-02 10:46:05 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-06-02 10:46:06 -HHH000412: Hibernate Core {5.3.7.Final}
2020-06-02 10:46:06 -HHH000206: hibernate.properties not found
2020-06-02 10:46:06 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-06-02 10:46:06 -HikariPool-1 - Starting...
2020-06-02 10:46:07 -HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'zf_123'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:927)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1709)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1252)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2486)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2519)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2304)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:346)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.example.longecological.LongEcologicalApplication.main(LongEcologicalApplication.java:23)
2020-06-02 10:46:07 -HHH000342: Could not obtain connection to query metadata : Access denied for user 'zf_123'@'localhost' (using password: YES)
2020-06-02 10:46:07 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2020-06-02 10:46:07 -Stopping service [Tomcat]
2020-06-02 10:46:07 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-02 10:46:07 -Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.example.longecological.LongEcologicalApplication.main(LongEcologicalApplication.java:23)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 16 common frames omitted
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:137)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 33 common frames omitted
2020-06-02 10:49:12 -Starting LongEcologicalApplication on PC-201905161910 with PID 6320 (D:\javaSVN\zf2_qh\zfPayOver\target\classes started by Administrator in D:\javaSVN\zf2_qh\zfPayOver)
2020-06-02 10:49:12 -Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2020-06-02 10:49:12 -No active profile set, falling back to default profiles: default
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'onlineActivityMapper' and 'com.example.longecological.mapper.activity.OnlineActivityMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'benefitCentreMapper' and 'com.example.longecological.mapper.benefitcentre.BenefitCentreMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysParamMapper' and 'com.example.longecological.mapper.common.SysParamMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysParamRateMapper' and 'com.example.longecological.mapper.common.SysParamRateMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'verifyRecordMapper' and 'com.example.longecological.mapper.common.VerifyRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'machinesManageMapper' and 'com.example.longecological.mapper.machines.MachinesManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'merchantManageMapper' and 'com.example.longecological.mapper.merchant.MerchantManageMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'messageMapper' and 'com.example.longecological.mapper.message.MessageMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'moneyLockerCollegeMapper' and 'com.example.longecological.mapper.moneylocker.MoneyLockerCollegeMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'mposMapper' and 'com.example.longecological.mapper.mpos.MposMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'scheduleJobMapper' and 'com.example.longecological.mapper.quartz.ScheduleJobMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'creditCardRatesApplyMapper' and 'com.example.longecological.mapper.ratesmanage.CreditCardRatesApplyMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'reportFormsMapper' and 'com.example.longecological.mapper.reportforms.ReportFormsMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysAppImgMapper' and 'com.example.longecological.mapper.system.SysAppImgMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysBankInfoMapper' and 'com.example.longecological.mapper.system.SysBankInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysExchangeUrlMapper' and 'com.example.longecological.mapper.system.SysExchangeUrlMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysNewsMapper' and 'com.example.longecological.mapper.system.SysNewsMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysNoticeMapper' and 'com.example.longecological.mapper.system.SysNoticeMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'sysVersionMapper' and 'com.example.longecological.mapper.system.SysVersionMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'test' and 'com.example.longecological.mapper.test.Test' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'traditionalPosMapper' and 'com.example.longecological.mapper.traditionalpos.TraditionalPosMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'userCardInfoMapper' and 'com.example.longecological.mapper.user.UserCardInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'userCashRecordMapper' and 'com.example.longecological.mapper.user.UserCashRecordMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'userFeedBackMapper' and 'com.example.longecological.mapper.user.UserFeedBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.example.longecological.mapper.user.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Skipping MapperFactoryBean with name 'zhongFuBackMapper' and 'com.example.longecological.mapper.zfback.ZhongFuBackMapper' mapperInterface. Bean already defined with the same name!
2020-06-02 10:49:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-02 10:49:13 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-02 10:49:13 -Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2020-06-02 10:49:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-02 10:49:13 -Bootstrapping Spring Data repositories in DEFAULT mode.
2020-06-02 10:49:13 -Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
2020-06-02 10:49:13 -Bean 'taskExecutorConfig' of type [com.example.longecological.config.thread.TaskExecutorConfig$$EnhancerBySpringCGLIB$$763d5d67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 10:49:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$70c14207] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 10:49:14 -Tomcat initialized with port(s): 8080 (http)
2020-06-02 10:49:14 -Initializing ProtocolHandler ["http-nio-8080"]
2020-06-02 10:49:14 -Starting service [Tomcat]
2020-06-02 10:49:14 -Starting Servlet Engine: Apache Tomcat/9.0.13
2020-06-02 10:49:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\NetSarang\Xftp 6\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\MySQL\MySQL Utilities 1.6\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Geth;D:\360Downloads\web3j-3.6.0\bin;C:\Program Files\nodejs\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Redis\;D:\360Downloads\apache-maven-3.6.1\apache-maven-3.6.1\bin;"C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;";C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;D:\360Downloads\web3j-3.6.0\bin;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_181;;.]
2020-06-02 10:49:14 -Initializing Spring embedded WebApplicationContext
2020-06-02 10:49:14 -Root WebApplicationContext: initialization completed in 1962 ms
2020-06-02 10:49:14 -Filter xssFilter was not registered (disabled)
2020-06-02 10:49:14 -HikariPool-1 - Starting...
2020-06-02 10:49:14 -HikariPool-1 - Start completed.
2020-06-02 10:49:14 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-06-02 10:49:14 -HHH000412: Hibernate Core {5.3.7.Final}
2020-06-02 10:49:14 -HHH000206: hibernate.properties not found
2020-06-02 10:49:15 -HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-06-02 10:49:15 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-06-02 10:49:15 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-06-02 10:49:16 -Using default implementation for ThreadExecutor
2020-06-02 10:49:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-06-02 10:49:16 -Quartz Scheduler v.2.3.0 created.
2020-06-02 10:49:16 -RAMJobStore initialized.
2020-06-02 10:49:16 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-06-02 10:49:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-06-02 10:49:16 -Quartz scheduler version: 2.3.0
2020-06-02 10:49:16 -JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@408f70ab
2020-06-02 10:49:16 -STAET TaskExecutorConfig
2020-06-02 10:49:16 -Initializing ExecutorService
2020-06-02 10:49:16 -Initializing ExecutorService 'getAsyncExecutor'
2020-06-02 10:49:16 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-06-02 10:49:17 -Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-06-02 10:49:17 -Initializing ExecutorService 'taskScheduler'
2020-06-02 10:49:17 -Starting Quartz Scheduler now
2020-06-02 10:49:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-06-02 10:49:17 -Starting ProtocolHandler ["http-nio-8080"]
2020-06-02 10:49:17 -Using a shared selector for servlet write/read
2020-06-02 10:49:17 -Tomcat started on port(s): 8080 (http) with context path ''
2020-06-02 10:49:17 -Started LongEcologicalApplication in 6.131 seconds (JVM running for 7.078)
2020-06-02 10:59:20 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-02 10:59:20 -Initializing Servlet 'dispatcherServlet'
2020-06-02 10:59:20 -Completed initialization in 18 ms
2020-06-02 10:59:20 -此处进行解密+验签+身份验证
2020-06-02 10:59:20 -此处进行解密+验签+身份验证
2020-06-02 10:59:20 -请求地址 : http://192.168.191.1:8080/api/sys/version/getNewVersion
2020-06-02 10:59:20 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,cacheKey:zfpay_sys_version_info_new_android
2020-06-02 10:59:21 -Starting without optional epoll library
2020-06-02 10:59:21 -Starting without optional kqueue library
2020-06-02 10:59:21 -解密：
2020-06-02 10:59:21 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-06-02 10:59:21 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-06-02 10:59:21 -==> Parameters: 04(String), 04(String)
2020-06-02 10:59:21 -<==      Total: 1
2020-06-02 10:59:21 -耗时 : 59
2020-06-02 10:59:21 -Map com.example.longecological.service.system.impl.SysVersionCacheServiceImpl.getNewVersion(Map) enable cache service,has cacheKey:zfpay_sys_version_info_new_android , return
2020-06-02 10:59:21 -耗时 : 679
2020-06-02 10:59:33 -此处进行解密+验签+身份验证
2020-06-02 10:59:33 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 10:59:34 -耗时 : 313
2020-06-02 11:00:33 -此处进行解密+验签+身份验证
2020-06-02 11:00:33 -解密：{"bus_type":"FrontRegister","img_code":"713Q","sign":"0DB966494E881260EE1074522437C430","img_id":"20200602105933783991028","sys_user_account":"13456789000"}
2020-06-02 11:00:33 -请求地址 : http://192.168.191.1:8080/api/common/smsCode/sendSmsCodeOnly
2020-06-02 11:00:33 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:00:33 -==> Parameters: 13456789000(String)
2020-06-02 11:00:33 -<==      Total: 0
2020-06-02 11:00:33 -耗时 : 64
2020-06-02 11:00:33 -此处进行解密+验签+身份验证
2020-06-02 11:00:33 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 11:00:33 -耗时 : 13
2020-06-02 11:05:47 -此处进行解密+验签+身份验证
2020-06-02 11:05:47 -解密：{"bus_type":"FrontRegister","img_code":"s552","sign":"E7CE1CFB650188B80EC78358CDC762D7","img_id":"20200602110033279166107","sys_user_account":"13456789000"}
2020-06-02 11:05:47 -请求地址 : http://192.168.191.1:8080/api/common/smsCode/sendSmsCodeOnly
2020-06-02 11:05:47 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:05:47 -==> Parameters: 13456789000(String)
2020-06-02 11:05:47 -<==      Total: 0
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendHourLimit
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendHourLimit , return
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDayLimit
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDayLimit , return
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDuration
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDuration , return
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifyInvalidDuration
2020-06-02 11:05:47 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifyInvalidDuration , return
2020-06-02 11:05:47 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:05:47 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13456789000(String)
2020-06-02 11:05:47 -<==      Total: 0
2020-06-02 11:05:47 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:05:47 -==> Parameters: SystemFront(String), 13456789000(String), 2020-06-02 11:05:47(String), 1(Integer)
2020-06-02 11:05:47 -<==      Total: 1
2020-06-02 11:05:47 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:05:47 -==> Parameters: SystemFront(String), 13456789000(String), 2020-06-02 11:05:47(String), 24(Integer)
2020-06-02 11:05:47 -<==      Total: 1
2020-06-02 11:05:49 -==>  Preparing: insert into t_verify_record ( system_type, bus_type, acc_type, account, code, create_time, send_time, invalid_time, msg_template ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-02 11:05:49 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13456789000(String), 147746(String), 2020-06-02 11:05:47(String), 2020-06-02 11:05:47(String), 2020-06-02 11:20:47(String), lcw(String)
2020-06-02 11:05:49 -<==    Updates: 1
2020-06-02 11:05:49 -耗时 : 1515
2020-06-02 11:06:55 -此处进行解密+验签+身份验证
2020-06-02 11:06:55 -解密：{"version_no":"1.1.7","login_password":"8A6F2805B4515AC12058E79E66539BE9","sms_code":"147746","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","sign":"405D116D17CFBF6E8EE40EDDFD147939","device_type":"android","invite_code":"18124242084","sys_user_account":"13456789000"}
2020-06-02 11:06:55 -请求地址 : http://192.168.191.1:8080/api/user/login/userRegister
2020-06-02 11:06:55 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:06:55 -==> Parameters: 13456789000(String)
2020-06-02 11:06:55 -<==      Total: 0
2020-06-02 11:06:55 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:06:55 -==> Parameters: 18124242084(String)
2020-06-02 11:06:55 -<==      Total: 1
2020-06-02 11:06:55 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:06:55 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13456789000(String)
2020-06-02 11:06:55 -<==      Total: 1
2020-06-02 11:06:55 -==>  Preparing: update t_verify_record SET `id` = ?, `system_type` = ?, `bus_type` = ?, `acc_type` = ?, `account` = ?, `code` = ?, `status` = ?, `create_time` = ?, `send_time` = ?, `invalid_time` = ?, `verify_time` = ? where id = ? 
2020-06-02 11:06:55 -==> Parameters: 27(Integer), SystemFront(String), FrontRegister(String), 1(String), 13456789000(String), 147746(String), 1(String), 2020-06-02 11:05:47(String), 2020-06-02 11:05:47(String), 2020-06-02 11:20:47(String), 2020-06-02 11:06:55(String), 27(Integer)
2020-06-02 11:06:55 -<==    Updates: 1
2020-06-02 11:07:24 -sendPost - http://localhost:28080/platform/sys/user/appSave?username=13456789000
2020-06-02 11:07:24 -recv - <!DOCTYPE html><html><head>    <meta charset="utf-8">    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <title>统一登录页面</title>    <!-- Tell the browser to be responsive to screen width -->    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">    <link rel="stylesheet" href="statics/css/bootstrap.min.css">    <link rel="stylesheet" href="statics/css/font-awesome.min.css">    <link rel="stylesheet" href="statics/css/style.css">    <link rel="stylesheet" href="statics/css/login.css">    <link rel="stylesheet" href="statics/css/main.css">    <link rel="stylesheet" href="statics/css/iview.css">    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->    <!--[if lt IE 9]>    <script src="statics/libs/html5shiv.min.js"></script>    <script src="statics/libs/respond.min.js"></script>    <![endif]-->    <script>        var _hmt = _hmt || [];        (function () {            var hm = document.createElement("script");            hm.src = "https://hm.baidu.com/hm.js?4656e49e8efa9f2ad6868ea26fb8984c";            var s = document.getElementsByTagName("script")[0];            s.parentNode.insertBefore(hm, s);        })();    </script></head><body class="signin hold-transition login-page"><div class="loginscreen animated fadeInDown signinpanel" id="loginBox" v-cloak>    <div class="row">        <div class="col-md-7">            <div class="signin-info"><!--                <div class="logopanel m-b">--><!--                    <h1> 微同商城 / 安徽微同科技有限公司</h1>--><!--                </div>--><!--                <div class="m-b"></div>--><!--                <h4>欢迎使用 <strong>微同开源商城管理平台</strong></h4>--><!--                <ul class="m-b">--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> 一个微信商城开发平台，能快速开发一个商城</li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i>--><!--                        使用当下最流行的Spring+SpringMVC+Mybatis+Shiro+J2Cache技术--><!--                    </li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> 友好的代码结构及注释，便于阅读及二次开发</li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> 完善的XSS防范及脚本过滤，彻底杜绝XSS攻击</li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> 日志分级输出，便于分析日志</li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> 前端使用Vue+iView，上手容易</li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> 官方QQ群：66502035(微同科技1群) 870579539(微同科技2群)--><!--                        151602347(微同科技3群)--><!--                    </li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> <a--><!--                            href="https://gitee.com/fuyang_lipengjun/platform" target="_blank" style="color: white;">Git：https://gitee.com/fuyang_lipengjun/platform</a>--><!--                    </li>--><!--                    <li><i class="fa fa-arrow-circle-o-right m-r-xs"></i> <a--><!--                            href="https://apidoc.gitee.com/fuyang_lipengjun/platform" target="_blank"--><!--                            style="color: white;">JavaDoc：https://apidoc.gitee.com/fuyang_lipengjun/platform</a></li>--><!--                </ul>-->            </div>        </div>        <div class="col-md-5">            <Card class="m-t text-center" style="background: rgba(109, 109, 109, 0.23);border: 0px solid #dddee1;">                <p style="padding: 0 20px 20px 20px;">登录到综合管理平台</p>                <div class="form-group has-feedback">                    <i-input v-model="username" @on-enter="login" placeholder="账号" style="width: 200px;" autofocus/>                </div>                <div class="form-group has-feedback">                    <i-input type="password" v-model="password" @on-enter="login" style="width: 200px;"                             placeholder="密码"/>                </div>                <div class="form-group has-feedback">                    <div style="display: inline-block;width: 100px;">                        <i-input v-model="captcha" @on-enter="login"                                 placeholder="验证码"/>                    </div>                    <div style="display: inline-block;width: 100px;">                        <img style="height: 32px;width: 96px;border-radius: 4px;" alt="如果看不清楚，请单击图片刷新！" title="点击刷新"                             class="pointer" :src="src" @click="refreshCode">                    </div>                </div>                <div>                    <i-button type="primary" @click="login" style="width: 200px;">登录</i-button>                </div>            </Card>        </div>    </div>    <div class="signup-footer">        <div class="pull-left">        </div>    </div></div><!-- /.login-box --><script src="statics/libs/jquery.min.js"></script><script src="statics/libs/vue.min.js"></script><script src="statics/libs/iview.min.js"></script><script src="statics/libs/bootstrap.min.js"></script><script src="statics/plugins/slimscroll/jquery.slimscroll.min.js"></script><script src="statics/libs/fastclick.min.js"></script><script type="text/javascript">    var vm = new Vue({        el: '#loginBox',        data: {            username: 'admin',            password: 'admin',            captcha: '',            src: 'captcha.jpg'        },        beforeCreate: function () {            if (self != top) {                top.location.href = self.location.href;            }        },        methods: {            refreshCode: function () {                this.src = "captcha.jpg?t=" + $.now();            },            login: function (event) {                if (vm.username == '') {                    iview.Message.warning("用户名为空");                    return false;                }                if (vm.password == '') {                    iview.Message.warning("密码为空");                    return false;                }                if (vm.captcha == '') {                    iview.Message.warning("验证码为空");                    return false;                }                var data = "username=" + vm.username + "&password=" + vm.password + "&captcha=" + vm.captcha;                $.ajax({                    type: "POST",                    url: "sys/login",                    data: data,                    dataType: "json",                    success: function (result) {                        if (result.code == 0) {//登录成功                            parent.location.href = 'index.html';                        } else {                            vm.refreshCode();                            iview.Message.error(result.msg);                        }                    }                });            }        }    });</script></body></html>
2020-06-02 11:07:41 -==>  Preparing: UPDATE t_user_info SET under_num=under_num+1, up_date=?, up_time=? WHERE find_in_set(id,?) 
2020-06-02 11:07:41 -==> Parameters: 20200602(String), 110655(String), 181,1823,1847(String)
2020-06-02 11:07:41 -<==    Updates: 3
2020-06-02 11:07:41 -==>  Preparing: update t_user_info set referer_num=referer_num+1, up_date=?, up_time=? where id=? 
2020-06-02 11:07:41 -==> Parameters: 20200602(String), 110655(String), 1847(String)
2020-06-02 11:07:41 -<==    Updates: 1
2020-06-02 11:07:41 -==>  Preparing: insert into t_user_info ( user_tel,login_password,pay_password,head_photo,referer_id,manager_id,algebra,parent_chain,device_type,device_no,version_no,cre_date,cre_time) values ( ?,?,?,?,?,?, ?,?,?,?,?,?,?) 
2020-06-02 11:07:41 -==> Parameters: 13456789000(String), d843f00e9ff4abfb3be809611f4df2e5(String), d7a9f9dbc12a45552a00728a835af61f(String), defaultHeadPhoto.png(String), 1847(String), 26(String), 4(Integer), 181,1823,1847(String), android(String), null, 1.1.7(String), 20200602(String), 110655(String)
2020-06-02 11:07:41 -<==    Updates: 1
2020-06-02 11:07:41 -耗时 : 45767
2020-06-02 11:22:02 -此处进行解密+验签+身份验证
2020-06-02 11:22:02 -解密：{"version_no":"1.1.7","login_password":"8A6F2805B4515AC12058E79E66539BE9","sms_code":"147746","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","sign":"405D116D17CFBF6E8EE40EDDFD147939","device_type":"android","invite_code":"18124242084","sys_user_account":"13456789000"}
2020-06-02 11:22:02 -请求地址 : http://192.168.191.1:8080/api/user/login/userRegister
2020-06-02 11:22:02 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:22:02 -==> Parameters: 13456789000(String)
2020-06-02 11:22:02 -<==      Total: 1
2020-06-02 11:22:02 -耗时 : 682
2020-06-02 11:22:02 -此处进行解密+验签+身份验证
2020-06-02 11:22:02 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 11:22:02 -耗时 : 10
2020-06-02 11:22:09 -此处进行解密+验签+身份验证
2020-06-02 11:22:09 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 11:22:09 -耗时 : 9
2020-06-02 11:22:46 -此处进行解密+验签+身份验证
2020-06-02 11:22:46 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 11:22:46 -耗时 : 11
2020-06-02 11:22:57 -此处进行解密+验签+身份验证
2020-06-02 11:22:57 -解密：{"bus_type":"FrontRegister","img_code":"9X8B","sign":"95D8246197B1B25BB4B8D4FCEEFEDF73","img_id":"20200602112246445629876","sys_user_account":"18123232121"}
2020-06-02 11:22:57 -请求地址 : http://192.168.191.1:8080/api/common/smsCode/sendSmsCodeOnly
2020-06-02 11:22:57 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:22:57 -==> Parameters: 18123232121(String)
2020-06-02 11:22:57 -<==      Total: 0
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendHourLimit
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendHourLimit , return
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDayLimit
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDayLimit , return
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDuration
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDuration , return
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifyInvalidDuration
2020-06-02 11:22:57 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifyInvalidDuration , return
2020-06-02 11:22:57 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:22:57 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 18123232121(String)
2020-06-02 11:22:57 -<==      Total: 0
2020-06-02 11:22:57 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:22:57 -==> Parameters: SystemFront(String), 18123232121(String), 2020-06-02 11:22:57(String), 1(Integer)
2020-06-02 11:22:57 -<==      Total: 1
2020-06-02 11:22:57 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:22:57 -==> Parameters: SystemFront(String), 18123232121(String), 2020-06-02 11:22:57(String), 24(Integer)
2020-06-02 11:22:57 -<==      Total: 1
2020-06-02 11:22:57 -==>  Preparing: insert into t_verify_record ( system_type, bus_type, acc_type, account, code, create_time, send_time, invalid_time, msg_template ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-02 11:22:57 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 18123232121(String), 177634(String), 2020-06-02 11:22:57(String), 2020-06-02 11:22:57(String), 2020-06-02 11:37:57(String), lcw(String)
2020-06-02 11:22:57 -<==    Updates: 1
2020-06-02 11:22:57 -耗时 : 181
2020-06-02 11:23:15 -此处进行解密+验签+身份验证
2020-06-02 11:23:15 -解密：{"version_no":"1.1.7","login_password":"8A6F2805B4515AC12058E79E66539BE9","sms_code":"177634","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","sign":"E394277D5E69B6A65FB701951E1FDC2F","device_type":"android","invite_code":"13111111111","sys_user_account":"18123232121"}
2020-06-02 11:23:15 -请求地址 : http://192.168.191.1:8080/api/user/login/userRegister
2020-06-02 11:23:15 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:23:15 -==> Parameters: 18123232121(String)
2020-06-02 11:23:15 -<==      Total: 0
2020-06-02 11:23:15 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:23:15 -==> Parameters: 13111111111(String)
2020-06-02 11:23:15 -<==      Total: 0
2020-06-02 11:23:15 -耗时 : 17
2020-06-02 11:23:15 -此处进行解密+验签+身份验证
2020-06-02 11:23:15 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 11:23:15 -耗时 : 7
2020-06-02 11:23:36 -此处进行解密+验签+身份验证
2020-06-02 11:23:36 -解密：{"version_no":"1.1.7","login_password":"8A6F2805B4515AC12058E79E66539BE9","sms_code":"177634","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","sign":"D959B0D0DF8CCE3557FC79EA897D223E","device_type":"android","invite_code":"18124242084","sys_user_account":"18123232121"}
2020-06-02 11:23:36 -请求地址 : http://192.168.191.1:8080/api/user/login/userRegister
2020-06-02 11:23:36 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:23:36 -==> Parameters: 18123232121(String)
2020-06-02 11:23:36 -<==      Total: 0
2020-06-02 11:23:36 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:23:36 -==> Parameters: 18124242084(String)
2020-06-02 11:23:36 -<==      Total: 1
2020-06-02 11:23:36 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:23:36 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 18123232121(String)
2020-06-02 11:23:36 -<==      Total: 1
2020-06-02 11:23:36 -==>  Preparing: update t_verify_record SET `id` = ?, `system_type` = ?, `bus_type` = ?, `acc_type` = ?, `account` = ?, `code` = ?, `status` = ?, `create_time` = ?, `send_time` = ?, `invalid_time` = ?, `verify_time` = ? where id = ? 
2020-06-02 11:23:36 -==> Parameters: 28(Integer), SystemFront(String), FrontRegister(String), 1(String), 18123232121(String), 177634(String), 1(String), 2020-06-02 11:22:57(String), 2020-06-02 11:22:57(String), 2020-06-02 11:37:57(String), 2020-06-02 11:23:36(String), 28(Integer)
2020-06-02 11:23:36 -<==    Updates: 1
2020-06-02 11:23:46 -sendPost - http://localhost:28080/platform/api/zhongfu/appSave?username=18123232121
2020-06-02 11:23:46 -调用HttpUtils.sendPost IOException, url=http://localhost:28080/platform/api/zhongfu/appSave,param=username=18123232121
java.io.FileNotFoundException: http://localhost:28080/platform/api/zhongfu/appSave?username=18123232121
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1890)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at com.example.longecological.utils.http.HttpUtils.sendPost(HttpUtils.java:124)
	at com.example.longecological.service.user.impl.UserLoginServiceImpl.userRegister(UserLoginServiceImpl.java:195)
	at com.example.longecological.service.user.impl.UserLoginServiceImpl$$FastClassBySpringCGLIB$$b1492584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.service.user.impl.UserLoginServiceImpl$$EnhancerBySpringCGLIB$$a53d0cee.userRegister(<generated>)
	at com.example.longecological.controller.user.UserLoginController.userRegister(UserLoginController.java:62)
	at com.example.longecological.controller.user.UserLoginController$$FastClassBySpringCGLIB$$77717560.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.example.longecological.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.longecological.controller.user.UserLoginController$$EnhancerBySpringCGLIB$$e4652419.userRegister(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-06-02 11:41:28 -==>  Preparing: UPDATE t_user_info SET under_num=under_num+1, up_date=?, up_time=? WHERE find_in_set(id,?) 
2020-06-02 11:41:28 -HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=18m4s239ms802µs743ns).
2020-06-02 11:41:28 -==> Parameters: 20200602(String), 112336(String), 181,1823,1847(String)
2020-06-02 11:41:28 -<==    Updates: 3
2020-06-02 11:41:28 -==>  Preparing: update t_user_info set referer_num=referer_num+1, up_date=?, up_time=? where id=? 
2020-06-02 11:41:28 -==> Parameters: 20200602(String), 112336(String), 1847(String)
2020-06-02 11:41:28 -<==    Updates: 1
2020-06-02 11:41:28 -==>  Preparing: insert into t_user_info ( user_tel,login_password,pay_password,head_photo,referer_id,manager_id,algebra,parent_chain,device_type,device_no,version_no,cre_date,cre_time) values ( ?,?,?,?,?,?, ?,?,?,?,?,?,?) 
2020-06-02 11:41:28 -==> Parameters: 18123232121(String), 625477d1a1fe2b60b59b1f4cbd96bc75(String), 1038c1be1560c9e841fc216129bfb4e0(String), defaultHeadPhoto.png(String), 1847(String), 26(String), 4(Integer), 181,1823,1847(String), android(String), null, 1.1.7(String), 20200602(String), 112336(String)
2020-06-02 11:41:28 -<==    Updates: 1
2020-06-02 11:41:28 -耗时 : 1071572
2020-06-02 11:41:36 -此处进行解密+验签+身份验证
2020-06-02 11:41:36 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 11:41:36 -耗时 : 23
2020-06-02 11:42:13 -此处进行解密+验签+身份验证
2020-06-02 11:42:13 -解密：{"bus_type":"FrontRegister","img_code":"5GPG","sign":"3B6A45ACF575BB02BF8371D364A0F758","img_id":"20200602114136617555246","sys_user_account":"13233333333"}
2020-06-02 11:42:13 -请求地址 : http://192.168.191.1:8080/api/common/smsCode/sendSmsCodeOnly
2020-06-02 11:42:13 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:42:13 -==> Parameters: 13233333333(String)
2020-06-02 11:42:13 -<==      Total: 0
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendHourLimit
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendHourLimit , return
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDayLimit
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDayLimit , return
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDuration
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDuration , return
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifyInvalidDuration
2020-06-02 11:42:13 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifyInvalidDuration , return
2020-06-02 11:42:13 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:42:13 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13233333333(String)
2020-06-02 11:42:13 -<==      Total: 0
2020-06-02 11:42:13 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:42:13 -==> Parameters: SystemFront(String), 13233333333(String), 2020-06-02 11:42:13(String), 1(Integer)
2020-06-02 11:42:13 -<==      Total: 1
2020-06-02 11:42:13 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:42:13 -==> Parameters: SystemFront(String), 13233333333(String), 2020-06-02 11:42:13(String), 24(Integer)
2020-06-02 11:42:13 -<==      Total: 1
2020-06-02 11:42:13 -==>  Preparing: insert into t_verify_record ( system_type, bus_type, acc_type, account, code, create_time, send_time, invalid_time, msg_template ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-02 11:42:13 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13233333333(String), 333775(String), 2020-06-02 11:42:13(String), 2020-06-02 11:42:13(String), 2020-06-02 11:57:13(String), lcw(String)
2020-06-02 11:42:13 -<==    Updates: 1
2020-06-02 11:42:13 -耗时 : 151
2020-06-02 11:42:26 -此处进行解密+验签+身份验证
2020-06-02 11:42:26 -解密：{"version_no":"1.1.7","login_password":"8A6F2805B4515AC12058E79E66539BE9","sms_code":"333775","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","sign":"9FE2553A721F4918DECC6F34B8BE9FDC","device_type":"android","invite_code":"18124242084","sys_user_account":"13233333333"}
2020-06-02 11:42:26 -请求地址 : http://192.168.191.1:8080/api/user/login/userRegister
2020-06-02 11:42:26 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:42:26 -==> Parameters: 13233333333(String)
2020-06-02 11:42:26 -<==      Total: 0
2020-06-02 11:42:26 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:42:26 -==> Parameters: 18124242084(String)
2020-06-02 11:42:26 -<==      Total: 1
2020-06-02 11:42:26 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:42:26 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13233333333(String)
2020-06-02 11:42:26 -<==      Total: 1
2020-06-02 11:42:26 -==>  Preparing: update t_verify_record SET `id` = ?, `system_type` = ?, `bus_type` = ?, `acc_type` = ?, `account` = ?, `code` = ?, `status` = ?, `create_time` = ?, `send_time` = ?, `invalid_time` = ?, `verify_time` = ? where id = ? 
2020-06-02 11:42:26 -==> Parameters: 29(Integer), SystemFront(String), FrontRegister(String), 1(String), 13233333333(String), 333775(String), 1(String), 2020-06-02 11:42:13(String), 2020-06-02 11:42:13(String), 2020-06-02 11:57:13(String), 2020-06-02 11:42:26(String), 29(Integer)
2020-06-02 11:42:26 -<==    Updates: 1
2020-06-02 11:42:35 -sendPost - http://localhost:28080/platform/api/zhongfu/appSave?username=13233333333
2020-06-02 11:42:35 -recv - {"errno":1,"data":"Required SysUserEntity parameter 'user' is not present","errmsg":"处理异常"}
2020-06-02 11:43:05 -==>  Preparing: UPDATE t_user_info SET under_num=under_num+1, up_date=?, up_time=? WHERE find_in_set(id,?) 
2020-06-02 11:43:05 -==> Parameters: 20200602(String), 114226(String), 181,1823,1847(String)
2020-06-02 11:43:05 -<==    Updates: 3
2020-06-02 11:43:05 -==>  Preparing: update t_user_info set referer_num=referer_num+1, up_date=?, up_time=? where id=? 
2020-06-02 11:43:05 -==> Parameters: 20200602(String), 114226(String), 1847(String)
2020-06-02 11:43:05 -<==    Updates: 1
2020-06-02 11:43:05 -==>  Preparing: insert into t_user_info ( user_tel,login_password,pay_password,head_photo,referer_id,manager_id,algebra,parent_chain,device_type,device_no,version_no,cre_date,cre_time) values ( ?,?,?,?,?,?, ?,?,?,?,?,?,?) 
2020-06-02 11:43:05 -==> Parameters: 13233333333(String), ee95c366fd17299b3fe408ce88796254(String), 52c46c02b3a1f1222a79fd57ceb3ff33(String), defaultHeadPhoto.png(String), 1847(String), 26(String), 4(Integer), 181,1823,1847(String), android(String), null, 1.1.7(String), 20200602(String), 114226(String)
2020-06-02 11:43:05 -<==    Updates: 1
2020-06-02 11:43:05 -耗时 : 38816
2020-06-02 11:49:20 -此处进行解密+验签+身份验证
2020-06-02 11:49:20 -请求地址 : http://192.168.191.1:8080/api/common/imgCode/createImgCode
2020-06-02 11:49:20 -耗时 : 7
2020-06-02 11:50:07 -此处进行解密+验签+身份验证
2020-06-02 11:50:07 -解密：{"bus_type":"FrontRegister","img_code":"LQL5","sign":"1C45335CC949976D9A424AF05B8C7A8E","img_id":"20200602114920841337118","sys_user_account":"13263636363"}
2020-06-02 11:50:07 -请求地址 : http://192.168.191.1:8080/api/common/smsCode/sendSmsCodeOnly
2020-06-02 11:50:07 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:50:07 -==> Parameters: 13263636363(String)
2020-06-02 11:50:07 -<==      Total: 0
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendHourLimit
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendHourLimit , return
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDayLimit
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDayLimit , return
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifySendDuration
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifySendDuration , return
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_verifyInvalidDuration
2020-06-02 11:50:07 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_verifyInvalidDuration , return
2020-06-02 11:50:07 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:50:07 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13263636363(String)
2020-06-02 11:50:07 -<==      Total: 0
2020-06-02 11:50:07 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:50:07 -==> Parameters: SystemFront(String), 13263636363(String), 2020-06-02 11:50:07(String), 1(Integer)
2020-06-02 11:50:07 -<==      Total: 1
2020-06-02 11:50:07 -==>  Preparing: SELECT count(*) FROM t_verify_record WHERE system_type = ? and account = ? and send_time>? -INTERVAL ? HOUR 
2020-06-02 11:50:07 -==> Parameters: SystemFront(String), 13263636363(String), 2020-06-02 11:50:07(String), 24(Integer)
2020-06-02 11:50:07 -<==      Total: 1
2020-06-02 11:50:07 -==>  Preparing: insert into t_verify_record ( system_type, bus_type, acc_type, account, code, create_time, send_time, invalid_time, msg_template ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-02 11:50:07 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13263636363(String), 807335(String), 2020-06-02 11:50:07(String), 2020-06-02 11:50:07(String), 2020-06-02 12:05:07(String), lcw(String)
2020-06-02 11:50:07 -<==    Updates: 1
2020-06-02 11:50:07 -耗时 : 144
2020-06-02 11:50:24 -此处进行解密+验签+身份验证
2020-06-02 11:50:24 -解密：{"version_no":"1.1.7","login_password":"8A6F2805B4515AC12058E79E66539BE9","sms_code":"807335","pay_password":"E10ADC3949BA59ABBE56E057F20F883E","sign":"1E75C837F843BC1A517E5C58AA02B5F6","device_type":"android","invite_code":"18124242084","sys_user_account":"13263636363"}
2020-06-02 11:50:24 -请求地址 : http://192.168.191.1:8080/api/user/login/userRegister
2020-06-02 11:50:24 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:50:24 -==> Parameters: 13263636363(String)
2020-06-02 11:50:24 -<==      Total: 0
2020-06-02 11:50:24 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, card_photo, real_name, auth_status, money, settle_money, deduct_money, login_password, pay_password, head_photo, referer_id, status, algebra, parent_chain, cre_date, cre_time FROM t_user_info where user_tel=? 
2020-06-02 11:50:24 -==> Parameters: 18124242084(String)
2020-06-02 11:50:24 -<==      Total: 1
2020-06-02 11:50:24 -==>  Preparing: SELECT * FROM t_verify_record WHERE system_type = ? and bus_type = ? and acc_type = ? and account = ? order by send_time desc limit 0,1 
2020-06-02 11:50:24 -==> Parameters: SystemFront(String), FrontRegister(String), 1(String), 13263636363(String)
2020-06-02 11:50:24 -<==      Total: 1
2020-06-02 11:50:24 -==>  Preparing: update t_verify_record SET `id` = ?, `system_type` = ?, `bus_type` = ?, `acc_type` = ?, `account` = ?, `code` = ?, `status` = ?, `create_time` = ?, `send_time` = ?, `invalid_time` = ?, `verify_time` = ? where id = ? 
2020-06-02 11:50:24 -==> Parameters: 30(Integer), SystemFront(String), FrontRegister(String), 1(String), 13263636363(String), 807335(String), 1(String), 2020-06-02 11:50:07(String), 2020-06-02 11:50:07(String), 2020-06-02 12:05:07(String), 2020-06-02 11:50:24(String), 30(Integer)
2020-06-02 11:50:24 -<==    Updates: 1
2020-06-02 11:50:24 -sendPost - http://localhost:28080/platform/api/zhongfu/appSave?username=13263636363
2020-06-02 11:50:24 -recv - {"code":0}
2020-06-02 11:50:24 -==>  Preparing: UPDATE t_user_info SET under_num=under_num+1, up_date=?, up_time=? WHERE find_in_set(id,?) 
2020-06-02 11:50:24 -==> Parameters: 20200602(String), 115024(String), 181,1823,1847(String)
2020-06-02 11:50:24 -<==    Updates: 3
2020-06-02 11:50:24 -==>  Preparing: update t_user_info set referer_num=referer_num+1, up_date=?, up_time=? where id=? 
2020-06-02 11:50:24 -==> Parameters: 20200602(String), 115024(String), 1847(String)
2020-06-02 11:50:24 -<==    Updates: 1
2020-06-02 11:50:24 -==>  Preparing: insert into t_user_info ( user_tel,login_password,pay_password,head_photo,referer_id,manager_id,algebra,parent_chain,device_type,device_no,version_no,cre_date,cre_time) values ( ?,?,?,?,?,?, ?,?,?,?,?,?,?) 
2020-06-02 11:50:24 -==> Parameters: 13263636363(String), b2f2fde052e260a027a793a7349ae611(String), 7844c537ca9adaa6306750ea4bc50111(String), defaultHeadPhoto.png(String), 1847(String), 26(String), 4(Integer), 181,1823,1847(String), android(String), null, 1.1.7(String), 20200602(String), 115024(String)
2020-06-02 11:50:24 -<==    Updates: 1
2020-06-02 11:50:24 -耗时 : 103
2020-06-02 11:50:24 -此处进行解密+验签+身份验证
2020-06-02 11:50:24 -解密：{"version_no":"","login_password":"","login_type":"token","sign":"D0C6B3733899AAF157BE5347CB0A5EAB","device_no":"1.1.7","device_type":"android","sys_user_account":"","token":"2722|7ZXP0SX1BZ120HYPNBVWFW1G7GUULR2T"}
2020-06-02 11:50:24 -请求地址 : http://192.168.191.1:8080/api/user/login/userLogin
2020-06-02 11:50:24 -token值=======2722|7ZXP0SX1BZ120HYPNBVWFW1G7GUULR2T
2020-06-02 11:50:24 -==>  Preparing: SELECT * FROM t_user_info where id = ? 
2020-06-02 11:50:24 -==> Parameters: 2722(String)
2020-06-02 11:50:24 -<==      Total: 1
2020-06-02 11:50:24 -==>  Preparing: SELECT user_id AS manager_id, auth_isaudit, card_isaudit, app_id FROM sys_user WHERE user_id = ? AND del_flag='0' AND status='0' 
2020-06-02 11:50:24 -==> Parameters: 26(String)
2020-06-02 11:50:24 -<==      Total: 1
2020-06-02 11:50:24 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-06-02 11:50:24 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-06-02 11:50:24 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-06-02 11:50:24 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-06-02 11:50:24 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,cacheKey:zfpay_sys_param_openThreeTierDistribution
2020-06-02 11:50:24 -String com.example.longecological.service.common.impl.SysParamServiceImpl.getParamByCode(String) enable cache service,has cacheKey:zfpay_sys_param_openThreeTierDistribution , return
2020-06-02 11:50:24 -耗时 : 28
2020-06-02 11:50:25 -此处进行解密+验签+身份验证
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2722
2020-06-02 11:50:25 -==>  Preparing: select * from t_user_frozen where user_id = ? 
2020-06-02 11:50:25 -==> Parameters: 2722(String)
2020-06-02 11:50:25 -<==      Total: 0
2020-06-02 11:50:25 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) proceed,save result to cache,redisKey:zfpay_user_freeze_2722,save content:null
2020-06-02 11:50:25 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-06-02 11:50:25 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-06-02 11:50:25 -==> Parameters: 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -耗时 : 11
2020-06-02 11:50:25 -此处进行解密+验签+身份验证
2020-06-02 11:50:25 -解密：
2020-06-02 11:50:25 -请求地址 : http://192.168.191.1:8080/api/sys/appImg/getAppImgList
2020-06-02 11:50:25 -==>  Preparing: SELECT id, img_type, (case when ?='04' then concat('http://cdn.szbypos.com/',img_url) else img_url end) as img_url FROM t_sys_app_img where img_type=? ORDER BY order_num desc 
2020-06-02 11:50:25 -==> Parameters: 01(String), 01(String)
2020-06-02 11:50:25 -<==      Total: 4
2020-06-02 11:50:25 -耗时 : 14
2020-06-02 11:50:25 -此处进行解密+验签+身份验证
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2722
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2722 , return
2020-06-02 11:50:25 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getNewNotice
2020-06-02 11:50:25 -==>  Preparing: SELECT cast(t.id as char) as notice_id, t.notice_title, cast((select count(*) from t_user_read_notice_info where user_id = ? and notice_id = t.id) as char) as is_read, DATE_FORMAT( STR_TO_DATE( CONCAT(t.cre_date, t.cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_notice_info t where t.status=0 order by t.id desc limit 0,2 
2020-06-02 11:50:25 -==> Parameters: 2722(String)
2020-06-02 11:50:25 -<==      Total: 2
2020-06-02 11:50:25 -耗时 : 13
2020-06-02 11:50:25 -此处进行解密+验签+身份验证
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2722
2020-06-02 11:50:25 -此处进行解密+验签+身份验证
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2722
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2722 , return
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2722 , return
2020-06-02 11:50:25 -请求地址 : http://192.168.191.1:8080/api/sys/news/getNewNews
2020-06-02 11:50:25 -此处进行解密+验签+身份验证
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2722
2020-06-02 11:50:25 -==>  Preparing: SELECT cast(id as char) as news_id, news_title, news_cover, cast(browse_num as char) as browse_num, DATE_FORMAT( STR_TO_DATE( CONCAT(cre_date, cre_time), '%Y%m%d%H%i%s' ), '%Y-%m-%d %H:%i:%s' ) AS cre_date FROM t_sys_news_info where status=0 order by id desc limit 0,3 
2020-06-02 11:50:25 -==> Parameters: 
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2722 , return
2020-06-02 11:50:25 -请求地址 : http://192.168.191.1:8080/api/user/info/getUserNewInfo
2020-06-02 11:50:25 -==>  Preparing: SELECT money, settle_money, deduct_money, today_benefit, total_benefit, settle_single_feet_money, single_rate_feet_money FROM t_user_info WHERE id = ? 
2020-06-02 11:50:25 -==> Parameters: 2722(String)
2020-06-02 11:50:25 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-06-02 11:50:25 -<==      Total: 3
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -耗时 : 4
2020-06-02 11:50:25 -耗时 : 14
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2722
2020-06-02 11:50:25 -==>  Preparing: SELECT id, manager_id, user_tel, real_name, id_card, status, auth_status, login_password, pay_password, referer_id, algebra, parent_chain, cre_date, cre_time FROM t_user_info where id = ? 
2020-06-02 11:50:25 -==> Parameters: 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -after Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) proceed,save result to cache,redisKey:zfpay_user_info_id_2722,save content:{referer_id=1847, parent_chain=181,1823,1847, user_tel=13263636363, id_card=null, real_name=null, algebra=4, cre_date=20200602, cre_time=115024, login_password=b2f2fde052e260a027a793a7349ae611, manager_id=26, pay_password=7844c537ca9adaa6306750ea4bc50111, id=2722, auth_status=00, status=0}
2020-06-02 11:50:25 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-02 11:50:25 -==> Parameters: 2722(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: applyRateFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 0
2020-06-02 11:50:25 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-02 11:50:25 -==> Parameters: 2722(String), applyRateFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-06-02 11:50:25 -==> Parameters: 2722(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: recallFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 0
2020-06-02 11:50:25 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-02 11:50:25 -==> Parameters: 2722(String), recallFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-06-02 11:50:25 -==> Parameters: 
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: collegeFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 0
2020-06-02 11:50:25 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-02 11:50:25 -==> Parameters: 2722(String), collegeFlag(String), 0(Integer), 25(Integer), 26(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-02 11:50:25 -==> Parameters: 2722(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: cardFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 0
2020-06-02 11:50:25 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-02 11:50:25 -==> Parameters: 2722(String), cardFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: appImgFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 0
2020-06-02 11:50:25 -==>  Preparing: insert into t_news_read_state(user_id,news_type,pre_unread_num,unread_num,manager_id) values(?,?,?,?,?) 
2020-06-02 11:50:25 -==> Parameters: 2722(String), appImgFlag(String), 0(Integer), 0(Integer), 26(String)
2020-06-02 11:50:25 -此处进行解密+验签+身份验证
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -耗时 : 167
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,cacheKey:zfpay_user_freeze_2722
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserFreezeCacheById(String) enable cache service,has cacheKey:zfpay_user_freeze_2722 , return
2020-06-02 11:50:25 -请求地址 : http://192.168.191.1:8080/api/sys/notice/getUnReadNews
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,cacheKey:zfpay_user_info_id_2722
2020-06-02 11:50:25 -Map com.example.longecological.service.user.impl.UserInfoCacheServiceImpl.getUserInfoCacheById(String) enable cache service,has cacheKey:zfpay_user_info_id_2722 , return
2020-06-02 11:50:25 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-02 11:50:25 -==> Parameters: 2722(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: applyRateFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-02 11:50:25 -==> Parameters: 0(Integer), 0(Integer), 2722(String), applyRateFlag(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select sum(cnt) from (SELECT count(*) as cnt FROM t_user_trapos_recall_record_info WHERE acce_user_id = ? AND status = '00' union SELECT count(*) as cnt FROM t_user_mpos_recall_record_info WHERE acce_user_id = ? AND status = '00') t 
2020-06-02 11:50:25 -==> Parameters: 2722(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: recallFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-02 11:50:25 -==> Parameters: 0(Integer), 0(Integer), 2722(String), recallFlag(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select count(*) as cnt from t_sys_money_locker_college_info 
2020-06-02 11:50:25 -==> Parameters: 
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: collegeFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-02 11:50:25 -==> Parameters: 25(Integer), 25(Integer), 2722(String), collegeFlag(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select sum(cnt) from (select count(*) as cnt from t_user_apply_cardrate_trapos_record_info where user_id = ? and status in('08','09') union select count(*) as cnt from t_user_apply_cardrate_mpos_record_info where user_id = ? and status in('08','09')) t 
2020-06-02 11:50:25 -==> Parameters: 2722(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: cardFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -==>  Preparing: update t_news_read_state set pre_unread_num=?,unread_num=? where user_id=? and news_type=? 
2020-06-02 11:50:25 -==> Parameters: 0(Integer), 0(Integer), 2722(String), cardFlag(String)
2020-06-02 11:50:25 -<==    Updates: 1
2020-06-02 11:50:25 -==>  Preparing: select * from t_news_read_state where news_type=? and user_id=? 
2020-06-02 11:50:25 -==> Parameters: appImgFlag(String), 2722(String)
2020-06-02 11:50:25 -<==      Total: 1
2020-06-02 11:50:25 -耗时 : 77
2020-06-02 11:55:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-06-02 11:55:21 -Shutting down ExecutorService 'taskScheduler'
2020-06-02 11:55:21 -Shutting down ExecutorService 'getAsyncExecutor'
2020-06-02 11:55:21 -Shutting down Quartz Scheduler
2020-06-02 11:55:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-06-02 11:55:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-06-02 11:55:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-06-02 11:55:21 -Closing JPA EntityManagerFactory for persistence unit 'default'
2020-06-02 11:55:21 -HikariPool-1 - Shutdown initiated...
2020-06-02 11:55:21 -HikariPool-1 - Shutdown completed.
